---
# Global settings
# create defectdojo specific secret
createSecret: true
# create rabbitmq secret outside of rabbitmq chart
createRabbitMqSecret: true
# create redis secret outside of redis chart
createRedisSecret: true
# create mysql secret outside of mysql chart
createMysqlSecret: true
# create postgresql secret outside of postgresql chart
createPostgresqlSecret: true
## Configuration value to select database type
## Option to use "postgresql" or "mysql" database type, by default "postgresql" is chosen
## Set the "enable" field to true of the database type you select (if you want to use internal database) and false of the one you don't select
database: postgresql
host: defectdojo.default.minikube.local
imagePullPolicy: Always
# Where to pull the defectDojo images from. Defaults to "defectdojo/*" repositories on hub.docker.com
repositoryPrefix: defectdojo
# When using a private registry, name of the secret that holds the registry secret (eg deploy token from gitlab-ci project)
# imagePullSecrets: defectdojoregistrykey
tag: latest

admin:
  user: admin
  firstName: Administrator
  lastName: User
  mail: admin@defectdojo.local

monitoring:
  enabled: false

# Components
celery:
  broker: rabbitmq
  logLevel: DEBUG
  beat:
    affinity: {}
    nodeSelector: {}
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    tolerations: []
  worker:
    affinity: {}
    logLevel: DEBUG
    nodeSelector: {}
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    tolerations: []

django:
  affinity: {}
  ingress:
    enabled: true
    activateTLS: true
    secretName: defectdojo-tls
    annotations:
      # Restricts the type of ingress controller that can interact with our chart (nginx, traefik, ...)
      #kubernetes.io/ingress.class: nginx
  nginx:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
  nodeSelector: {}
  replicas: 1
  tolerations: []
  uwsgi:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi

initializer:
  run: true
  keepSeconds: 60
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

mysql:
  enabled: false
  mysqlUser: defectdojo
  existingSecret: defectdojo-mysql-specific
  mysqlDatabase: defectdojo
  service:
    port: 3306  
  # To use an external mySQL instance, set enabled to false and uncomment
  # the line below:
  # mysqlServer: ""
  # To use an external secret for the password for an external mySQL instance,
  # set enabled to false and provide the name of the secret on the line below:
  # mysqlPasswordSecret: ""  

postgresql:
  enabled: true
  postgresqlUsername: defectdojo
  postgresqlDatabase: defectdojo
  existingSecret: defectdojo-postgresql-specific
  persistence:
    enabled: true
  replication:
    enabled: false
  service:
    port: 5432  
  # To use an external PostgreSQL instance, set enabled to false and uncomment
  # the line below:
  # postgresServer: ""
  # To use an external secret for the password for PostgreSQL
  # instance, set enabled to false and provide the name of the secret on the
  # line below:
  # existingSecret: ""    

rabbitmq:
  enabled: true
  replicas: 1
  rabbitmq:
    existingPasswordSecret: defectdojo-rabbitmq-specific
    existingErlangSecret: defectdojo-rabbitmq-specific

redis:
  enabled: false
  existingSecret: defectdojo-redis-specific
  cluster:
    slaveCount: 1

