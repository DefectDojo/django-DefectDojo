{{- $fullName := include "defectdojo.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-django
  labels:
    defectdojo.org/component: django
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
spec:
  replicas: {{ .Values.django.replicas }}
  selector:
    matchLabels:
      defectdojo.org/component: django
      app.kubernetes.io/name: {{ include "defectdojo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        defectdojo.org/component: django
        app.kubernetes.io/name: {{ include "defectdojo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      volumes:
      - name: run
        emptyDir: {}
      containers:
      - name: uwsgi
        image: '{{ template "django.uwsgi.repository" . }}:{{ .Values.tag }}'
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        - name: run
          mountPath: /run
        envFrom:
        - configMapRef:
            name: {{ $fullName }}
        env:
        - name: DD_CELERY_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              # Use broker chart secret
              # name: {{ $fullName }}-{{ .Values.celery.broker }}
              # Use secret handled outside of the chart
              name: defectdojo-{{ .Values.celery.broker }}-specific
              key: {{ .Values.celery.broker }}-password
        - name: DD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if eq .Values.database "postgresql" }}
              # use postgresql chart secret
              # name: {{- if .Values.postgresql.enabled }} {{ $fullName }}-{{ .Values.database }} {{- else }} {{ .Values.postgresql.existingSecret }} {{- end }}
              # Use secret handled outside of the chart
              name: {{- if .Values.postgresql.enabled }} defectdojo-postgresql-specific {{- else }} {{ .Values.postgresql.existingSecret }} {{- end }}
              key: postgresql-password
              {{- else if eq .Values.database "mysql" }}
              # Use mysql chart secret
              # name: {{- if .Values.mysql.enabled }} {{ $fullName }}-{{ .Values.database }} {{- else }} {{ .Values.mysql.mysqlPasswordSecret }} {{- end }}
              # Use secret handled outside of the chart
              name: {{- if .Values.mysql.enabled }} defectdojo-mysql-specific {{- else }} {{ .Values.mysql.mysqlPasswordSecret }} {{- end }}
              key: mysql-password
              {{- end }}   
        resources:
          {{- toYaml .Values.django.uwsgi.resources | nindent 10 }}
      - name: nginx
        image: '{{ template "django.nginx.repository" . }}:{{ .Values.tag }}'
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        - name: run
          mountPath: /run
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ $fullName }}
        env:
        - name: METRICS_HTTP_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $fullName }}
              key: METRICS_HTTP_AUTH_PASSWORD
        livenessProbe:
          httpGet:
            path: /
            port: http
            httpHeaders:
            - name: Host
              value: {{ .Values.host }}
          initialDelaySeconds: 120
          periodSeconds: 10
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: http
            httpHeaders:
            - name: Host
              value: {{ .Values.host }}
          initialDelaySeconds: 120
          periodSeconds: 10
          failureThreshold: 12
        resources:
          {{- toYaml .Values.django.nginx.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.django.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.django.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
