{{- if .Values.createRedisSecret -}}
apiVersion: v1
kind: Secret
metadata:
  annotations:
    {{- if (not .Values.disableHooks) }}
    helm.sh/resource-policy: keep
    helm.sh/hook: "pre-install"
    helm.sh/hook-delete-policy: "before-hook-creation"
    {{- end }}
    {{- range $key, $value := mergeOverwrite dict .Values.extraAnnotations .Values.secrets.annotations }}
    {{ $key }}: {{ quote $value }}
    {{- end }}
  labels:
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
    {{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ quote $value }}
    {{- end }}
  name: {{ .Values.redis.auth.existingSecret }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
{{- if .Values.redis.auth.password }}
  {{ .Values.redis.auth.existingSecretPasswordKey }}: {{ .Values.redis.auth.password | b64enc | quote }}
{{- else }}
  {{ .Values.redis.auth.existingSecretPasswordKey }}: {{ randAlphaNum 10 | b64enc | quote }}
{{- end }}
{{- end }}
