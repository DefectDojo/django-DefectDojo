{{- $fullName := include "defectdojo.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with mergeOverwrite dict .Values.extraAnnotations .Values.celery.annotations .Values.celery.worker.annotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ quote $value }}
    {{- end }}
  {{- end }}
  labels:
    defectdojo.org/component: celery
    defectdojo.org/subcomponent: worker
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
    {{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ quote $value }}
    {{- end }}
  name: {{ $fullName }}-celery-worker
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.celery.worker.replicas }}
  {{- with .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ . }}
  {{- end }}
  selector:
    matchLabels:
      defectdojo.org/component: celery
      defectdojo.org/subcomponent: worker
      app.kubernetes.io/name: {{ include "defectdojo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        defectdojo.org/component: celery
        defectdojo.org/subcomponent: worker
        app.kubernetes.io/name: {{ include "defectdojo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- range $key, $value := mergeOverwrite dict .Values.extraLabels .Values.podLabels }}
        {{ $key }}: {{ quote $value }}
        {{- end }}
      annotations:
      {{- range $key, $value := mergeOverwrite dict .Values.extraAnnotations .Values.celery.annotations .Values.celery.worker.podAnnotations }}
        {{ $key }}: {{ quote $value }}
      {{- end }}
      {{- if eq (.Values.trackConfig | default "disabled") "enabled" }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/esecret: {{ include (print $.Template.BasePath "/extra-secret.yaml") . | sha256sum }}
      {{- end }}
    spec:
      {{- if .Values.securityContext.enabled }} 
      securityContext:
        {{- include "helpers.securityContext" (list
          .Values
          "securityContext.podSecurityContext"
          "celery.worker.podSecurityContext"
        ) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "defectdojo.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ . }}
      {{- end }}
      volumes:
      {{- if .Values.localsettingspy }}
      - name: localsettingspy
        configMap:
          name: {{ $fullName }}-localsettingspy
      {{- end }}
      {{- if .Values.django.uwsgi.certificates.enabled }}
      - name: cert-mount
        configMap:
          name: {{ .Values.django.uwsgi.certificates.configName }}
      {{- end }}
      {{- with .Values.celery.worker.extraVolumes }}
        {{- . | toYaml | nindent 6 }}
      {{- end }}
      {{- if coalesce .Values.dbMigrationChecker.enabled .Values.cloudsql.enabled .Values.celery.worker.extraInitContainers }}
      initContainers:
      {{- range .Values.celery.worker.extraInitContainers }}
      - {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.cloudsql.enabled  }}
      {{- include "cloudsqlProxy" . | nindent 6 }}
      {{- end }}
      {{- if .Values.dbMigrationChecker.enabled }}
      {{$data := dict "fullName" $fullName }}
      {{- $newContext := merge . (dict "fullName" $fullName) }}
      {{- include "dbMigrationChecker" $newContext | nindent 6 }}
      {{- end }}
      containers:
      - name: celery
        image: "{{ template "celery.repository" . }}:{{ .Values.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- with .Values.celery.worker.livenessProbe }}
        livenessProbe: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.celery.worker.readinessProbe }}
        readinessProbe: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.celery.worker.startupProbe }}
        startupProbe: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.securityContext.enabled }}
        securityContext:
          {{- include "helpers.securityContext" (list
            .Values
            "securityContext.containerSecurityContext"
            "celery.worker.containerSecurityContext"
          ) | nindent 10 }}
        {{- end }}
        command: ['/entrypoint-celery-worker.sh']
        volumeMounts:
        {{- if .Values.localsettingspy }}
        - name: localsettingspy
          readOnly: true
          mountPath: /app/dojo/settings/local_settings.py
          subPath: file
        {{- end }}
        {{- if .Values.django.uwsgi.certificates.enabled }}
        - name: cert-mount
          mountPath: {{ .Values.django.uwsgi.certificates.certMountPath }}
        {{- end }}
        {{- with .Values.celery.worker.extraVolumeMounts }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $fullName }}
        - secretRef:
            name: {{ $fullName }}-extrasecrets
            optional: true
        env:
        - name: DD_CELERY_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if eq .Values.celery.broker "redis" }}
              name: {{ .Values.redis.auth.existingSecret| default "defectdojo-redis-specific" }}
              key: {{ .Values.redis.auth.existingSecretPasswordKey | default "redis-password" }}
            {{- end }}
        - name: DD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresql.auth.existingSecret | default "defectdojo-postgresql-specific" }}
              key: {{ .Values.postgresql.auth.secretKeys.userPasswordKey | default "postgresql-password" }}
        - name: DD_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ $fullName }}
              key: DD_SECRET_KEY
              optional: true
        {{- with .Values.extraEnv }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
        {{- with .Values.celery.worker.extraEnv }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml .Values.celery.worker.resources | nindent 10 }}
      {{- with .Values.celery.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.celery.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.celery.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
