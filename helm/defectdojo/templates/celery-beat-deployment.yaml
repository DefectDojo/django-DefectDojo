{{- $fullName := include "defectdojo.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-celery-beat
  labels:
    defectdojo.org/component: celery
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
spec:
  replicas: {{ .Values.celery.beat.replicas }}
  selector:
    matchLabels:
      defectdojo.org/component: celery
      app.kubernetes.io/name: {{ include "defectdojo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        defectdojo.org/component: celery
        app.kubernetes.io/name: {{ include "defectdojo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
      {{- with .Values.celery.beat.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ $fullName }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
      {{- if .Values.cloudsql.enabled  }}
      - name: cloudsql-proxy
        image: {{ .Values.cloudsql.image.repository }}:{{ .Values.cloudsql.image.tag }}
        imagePullPolicy: {{ .Values.cloudsql.image.pullPolicy }}
        securityContext:
          runAsNonRoot: true
        command: ["/cloud_sql_proxy"]
        args:
        {{- if eq .Values.database "postgresql" }}
        - "-instances={{ .Values.cloudsql.instance }}=tcp:{{ .Values.postgresql.service.port }}"
        {{- else if eq .Values.database "mysql" }}
        - "-instances={{ .Values.cloudsql.instance }}=tcp:{{ .Values.mysql.service.port }}"
        {{- end }}
      {{- end }}
      - command:
        - /entrypoint-celery-beat.sh
        name: celery
        image: "{{ template "celery.repository" . }}:{{ .Values.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext.djangoSecurityContext | nindent 10 }}    
        envFrom:
        - configMapRef:
            name: {{ $fullName }}
        - secretRef:
            name: {{ $fullName }}-extrasecrets
            optional: true
        env:
        - name: DD_CELERY_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defectdojo-{{ .Values.celery.broker }}-specific
              key: {{ .Values.celery.broker }}-password
        - name: DD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if eq .Values.database "postgresql" }}
              name: {{ .Values.postgresql.existingSecret }}
              key: {{ .Values.postgresql.secretKey }}
              {{- else if eq .Values.database "mysql" }}
              name: {{ .Values.mysql.existingSecret }}
              key: {{ .Values.mysql.secretKey }}
              {{- end }}
        - name: DD_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ $fullName }}
              key: DD_SECRET_KEY
        resources:
          {{- toYaml .Values.celery.beat.resources | nindent 10 }}
      {{- with .Values.celery.beat.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.celery.beat.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.celery.beat.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
