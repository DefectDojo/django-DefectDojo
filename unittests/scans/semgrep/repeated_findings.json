{
  "results": [
    {
      "check_id": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
      "path": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java",
      "start": {
        "line": 66,
        "col": 4
      },
      "end": {
        "line": 66,
        "col": 83
      },
      "extra": {
        "message": "Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor\ncould discern the difference between plaintext with valid or invalid padding. Further,\nCBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.\nUse 'AES/GCM/NoPadding' instead.\n",
        "metavars": {
          "$CIPHER": {
            "start": {
              "line": 66,
              "col": 28,
              "offset": 2513
            },
            "end": {
              "line": 66,
              "col": 47,
              "offset": 2532
            },
            "abstract_content": "javax crypto Cipher",
            "unique_id": {
              "type": "AST",
              "md5sum": "aab127507f3afdb7377ad511a669b91c"
            }
          }
        },
        "metadata": {
          "cwe": "CWE-696: Incorrect Behavior Order",
          "owasp": "A3: Sensitive Data Exposure",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#PADDING_ORACLE",
          "references": [
            "https://capec.mitre.org/data/definitions/463.html"
          ]
        },
        "severity": "WARNING",
        "fix": "javax crypto Cipher.getInstance(\"AES/GCM/NoPadding\");",
        "lines": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
      }
    },
    {
      "check_id": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
      "path": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java",
      "start": {
        "line": 66,
        "col": 4
      },
      "end": {
        "line": 66,
        "col": 83
      },
      "extra": {
        "message": "Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor\ncould discern the difference between plaintext with valid or invalid padding. Further,\nCBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.\nUse 'AES/GCM/NoPadding' instead.\n",
        "metavars": {
          "$CIPHER": {
            "start": {
              "line": 66,
              "col": 28,
              "offset": 2513
            },
            "end": {
              "line": 66,
              "col": 47,
              "offset": 2532
            },
            "abstract_content": "javax crypto Cipher",
            "unique_id": {
              "type": "AST",
              "md5sum": "aab127507f3afdb7377ad511a669b91c"
            }
          }
        },
        "metadata": {
          "cwe": "CWE-696: Incorrect Behavior Order",
          "owasp": "A3: Sensitive Data Exposure",
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#PADDING_ORACLE",
          "references": [
            "https://capec.mitre.org/data/definitions/463.html"
          ]
        },
        "severity": "WARNING",
        "fix": "javax crypto Cipher.getInstance(\"AES/GCM/NoPadding\");",
        "lines": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
      }
    }
  ],
  "errors": []
}