<?xml version="1.0" encoding="UTF-8"?>
<bom xmlns="http://cyclonedx.org/schema/bom/1.4" serialNumber="urn:uuid:272fe4b7-83a4-4a0f-b235-3b82e833c0e9" version="1">
  <metadata>
    <timestamp>2022-07-22T09:45:22+01:00</timestamp>
    <tools>
      <tool>
        <vendor>anchore</vendor>
        <name>grype</name>
        <version>0.41.0</version>
      </tool>
    </tools>
    <component type="file">
      <name>./configuration/.m2/repository/org/apache/logging/log4j/log4j-core/2.13.2</name>
    </component>
  </metadata>
  <components>
    <component bom-ref="pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede" type="library">
      <name>log4j-core</name>
      <version>2.13.2</version>
      <purl>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2</purl>
    </component>
  </components>
  <vulnerabilities>
    <vulnerability>
      <id>CVE-2021-44228</id>
      <source>
        <name>nvd:cpe</name>
        <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228</url>
      </source>
      <ratings>
        <rating>
          <severity>critical</severity>
        </rating>
        <rating>
          <score>10</score>
          <method>CVSSv2</method>
          <vector>AV:N/AC:M/Au:N/C:C/I:C/A:C</vector>
        </rating>
        <rating>
          <score>10</score>
          <method>CVSSv31</method>
          <vector>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H</vector>
        </rating>
      </ratings>
      <description>Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.</description>
      <advisories>
        <advisory>
          <url>https://logging.apache.org/log4j/2.x/security.html</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/10/1</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/10/2</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html</url>
        </advisory>
        <advisory>
          <url>https://security.netapp.com/advisory/ntap-20211210-0007/</url>
        </advisory>
        <advisory>
          <url>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/10/3</url>
        </advisory>
        <advisory>
          <url>https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/alert-cve-2021-44228.html</url>
        </advisory>
        <advisory>
          <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VU57UJDCFIASIO35GC55JMKSRXJMCDFM/</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/13/1</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/13/2</url>
        </advisory>
        <advisory>
          <url>https://twitter.com/kurtseifried/status/1469345530182455296</url>
        </advisory>
        <advisory>
          <url>https://lists.debian.org/debian-lts-announce/2021/12/msg00007.html</url>
        </advisory>
        <advisory>
          <url>https://www.debian.org/security/2021/dsa-5020</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165270/Apache-Log4j2-2.14.1-Remote-Code-Execution.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165260/VMware-Security-Advisory-2021-0028.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165261/Apache-Log4j2-2.14.1-Information-Disclosure.html</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/14/4</url>
        </advisory>
        <advisory>
          <url>https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html</url>
        </advisory>
        <advisory>
          <url>https://www.kb.cert.org/vuls/id/930724</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165282/Log4j-Payload-Generator.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165281/Log4j2-Log4Shell-Regexes.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165306/L4sh-Log4j-Remote-Code-Execution.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165307/Log4j-Remote-Code-Execution-Word-Bypassing.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165311/log4j-scan-Extensive-Scanner.html</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/15/3</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf</url>
        </advisory>
        <advisory>
          <url>https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/</url>
        </advisory>
        <advisory>
          <url>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165371/VMware-Security-Advisory-2021-0028.4.html</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165532/Log4Shell-HTTP-Header-Injection.html</url>
        </advisory>
        <advisory>
          <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M5CSVUNV4HWZZXGOKNSK6L7RPM7BOKIB/</url>
        </advisory>
        <advisory>
          <url>https://github.com/cisagov/log4j-affected-db/blob/develop/SOFTWARE-LIST.md</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165642/VMware-vCenter-Server-Unauthenticated-Log4Shell-JNDI-Injection-Remote-Code-Execution.html</url>
        </advisory>
        <advisory>
          <url>http://packetstormsecurity.com/files/165673/UniFi-Network-Application-Unauthenticated-Log4Shell-Remote-Code-Execution.html</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpujan2022.html</url>
        </advisory>
        <advisory>
          <url>https://github.com/cisagov/log4j-affected-db</url>
        </advisory>
        <advisory>
          <url>https://www.bentley.com/en/common-vulnerability-exposure/be-2022-0001</url>
        </advisory>
        <advisory>
          <url>https://support.apple.com/kb/HT213189</url>
        </advisory>
        <advisory>
          <url>http://seclists.org/fulldisclosure/2022/Mar/23</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpuapr2022.html</url>
        </advisory>
        <advisory>
          <url>https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-44228</url>
        </advisory>
        <advisory>
          <url>https://www.nu11secur1ty.com/2021/12/cve-2021-44228.html</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties></properties>
    </vulnerability>
    <vulnerability>
      <id>CVE-2021-44832</id>
      <source>
        <name>nvd:cpe</name>
        <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44832</url>
      </source>
      <ratings>
        <rating>
          <severity>medium</severity>
        </rating>
        <rating>
          <score>6.6</score>
          <method>CVSSv2</method>
          <vector>AV:N/AC:M/Au:S/C:C/I:C/A:C</vector>
        </rating>
        <rating>
          <score>6.6</score>
          <method>CVSSv31</method>
          <vector>CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H</vector>
        </rating>
      </ratings>
      <description>Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.</description>
      <advisories>
        <advisory>
          <url>https://lists.apache.org/thread/s1o5vlo78ypqxnzn6p8zf6t9shtq5143</url>
        </advisory>
        <advisory>
          <url>https://issues.apache.org/jira/browse/LOG4J2-3293</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/28/1</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-784507.pdf</url>
        </advisory>
        <advisory>
          <url>https://lists.debian.org/debian-lts-announce/2021/12/msg00036.html</url>
        </advisory>
        <advisory>
          <url>https://security.netapp.com/advisory/ntap-20220104-0001/</url>
        </advisory>
        <advisory>
          <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T57MPJUW3MA6QGWZRTMCHHMMPQNVKGFC/</url>
        </advisory>
        <advisory>
          <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EVV25FXL4FU5X6X5BSL7RLQ7T6F65MRA/</url>
        </advisory>
        <advisory>
          <url>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpujan2022.html</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpuapr2022.html</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties></properties>
    </vulnerability>
    <vulnerability>
      <id>CVE-2021-45046</id>
      <source>
        <name>nvd:cpe</name>
        <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046</url>
      </source>
      <ratings>
        <rating>
          <severity>critical</severity>
        </rating>
        <rating>
          <score>9</score>
          <method>CVSSv2</method>
          <vector>AV:N/AC:H/Au:N/C:P/I:P/A:P</vector>
        </rating>
        <rating>
          <score>9</score>
          <method>CVSSv31</method>
          <vector>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H</vector>
        </rating>
      </ratings>
      <description>It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.</description>
      <advisories>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/14/4</url>
        </advisory>
        <advisory>
          <url>https://logging.apache.org/log4j/2.x/security.html</url>
        </advisory>
        <advisory>
          <url>https://www.cve.org/CVERecord?id=CVE-2021-44228</url>
        </advisory>
        <advisory>
          <url>https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html</url>
        </advisory>
        <advisory>
          <url>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/15/3</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf</url>
        </advisory>
        <advisory>
          <url>https://www.kb.cert.org/vuls/id/930724</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf</url>
        </advisory>
        <advisory>
          <url>https://www.debian.org/security/2021/dsa-5022</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/alert-cve-2021-44228.html</url>
        </advisory>
        <advisory>
          <url>https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/18/1</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf</url>
        </advisory>
        <advisory>
          <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/</url>
        </advisory>
        <advisory>
          <url>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpujan2022.html</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpuapr2022.html</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties></properties>
    </vulnerability>
    <vulnerability>
      <id>CVE-2021-45105</id>
      <source>
        <name>nvd:cpe</name>
        <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105</url>
      </source>
      <ratings>
        <rating>
          <severity>medium</severity>
        </rating>
        <rating>
          <score>5.9</score>
          <method>CVSSv2</method>
          <vector>AV:N/AC:M/Au:N/C:N/I:N/A:P</vector>
        </rating>
        <rating>
          <score>5.9</score>
          <method>CVSSv31</method>
          <vector>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H</vector>
        </rating>
      </ratings>
      <description>Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.</description>
      <advisories>
        <advisory>
          <url>https://logging.apache.org/log4j/2.x/security.html</url>
        </advisory>
        <advisory>
          <url>https://security.netapp.com/advisory/ntap-20211218-0001/</url>
        </advisory>
        <advisory>
          <url>http://www.openwall.com/lists/oss-security/2021/12/19/1</url>
        </advisory>
        <advisory>
          <url>https://www.debian.org/security/2021/dsa-5024</url>
        </advisory>
        <advisory>
          <url>https://www.zerodayinitiative.com/advisories/ZDI-21-1541/</url>
        </advisory>
        <advisory>
          <url>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf</url>
        </advisory>
        <advisory>
          <url>https://www.kb.cert.org/vuls/id/930724</url>
        </advisory>
        <advisory>
          <url>https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032</url>
        </advisory>
        <advisory>
          <url>https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpujan2022.html</url>
        </advisory>
        <advisory>
          <url>https://www.oracle.com/security-alerts/cpuapr2022.html</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties></properties>
    </vulnerability>
    <vulnerability>
      <id>GHSA-7rjr-3q55-vv33</id>
      <source>
        <name>github:language:java</name>
        <url>https://github.com/advisories/GHSA-7rjr-3q55-vv33</url>
      </source>
      <ratings>
        <rating>
          <severity>critical</severity>
        </rating>
      </ratings>
      <description>Incomplete fix for Apache Log4j vulnerability</description>
      <advisories>
        <advisory>
          <url>https://github.com/advisories/GHSA-7rjr-3q55-vv33</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties>
        <property name="grype:fixed_versions">2.16.0</property>
      </properties>
    </vulnerability>
    <vulnerability>
      <id>GHSA-8489-44mv-ggj8</id>
      <source>
        <name>github:language:java</name>
        <url>https://github.com/advisories/GHSA-8489-44mv-ggj8</url>
      </source>
      <ratings>
        <rating>
          <severity>medium</severity>
        </rating>
      </ratings>
      <description>Improper Input Validation and Injection in Apache Log4j2</description>
      <advisories>
        <advisory>
          <url>https://github.com/advisories/GHSA-8489-44mv-ggj8</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties>
        <property name="grype:fixed_versions">2.17.1</property>
      </properties>
    </vulnerability>
    <vulnerability>
      <id>GHSA-jfh8-c2jp-5v3q</id>
      <source>
        <name>github:language:java</name>
        <url>https://github.com/advisories/GHSA-jfh8-c2jp-5v3q</url>
      </source>
      <ratings>
        <rating>
          <severity>critical</severity>
        </rating>
      </ratings>
      <description>Remote code injection in Log4j</description>
      <advisories>
        <advisory>
          <url>https://github.com/advisories/GHSA-jfh8-c2jp-5v3q</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties>
        <property name="grype:fixed_versions">2.15.0</property>
      </properties>
    </vulnerability>
    <vulnerability>
      <id>GHSA-p6xc-xr62-6r2g</id>
      <source>
        <name>github:language:java</name>
        <url>https://github.com/advisories/GHSA-p6xc-xr62-6r2g</url>
      </source>
      <ratings>
        <rating>
          <severity>high</severity>
        </rating>
      </ratings>
      <description>Improper Input Validation and Uncontrolled Recursion in Apache Log4j2</description>
      <advisories>
        <advisory>
          <url>https://github.com/advisories/GHSA-p6xc-xr62-6r2g</url>
        </advisory>
      </advisories>
      <analysis>
        <state>in_triage</state>
      </analysis>
      <affects>
        <target>
          <ref>pkg:maven/org.apache.logging.log4j/log4j-core@2.13.2?package-id=5f39f8a11642bede</ref>
        </target>
      </affects>
      <properties>
        <property name="grype:fixed_versions">2.17.0</property>
      </properties>
    </vulnerability>
  </vulnerabilities>
</bom>