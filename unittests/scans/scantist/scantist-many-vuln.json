[{
	"Public ID": "CVE-2018-12432",
	"Library": "net.bull.javamelody javamelody-core",
	"Library Version": "1.59.0",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "JavaMelody through 1.60.0 has XSS via the counter parameter in a clear_counter action to the /monitoring URI.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "1.73.0",
	"Latest Component Version": "1.86.0"
}, {
	"Public ID": "SEC-2019-10037",
	"Library": "net.bull.javamelody javamelody-core",
	"Library Version": "1.59.0",
	"Issue Source": "source_code",
	"Issue Type": "bug",
	"Description": "Cross-site Scripting (XSS): net.bull.javamelody:javamelody-core monitors JavaEE applications. Affected versions of this library are all vulnerable to Cross-site Scripting (XSS). An attacker can send a malicious script to an victim user or embed malicious script in the web page victim user visits. The end user\u00d5s browser has no way to know that the script should not be trusted, and will execute the script stealing sensitive information of the user or other critical operation. The patch may be found at: https://github.com/javamelody/javamelody/commit/028a85ed599a3648b9fa91d35792dbf219da8a70.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "High",
	"Priority": "",
	"Comments": "",
	"Patched Version": "1.60.0",
	"Latest Component Version": "1.86.0"
}, {
	"Public ID": "SEC-2019-10035",
	"Library": "net.bull.javamelody javamelody-core",
	"Library Version": "1.59.0",
	"Issue Source": "source_code",
	"Issue Type": "bug",
	"Description": "message variable not sanitized allowing XSS. The variable is not sanitized after changes in javamelody-core/src/main/java/net/bull/javamelody/HtmlCoreReport.java  . The commit may be found at: https://github.com/javamelody/javamelody/commit/e0497c1980acebd257d3da78dfde29ae9bdffdf6",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "High",
	"Priority": "",
	"Comments": "",
	"Patched Version": "1.61.0",
	"Latest Component Version": "1.86.0"
}, {
	"Public ID": "SEC-2019-11592",
	"Library": "net.bull.javamelody javamelody-core",
	"Library Version": "1.59.0",
	"Issue Source": "source_code",
	"Issue Type": "bug",
	"Description": "The package javamelody-core is vulnerable to Xstream Serialization vulnerability since MyObjectInputStream implements lookahead class validation.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "1.66.0",
	"Latest Component Version": "1.86.0"
}, {
	"Public ID": "SEC-2019-11590",
	"Library": "net.bull.javamelody javamelody-core",
	"Library Version": "1.59.0",
	"Issue Source": "source_code",
	"Issue Type": "bug",
	"Description": "The package javamelody-core is vulnerable to Cross-site scripting since graphName is rendered inside a <script></script> block.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "1.60.0",
	"Latest Component Version": "1.86.0"
}, {
	"Public ID": "CVE-2018-1288",
	"Library": "org.apache.kafka kafka_2.11",
	"Library Version": "0.9.0.1",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "In Apache Kafka 0.9.0.0 to 0.9.0.1, 0.10.0.0 to 0.10.2.1, 0.11.0.0 to 0.11.0.2, and 1.0.0, authenticated Kafka users may perform action reserved for the Broker via a manually created fetch request interfering with data replication, resulting in data loss.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "0.10.2.2",
	"Latest Component Version": "2.4.1"
}, {
	"Public ID": "CVE-2017-2646",
	"Library": "org.keycloak keycloak-saml-core",
	"Library Version": "1.8.1.Final",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "It was found that when Keycloak before 2.5.5 receives a Logout request with a Extensions in the middle of the request, the SAMLSloRequestParser.parse() method ends in a infinite loop. An attacker could use this flaw to conduct denial of service attacks.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "High",
	"Priority": "",
	"Comments": "",
	"Patched Version": "6.0.0",
	"Latest Component Version": "12.0.1"
}, {
	"Public ID": "CVE-2017-2582",
	"Library": "org.keycloak keycloak-saml-core",
	"Library Version": "1.8.1.Final",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "It was found that while parsing the SAML messages the StaxParserUtil class of keycloak before 2.5.1 replaces special strings for obtaining attribute values with system property. This could allow an attacker to determine values of system properties at the attacked system by formatting the SAML request ID field to be the chosen system property which could be obtained in the \"InResponseTo\" field in the response.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "2.5.1.Final",
	"Latest Component Version": "12.0.1"
}, {
	"Public ID": "CVE-2013-6429",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "The SourceHttpMessageConverter in Spring MVC in Spring Framework before 3.2.5 and 4.0.0.M1 through 4.0.0.RC1 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152 and CVE-2013-7315.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.6.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2013-7315",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.5.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2013-4152",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.8.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2014-0225",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "When processing user provided XML documents, the Spring Framework 4.0.0 to 4.0.4, 3.0.0 to 3.2.8, and possibly earlier unsupported versions did not disable by default the resolution of URI references in a DTD declaration. This enabled an XXE attack.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "High",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.9.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2013-6430",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "The JavaScriptUtils.javaScriptEscape method in web/util/JavaScriptUtils.java in Spring MVC in Spring Framework before 3.2.2 does not properly escape certain characters, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a (1) line separator or (2) paragraph separator Unicode character or (3) left or (4) right angle bracket.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Low",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.3.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2014-3578",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "Directory traversal vulnerability in Pivotal Spring Framework 3.x before 3.2.9 and 4.0 before 4.0.5 allows remote attackers to read arbitrary files via a crafted URL.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.10.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2014-0054",
	"Library": "org.springframework spring-web",
	"Library Version": "3.1.1.RELEASE",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "3.2.9.RELEASE",
	"Latest Component Version": "5.3.2"
}, {
	"Public ID": "CVE-2015-0886",
	"Library": "org.mindrot jbcrypt",
	"Library Version": "0.3m",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "Integer overflow in the crypt_raw method in the key-stretching implementation in jBCrypt before 0.4 makes it easier for remote attackers to determine cleartext values of password hashes via a brute-force attack against hashes associated with the maximum exponent.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "0.4",
	"Latest Component Version": "0.3"
}, {
	"Public ID": "CVE-2020-15250",
	"Library": "junit",
	"Library Version": "4.11",
	"Issue Source": "source_code",
	"Issue Type": "cve",
	"Description": "In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.",
	"File Path": "example-java-gradle/build.gradle",
	"Score": "Medium",
	"Priority": "",
	"Comments": "",
	"Patched Version": "",
	"Latest Component Version": "4.13.1"
}]