{
    "reportCreationDate": "2024-04-16T19:34:28.216323985Z",
    "reportType": "Vulnerability Type",
    "reportHeader": {
        "projectName": "example-123/loiskjdye",
        "projectCreationDate": "2023-07-17T18:36:54.880332Z",
        "tenantId": "75dc3d05-ba3b-4eb9-a335-ed37f5d63eb7",
        "scanDate": "2024-04-16T14:31:48.251029Z",
        "severityDistribution": [
            {
                "level": "High",
                "value": 3
            },
            {
                "level": "Medium",
                "value": 47
            },
            {
                "level": "Low",
                "value": 85
            },
            {
                "level": "Information",
                "value": 11
            }
        ],
        "scannedBranchName": "main",
        "scanners": [
            "SAST",
            "SCA",
            "IaC"
        ],
        "mainBranch": "main"
    },
    "reportFilters": {
        "filters": [
            {
                "filterName": "Severity",
                "included": [
                    "High",
                    "Medium",
                    "Low",
                    "Information"
                ],
                "excluded": []
            },
            {
                "filterName": "Result State",
                "included": [
                    "To Verify",
                    "Not Exploitable",
                    "Proposed Not Exploitable",
                    "Confirmed",
                    "Urgent"
                ],
                "excluded": []
            },
            {
                "filterName": "Status",
                "included": [
                    "New",
                    "Recurrent"
                ],
                "excluded": []
            },
            {
                "filterName": "Scanners",
                "included": [
                    "SAST",
                    "SCA",
                    "IaC"
                ],
                "excluded": []
            }
        ],
        "resultsLimit": "10000"
    },
    "scanInformation": {
        "scanId": "7c9b4b8e-6986-4e5f-a787-f7d2c93e622a",
        "scanInitiator": "user@example123.com",
        "scanDuration": 503881212000,
        "preset": "All",
        "totalScannedLoc": 62306,
        "scannedLoc": 59718,
        "iacScannedLoc": 2588,
        "totalScannedFiles": 709,
        "scannedFiles": 673,
        "iacScannedFiles": 36,
        "viewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast",
        "sourceOrigin": "github",
        "scanType": "Full Scan",
        "branch": "main",
        "totalDensity": 2.34,
        "density": 2.28,
        "iacDensity": 3.86,
        "groups": null,
        "scanners": [
            "SAST",
            "SCA",
            "IaC"
        ],
        "scannerStatus": [
            {
                "name": "SCA",
                "status": "Completed"
            },
            {
                "name": "IaC",
                "status": "Completed"
            },
            {
                "name": "SAST",
                "status": "Completed"
            }
        ]
    },
    "projectAndScanTags": {
        "scanTags": null,
        "projectTags": null
    },
    "densityGrade": {
        "totalResults": 146,
        "loc": 62306,
        "density": 2.34
    },
    "scannerOverview": {
        "totalResults": 146,
        "sastResults": {
            "engine": "SAST",
            "value": 136,
            "percentage": 93.15
        },
        "iacResults": {
            "engine": "IaC",
            "value": 10,
            "percentage": 6.85
        },
        "scaResults": {
            "engine": "SCA",
            "value": 0,
            "percentage": 0
        }
    },
    "statusOverview": {
        "totalResults": 146,
        "newResultsOverview": {
            "numberOfResults": 0,
            "percentage": 0
        },
        "recurrentResultsOverview": {
            "numberOfResults": 146,
            "percentage": 100
        }
    },
    "stateOverview": {
        "totalResults": 146,
        "stateDistribution": [
            {
                "state": "To Verify",
                "numberOfResults": 146,
                "percentage": 100,
                "density": {
                    "value": 2.34
                }
            },
            {
                "state": "Not Exploitable",
                "numberOfResults": 0,
                "percentage": 0,
                "density": {
                    "value": 0
                }
            },
            {
                "state": "Proposed Not Exploitable",
                "numberOfResults": 0,
                "percentage": 0,
                "density": {
                    "value": 0
                }
            },
            {
                "state": "Confirmed",
                "numberOfResults": 0,
                "percentage": 0,
                "density": {
                    "value": 0
                }
            },
            {
                "state": "Urgent",
                "numberOfResults": 0,
                "percentage": 0,
                "density": {
                    "value": 0
                }
            }
        ]
    },
    "languageOverview": [
        {
            "languageName": "java",
            "totalResults": 68,
            "density": {
                "value": 1.14
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 0
                },
                {
                    "level": "Medium",
                    "value": 0
                },
                {
                    "level": "Low",
                    "value": 57
                },
                {
                    "level": "Information",
                    "value": 11
                }
            ]
        },
        {
            "languageName": "kotlin",
            "totalResults": 38,
            "density": {
                "value": 0.64
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 3
                },
                {
                    "level": "Medium",
                    "value": 11
                },
                {
                    "level": "Low",
                    "value": 24
                },
                {
                    "level": "Information",
                    "value": 0
                }
            ]
        },
        {
            "languageName": "go",
            "totalResults": 28,
            "density": {
                "value": 0.47
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 0
                },
                {
                    "level": "Medium",
                    "value": 25
                },
                {
                    "level": "Low",
                    "value": 3
                },
                {
                    "level": "Information",
                    "value": 0
                }
            ]
        },
        {
            "languageName": "python",
            "totalResults": 2,
            "density": {
                "value": 0.03
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 0
                },
                {
                    "level": "Medium",
                    "value": 2
                },
                {
                    "level": "Low",
                    "value": 0
                },
                {
                    "level": "Information",
                    "value": 0
                }
            ]
        }
    ],
    "technologyOverview": [
        {
            "technologyName": "CICD",
            "totalResults": 5,
            "density": {
                "value": 1.93
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 0
                },
                {
                    "level": "Medium",
                    "value": 5
                },
                {
                    "level": "Low",
                    "value": 0
                },
                {
                    "level": "Information",
                    "value": 0
                }
            ]
        },
        {
            "technologyName": "Kubernetes",
            "totalResults": 4,
            "density": {
                "value": 1.55
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 0
                },
                {
                    "level": "Medium",
                    "value": 4
                },
                {
                    "level": "Low",
                    "value": 0
                },
                {
                    "level": "Information",
                    "value": 0
                }
            ]
        },
        {
            "technologyName": "Dockerfile",
            "totalResults": 1,
            "density": {
                "value": 0.39
            },
            "severityBreakdown": [
                {
                    "level": "High",
                    "value": 0
                },
                {
                    "level": "Medium",
                    "value": 0
                },
                {
                    "level": "Low",
                    "value": 1
                },
                {
                    "level": "Information",
                    "value": 0
                }
            ]
        }
    ],
    "packageOverview": [],
    "severityOverview": {
        "totalResults": 146,
        "severitiesBreakdown": [
            {
                "level": "High",
                "value": 3,
                "percentage": 2.05,
                "density": {
                    "value": 0.05
                }
            },
            {
                "level": "Medium",
                "value": 47,
                "percentage": 32.19,
                "density": {
                    "value": 0.75
                }
            },
            {
                "level": "Low",
                "value": 85,
                "percentage": 58.22,
                "density": {
                    "value": 1.36
                }
            },
            {
                "level": "Information",
                "value": 11,
                "percentage": 7.53,
                "density": {
                    "value": 0.18
                }
            }
        ]
    },
    "vulnerabilitiesTable": {
        "totals": {
            "detectedFiles": 51,
            "resultsDistribution": [
                {
                    "level": "High",
                    "value": 3
                },
                {
                    "level": "Medium",
                    "value": 38
                },
                {
                    "level": "Low",
                    "value": 84
                },
                {
                    "level": "Information",
                    "value": 11
                }
            ]
        },
        "vulnerabilityTypes": [
            {
                "vulnerabilityType": "Reflected_XSS",
                "severity": "High",
                "detectedFiles": 8,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 3
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Denial_Of_Service_Resource_Exhaustion",
                "severity": "Medium",
                "detectedFiles": 4,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 12
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Client_Side_Injection",
                "severity": "Medium",
                "detectedFiles": 18,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 10
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Reflected_Absolute_Path_Traversal",
                "severity": "Medium",
                "detectedFiles": 4,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 4
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Reflected_Relative_Path_Traversal",
                "severity": "Medium",
                "detectedFiles": 4,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 4
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "SSRF",
                "severity": "Medium",
                "detectedFiles": 2,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 4
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Unchecked_Input_for_Loop_Condition",
                "severity": "Medium",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 2
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "SSL_Verification_Bypass",
                "severity": "Medium",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 1
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Unchecked_Input_for_Loop_Condition",
                "severity": "Medium",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 1
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "TruffleHog_HighEntropy_Strings",
                "severity": "Low",
                "detectedFiles": 15,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 56
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Use_of_Non_Cryptographic_Random",
                "severity": "Low",
                "detectedFiles": 6,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 23
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Improper_Error_Handling",
                "severity": "Low",
                "detectedFiles": 2,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 2
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Deprecated_API",
                "severity": "Low",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 1
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Missing_Rooted_Device_Check",
                "severity": "Low",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 1
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "TruffleHog_Regex_Matches",
                "severity": "Low",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 1
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Potentially_Serializable_Class_With_Sensitive_Data",
                "severity": "Information",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 6
                    }
                ]
            },
            {
                "vulnerabilityType": "Incorrect_Block_Delimitation",
                "severity": "Information",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 3
                    }
                ]
            },
            {
                "vulnerabilityType": "Incorrect_Conversion_between_Numeric_Types",
                "severity": "Information",
                "detectedFiles": 1,
                "resultsDistribution": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 2
                    }
                ]
            }
        ]
    },
    "topTenVulnerabilities": {
        "vulnerableFiles": 51,
        "totalVulnerabilities": 125,
        "vulnerabilitiesList": [
            {
                "vulnerabilityType": "TruffleHog_HighEntropy_Strings",
                "total": 56,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 56
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Use_of_Non_Cryptographic_Random",
                "total": 23,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 23
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Denial_Of_Service_Resource_Exhaustion",
                "total": 12,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 12
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Client_Side_Injection",
                "total": 10,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 10
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Potentially_Serializable_Class_With_Sensitive_Data",
                "total": 6,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 6
                    }
                ]
            },
            {
                "vulnerabilityType": "Reflected_Absolute_Path_Traversal",
                "total": 4,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 4
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Reflected_Relative_Path_Traversal",
                "total": 4,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 4
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "SSRF",
                "total": 4,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 4
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Reflected_XSS",
                "total": 3,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 3
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "vulnerabilityType": "Incorrect_Block_Delimitation",
                "total": 3,
                "vulnerabilitySeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 3
                    }
                ]
            }
        ]
    },
    "topTenVulnerableFiles": {
        "vulnerableFiles": 51,
        "totalFiles": 673,
        "vulnerableFilesList": [
            {
                "fileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                "total": 13,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 13
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                "total": 12,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 3
                    },
                    {
                        "level": "Medium",
                        "value": 9
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                "total": 11,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 10
                    },
                    {
                        "level": "Low",
                        "value": 1
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/scripts/export-csv-full-base/e.go",
                "total": 11,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 9
                    },
                    {
                        "level": "Low",
                        "value": 2
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                "total": 8,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 8
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/s.kt",
                "total": 8,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 8
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/c.kt",
                "total": 7,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 7
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/c.kt",
                "total": 7,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 0
                    },
                    {
                        "level": "Medium",
                        "value": 0
                    },
                    {
                        "level": "Low",
                        "value": 7
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/c.kt",
                "total": 6,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 3
                    },
                    {
                        "level": "Medium",
                        "value": 3
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            },
            {
                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/c.kt",
                "total": 6,
                "fileSeverities": [
                    {
                        "level": "High",
                        "value": 3
                    },
                    {
                        "level": "Medium",
                        "value": 3
                    },
                    {
                        "level": "Low",
                        "value": 0
                    },
                    {
                        "level": "Information",
                        "value": 0
                    }
                ]
            }
        ]
    },
    "topFiveOldestBySeverity": [
        {
            "level": "High",
            "vulnerabilitiesDistribution": [
                {
                    "vulnerabilityType": "Reflected_XSS",
                    "age": 28
                }
            ]
        },
        {
            "level": "Medium",
            "vulnerabilitiesDistribution": [
                {
                    "vulnerabilityType": "Client_Side_Injection",
                    "age": 46
                },
                {
                    "vulnerabilityType": "Denial_Of_Service_Resource_Exhaustion",
                    "age": 46
                },
                {
                    "vulnerabilityType": "Reflected_Absolute_Path_Traversal",
                    "age": 46
                },
                {
                    "vulnerabilityType": "Reflected_Relative_Path_Traversal",
                    "age": 46
                },
                {
                    "vulnerabilityType": "SSL_Verification_Bypass",
                    "age": 46
                }
            ]
        },
        {
            "level": "Low",
            "vulnerabilitiesDistribution": [
                {
                    "vulnerabilityType": "Deprecated_API",
                    "age": 46
                },
                {
                    "vulnerabilityType": "Improper_Error_Handling",
                    "age": 46
                },
                {
                    "vulnerabilityType": "Missing_Rooted_Device_Check",
                    "age": 46
                },
                {
                    "vulnerabilityType": "TruffleHog_HighEntropy_Strings",
                    "age": 46
                },
                {
                    "vulnerabilityType": "TruffleHog_Regex_Matches",
                    "age": 46
                }
            ]
        },
        {
            "level": "Information",
            "vulnerabilitiesDistribution": [
                {
                    "vulnerabilityType": "Potentially_Serializable_Class_With_Sensitive_Data",
                    "age": 42
                },
                {
                    "vulnerabilityType": "Incorrect_Block_Delimitation",
                    "age": 23
                },
                {
                    "vulnerabilityType": "Incorrect_Conversion_between_Numeric_Types",
                    "age": 23
                }
            ]
        }
    ],
    "scanResults": {
        "totalResults": 136,
        "severitiesBreakdown": [
            {
                "level": "High",
                "value": 3
            },
            {
                "level": "Medium",
                "value": 38
            },
            {
                "level": "Low",
                "value": 84
            },
            {
                "level": "Information",
                "value": 11
            }
        ],
        "resultsList": [
            {
                "queryName": "Reflected_XSS",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/79/9349880549689768000",
                "queryId": 9349880549689768000,
                "description": "The method @DestinationMethod embeds untrusted data in generated output with @DestinationElement, at line @DestinationLine of @DestinationFile. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input @SourceElement, which is read by the @SourceMethod method at line @SourceLine of @SourceFile. This input then flows through the code straight to the output web page, without sanitization. \r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n",
                "vulnerabilitiesTotal": 3,
                "queryPath": "Kotlin/Kotlin_High_Risk/Reflected_XSS",
                "cweId": 79,
                "categories": [
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    },
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Verification and representation of input data"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V05 Validation, Sanitization and Encoding"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A3-Injection"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 134962663,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "High",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-18T20:51:25Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                        "sourceNode": "s",
                        "destinationNode": "set",
                        "sourceMethod": "putCustomer",
                        "destinationMethod": "Lambda",
                        "sourceLine": 69,
                        "sourceCode": "@RequestBody s: S",
                        "destinationLine": 484,
                        "destinationCode": "this.origins[it] = OriginPriority(cpf = originFromNewValue)",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "putCustomer",
                                "node": "s",
                                "line": 71,
                                "code": "val customer = customerService.createOrUpdateCustomer(s)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 24,
                                "code": "fun createOrUpdateCustomer(customerAccountCommand: S): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 26,
                                "code": "return eventHandler.executeAccountEvent(customerAccountCommand)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 56,
                                "code": "fun executeAccountEvent(eventCommand: EventCommand): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "additionalInfo",
                                "line": 134,
                                "code": "additionalInfo = additionalInfo,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "D",
                                "line": 112,
                                "code": "D("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "also",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "toDomain",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 63,
                                "code": "fun createOrUpdateCustomerByEvent(iEvent: IEvent): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 72,
                                "code": "customerFromEventService.update(customer, iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "update",
                                "node": "iEvent",
                                "line": 48,
                                "code": "fun update(customer: Customer, iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "update",
                                "node": "iEvent",
                                "line": 53,
                                "code": "val customerUpdated = customer.updateCustomerBy(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 268,
                                "code": "fun updateCustomerBy(iEvent: IEvent, registerEvent: Boolean = true): Customer {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 269,
                                "code": "updateIdentityKeys(iEvent.identityKeys(), iEvent.company, iEvent.origin)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "company",
                                "line": 269,
                                "code": "updateIdentityKeys(iEvent.identityKeys(), iEvent.company, iEvent.origin)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "company",
                                "line": 514,
                                "code": "company: Company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "company",
                                "line": 519,
                                "code": "EmailBU.fromString(identityKey.email, company),"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "fromString",
                                "node": "company",
                                "line": 15,
                                "code": "fun fromString(email: String?, company: Company? = Company.CENTAURO): EmailBU? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "fromString",
                                "node": "company",
                                "line": 19,
                                "code": "EmailBU(emailLowerCase, company)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "EmailBU",
                                "node": "company",
                                "line": 10,
                                "code": "val company: Company? = Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "EmailBU",
                                "node": "company",
                                "line": 10,
                                "code": "val company: Company? = Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "EmailBU",
                                "node": "company",
                                "line": 10,
                                "code": "val company: Company? = Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "fromString",
                                "node": "EmailBU",
                                "line": 19,
                                "code": "EmailBU(emailLowerCase, company)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "fromString",
                                "line": 519,
                                "code": "EmailBU.fromString(identityKey.email, company),"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailByPriority",
                                "node": "newValue",
                                "line": 446,
                                "code": "private fun updateEmailByPriority(newValue: EmailBU?, originFromNewValue: Origin?) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailByPriority",
                                "node": "newValue",
                                "line": 448,
                                "code": "updateEmailAtCompany(newValue, originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "newValue",
                                "line": 453,
                                "code": "newValue: EmailBU,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "newValue",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "company",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "set",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "origins",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailByPriority",
                                "node": "updateEmailAtCompany",
                                "line": 448,
                                "code": "updateEmailAtCompany(newValue, originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "updateEmailByPriority",
                                "line": 518,
                                "code": "updateEmailByPriority("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "updateCPFByPriority",
                                "line": 522,
                                "code": "updateCPFByPriority(CPF.fromString(identityKey.cpf), origin, listOf(company))"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "Lambda",
                                "node": "Lambda",
                                "line": 482,
                                "code": "newCompanies.forEach {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "Lambda",
                                "node": "origins",
                                "line": 483,
                                "code": "if (this.origins[it] == null) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "Lambda",
                                "node": "origins",
                                "line": 484,
                                "code": "this.origins[it] = OriginPriority(cpf = originFromNewValue)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=3BDddUN89yPXUzjbQ%2FLSowTsplU%3D",
                        "firstScanID": "615ff822-f6ed-4e30-aeed-f5618ef09ca2",
                        "notes": []
                    },
                    {
                        "similarityId": 134962663,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "High",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-18T20:51:25Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                        "sourceNode": "s",
                        "destinationNode": "set",
                        "sourceMethod": "putCustomer",
                        "destinationMethod": "Lambda",
                        "sourceLine": 69,
                        "sourceCode": "@RequestBody s: S",
                        "destinationLine": 504,
                        "destinationCode": "this.origins[it] = OriginPriority(cpf = originFromNewValue)",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "putCustomer",
                                "node": "s",
                                "line": 71,
                                "code": "val customer = customerService.createOrUpdateCustomer(s)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 24,
                                "code": "fun createOrUpdateCustomer(customerAccountCommand: S): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 26,
                                "code": "return eventHandler.executeAccountEvent(customerAccountCommand)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 56,
                                "code": "fun executeAccountEvent(eventCommand: EventCommand): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/c.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "additionalInfo",
                                "line": 134,
                                "code": "additionalInfo = additionalInfo,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "D",
                                "line": 112,
                                "code": "D("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "also",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "toDomain",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 63,
                                "code": "fun createOrUpdateCustomerByEvent(iEvent: IEvent): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 72,
                                "code": "customerFromEventService.update(customer, iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "update",
                                "node": "iEvent",
                                "line": 48,
                                "code": "fun update(customer: Customer, iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "update",
                                "node": "iEvent",
                                "line": 53,
                                "code": "val customerUpdated = customer.updateCustomerBy(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 268,
                                "code": "fun updateCustomerBy(iEvent: IEvent, registerEvent: Boolean = true): Customer {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 269,
                                "code": "updateIdentityKeys(iEvent.identityKeys(), iEvent.company, iEvent.origin)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "company",
                                "line": 269,
                                "code": "updateIdentityKeys(iEvent.identityKeys(), iEvent.company, iEvent.origin)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "company",
                                "line": 514,
                                "code": "company: Company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "company",
                                "line": 519,
                                "code": "EmailBU.fromString(identityKey.email, company),"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "fromString",
                                "node": "company",
                                "line": 15,
                                "code": "fun fromString(email: String?, company: Company? = Company.CENTAURO): EmailBU? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "fromString",
                                "node": "company",
                                "line": 19,
                                "code": "EmailBU(emailLowerCase, company)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "EmailBU",
                                "node": "company",
                                "line": 10,
                                "code": "val company: Company? = Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "EmailBU",
                                "node": "company",
                                "line": 10,
                                "code": "val company: Company? = Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "EmailBU",
                                "node": "company",
                                "line": 10,
                                "code": "val company: Company? = Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/EmailBU.kt",
                                "method": "fromString",
                                "node": "EmailBU",
                                "line": 19,
                                "code": "EmailBU(emailLowerCase, company)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "fromString",
                                "line": 519,
                                "code": "EmailBU.fromString(identityKey.email, company),"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailByPriority",
                                "node": "newValue",
                                "line": 446,
                                "code": "private fun updateEmailByPriority(newValue: EmailBU?, originFromNewValue: Origin?) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailByPriority",
                                "node": "newValue",
                                "line": 448,
                                "code": "updateEmailAtCompany(newValue, originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "newValue",
                                "line": 453,
                                "code": "newValue: EmailBU,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "newValue",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "company",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "set",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailAtCompany",
                                "node": "origins",
                                "line": 463,
                                "code": "this.origins[newValue.company] = OriginPriority(email = originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateEmailByPriority",
                                "node": "updateEmailAtCompany",
                                "line": 448,
                                "code": "updateEmailAtCompany(newValue, originFromNewValue)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "updateEmailByPriority",
                                "line": 518,
                                "code": "updateEmailByPriority("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateIdentityKeys",
                                "node": "updateCNPJByPriority",
                                "line": 523,
                                "code": "updateCNPJByPriority(CNPJ.fromString(identityKey.cnpj), origin, listOf(company))"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "Lambda",
                                "node": "Lambda",
                                "line": 502,
                                "code": "newCompanies.forEach {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "Lambda",
                                "node": "origins",
                                "line": 503,
                                "code": "if (this.origins[it] == null) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "Lambda",
                                "node": "origins",
                                "line": 504,
                                "code": "this.origins[it] = OriginPriority(cpf = originFromNewValue)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=4hxOgYKZUJPRAlodgeAXgj4UMjI%3D",
                        "firstScanID": "615ff822-f6ed-4e30-aeed-f5618ef09ca2",
                        "notes": []
                    },
                    {
                        "similarityId": -1944555408,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "High",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-18T20:51:25Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                        "sourceNode": "s",
                        "destinationNode": "set",
                        "sourceMethod": "putCustomer",
                        "destinationMethod": "updateVisitantId",
                        "sourceLine": 69,
                        "sourceCode": "@RequestBody s: S",
                        "destinationLine": 602,
                        "destinationCode": "this.visitantId[companyNewValue] = visitantIdNewValue",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "putCustomer",
                                "node": "s",
                                "line": 71,
                                "code": "val customer = customerService.createOrUpdateCustomer(s)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 24,
                                "code": "fun createOrUpdateCustomer(customerAccountCommand: S): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 26,
                                "code": "return eventHandler.executeAccountEvent(customerAccountCommand)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 56,
                                "code": "fun executeAccountEvent(eventCommand: EventCommand): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "additionalInfo",
                                "line": 134,
                                "code": "additionalInfo = additionalInfo,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "D",
                                "line": 112,
                                "code": "D("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "also",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "toDomain",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 63,
                                "code": "fun createOrUpdateCustomerByEvent(iEvent: IEvent): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 72,
                                "code": "customerFromEventService.update(customer, iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "update",
                                "node": "iEvent",
                                "line": 48,
                                "code": "fun update(customer: Customer, iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "update",
                                "node": "iEvent",
                                "line": 53,
                                "code": "val customerUpdated = customer.updateCustomerBy(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 268,
                                "code": "fun updateCustomerBy(iEvent: IEvent, registerEvent: Boolean = true): Customer {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 269,
                                "code": "updateIdentityKeys(iEvent.identityKeys(), iEvent.company, iEvent.origin)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 270,
                                "code": "updateAnonymousIds(iEvent.anonymousKeys())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 275,
                                "code": "OriginIdentifyType.ACCOUNT, iEvent.customerOriginId()"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "iEvent",
                                "line": 274,
                                "code": "iEvent.company, iEvent.origin,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateCustomerBy",
                                "node": "company",
                                "line": 274,
                                "code": "iEvent.company, iEvent.origin,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateOriginCustomerIds",
                                "node": "company",
                                "line": 527,
                                "code": "company: Company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateOriginCustomerIds",
                                "node": "company",
                                "line": 542,
                                "code": "Origin.SELLER -\u003e updateVisitantId(company, originId)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateVisitantId",
                                "node": "companyNewValue",
                                "line": 600,
                                "code": "private fun updateVisitantId(companyNewValue: Company, visitantIdNewValue: String?) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/Customer.kt",
                                "method": "updateVisitantId",
                                "node": "companyNewValue",
                                "line": 602,
                                "code": "this.visitantId[companyNewValue] = visitantIdNewValue"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=PXy3jmxaCbAgjj2gcbAzatJ96Hs%3D",
                        "firstScanID": "35394c18-dd17-45cd-9667-56f631c879de",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Client_Side_Injection",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/89/3348175923312480217",
                "queryId": 3348175923312480217,
                "description": "The application's @DestinationMethod method executes an SQL query with @DestinationElement, at line @DestinationLine of @DestinationFile. The application constructs this SQL query by embedding an untrusted string into the query without proper sanitization. The concatenated string is submitted to the database, where it is parsed and executed accordingly.\n\n",
                "vulnerabilitiesTotal": 10,
                "queryPath": "Kotlin/Kotlin_Android/Client_Side_Injection",
                "cweId": 89,
                "categories": [],
                "vulnerabilities": [
                    {
                        "similarityId": 971992247,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-13T00:30:34Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "businessUnit",
                        "destinationNode": "company",
                        "sourceMethod": "getCustomerByEcommerceCustomerId",
                        "destinationMethod": "findByEcommerceCustomerId",
                        "sourceLine": 116,
                        "sourceCode": "@RequestParam businessUnit: Company?,",
                        "destinationLine": 78,
                        "destinationCode": "@Param(\"company\") company: Company,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "businessUnit",
                                "line": 120,
                                "code": "val company = businessUnit ?: Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "company",
                                "line": 120,
                                "code": "val company = businessUnit ?: Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "company",
                                "line": 121,
                                "code": "val person = personService.findByEcommerceId(company, ecommerceCustomerId)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "businessUnit",
                                "line": 62,
                                "code": "fun findByEcommerceId(businessUnit: Company, ecommerceCustomerId: String): Person? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "businessUnit",
                                "line": 65,
                                "code": "company = businessUnit, origin = Origin.ECOMMERCE,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "PlatformCustomerId",
                                "line": 64,
                                "code": "PlatformCustomerId("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 99,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "Lambda",
                                "node": "platformCustomerId",
                                "line": 103,
                                "code": ".ifEmpty { getCustomerByOriginIdInOldestKeys(platformCustomerId) },"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 118,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 122,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "company",
                                "line": 122,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=XaGZsSNXXRRS917HcYQX%2BCamGkY%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": 1127975448,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-13T00:30:34Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "businessUnit",
                        "destinationNode": "company",
                        "sourceMethod": "getCustomerByEcommerceCustomerId",
                        "destinationMethod": "findByStoreCustomerId",
                        "sourceLine": 116,
                        "sourceCode": "@RequestParam businessUnit: Company?,",
                        "destinationLine": 84,
                        "destinationCode": "@Param(\"company\") company: Company,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "businessUnit",
                                "line": 120,
                                "code": "val company = businessUnit ?: Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "company",
                                "line": 120,
                                "code": "val company = businessUnit ?: Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "company",
                                "line": 121,
                                "code": "val person = personService.findByEcommerceId(company, ecommerceCustomerId)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "businessUnit",
                                "line": 62,
                                "code": "fun findByEcommerceId(businessUnit: Company, ecommerceCustomerId: String): Person? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "businessUnit",
                                "line": 65,
                                "code": "company = businessUnit, origin = Origin.ECOMMERCE,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "PlatformCustomerId",
                                "line": 64,
                                "code": "PlatformCustomerId("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 99,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "Lambda",
                                "node": "platformCustomerId",
                                "line": 103,
                                "code": ".ifEmpty { getCustomerByOriginIdInOldestKeys(platformCustomerId) },"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 118,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 126,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "company",
                                "line": 126,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=wJNF%2FMS5geO7GQiOMH7q3B6fQII%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": 558570014,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-13T00:30:34Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "businessUnit",
                        "destinationNode": "company",
                        "sourceMethod": "getCustomerByEcommerceCustomerId",
                        "destinationMethod": "findByPlatformCustomerId",
                        "sourceLine": 116,
                        "sourceCode": "@RequestParam businessUnit: Company?,",
                        "destinationLine": 70,
                        "destinationCode": "@Param(\"company\") company: Company,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "businessUnit",
                                "line": 120,
                                "code": "val company = businessUnit ?: Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "company",
                                "line": 120,
                                "code": "val company = businessUnit ?: Company.CENTAURO"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomerByEcommerceCustomerId",
                                "node": "company",
                                "line": 121,
                                "code": "val person = personService.findByEcommerceId(company, ecommerceCustomerId)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "businessUnit",
                                "line": 62,
                                "code": "fun findByEcommerceId(businessUnit: Company, ecommerceCustomerId: String): Person? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "businessUnit",
                                "line": 65,
                                "code": "company = businessUnit, origin = Origin.ECOMMERCE,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByEcommerceId",
                                "node": "PlatformCustomerId",
                                "line": 64,
                                "code": "PlatformCustomerId("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 99,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 102,
                                "code": "findByPlatformCustomerId(platformCustomerId)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByPlatformCustomerId",
                                "node": "platformCustomerId",
                                "line": 108,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByPlatformCustomerId",
                                "node": "platformCustomerId",
                                "line": 111,
                                "code": "platformCustomerId.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByPlatformCustomerId",
                                "node": "company",
                                "line": 111,
                                "code": "platformCustomerId.company,"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=fBI8BXCRIX9gfKGhGBCzwLZNiq0%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": -204318717,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-18T20:51:25Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "s",
                        "destinationNode": "company",
                        "sourceMethod": "putCustomer",
                        "destinationMethod": "findByEcommerceCustomerId",
                        "sourceLine": 69,
                        "sourceCode": "@RequestBody s: S",
                        "destinationLine": 78,
                        "destinationCode": "@Param(\"company\") company: Company,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "putCustomer",
                                "node": "s",
                                "line": 71,
                                "code": "val customer = customerService.createOrUpdateCustomer(s)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 24,
                                "code": "fun createOrUpdateCustomer(customerAccountCommand: S): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 26,
                                "code": "return eventHandler.executeAccountEvent(customerAccountCommand)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 56,
                                "code": "fun executeAccountEvent(eventCommand: EventCommand): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "additionalInfo",
                                "line": 134,
                                "code": "additionalInfo = additionalInfo,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "D",
                                "line": 112,
                                "code": "D("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "also",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "toDomain",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 63,
                                "code": "fun createOrUpdateCustomerByEvent(iEvent: IEvent): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 65,
                                "code": "val customer = customerFromEventService.findCustomer(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomer",
                                "node": "iEvent",
                                "line": 65,
                                "code": "fun findCustomer(iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomer",
                                "node": "iEvent",
                                "line": 67,
                                "code": "?: findCustomerByOriginId(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 73,
                                "code": "private fun findCustomerByOriginId(iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 74,
                                "code": "if (!iEvent.customerOriginId().isNullOrEmpty()) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 80,
                                "code": "value = iEvent.customerOriginId()!!"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 77,
                                "code": "company = iEvent.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "company",
                                "line": 77,
                                "code": "company = iEvent.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "PlatformCustomerId",
                                "line": 76,
                                "code": "PlatformCustomerId("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 99,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "Lambda",
                                "node": "platformCustomerId",
                                "line": 103,
                                "code": ".ifEmpty { getCustomerByOriginIdInOldestKeys(platformCustomerId) },"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 118,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 122,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "company",
                                "line": 122,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=Xyn5EqekUMnMFVXfahJ4Td7s7HI%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": -1970275484,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-18T20:51:25Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "s",
                        "destinationNode": "company",
                        "sourceMethod": "putCustomer",
                        "destinationMethod": "findByStoreCustomerId",
                        "sourceLine": 69,
                        "sourceCode": "@RequestBody s: S",
                        "destinationLine": 84,
                        "destinationCode": "@Param(\"company\") company: Company,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "putCustomer",
                                "node": "s",
                                "line": 71,
                                "code": "val customer = customerService.createOrUpdateCustomer(s)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 24,
                                "code": "fun createOrUpdateCustomer(customerAccountCommand: S): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 26,
                                "code": "return eventHandler.executeAccountEvent(customerAccountCommand)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 56,
                                "code": "fun executeAccountEvent(eventCommand: EventCommand): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "additionalInfo",
                                "line": 134,
                                "code": "additionalInfo = additionalInfo,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "D",
                                "line": 112,
                                "code": "D("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "also",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "toDomain",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 63,
                                "code": "fun createOrUpdateCustomerByEvent(iEvent: IEvent): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 65,
                                "code": "val customer = customerFromEventService.findCustomer(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomer",
                                "node": "iEvent",
                                "line": 65,
                                "code": "fun findCustomer(iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomer",
                                "node": "iEvent",
                                "line": 67,
                                "code": "?: findCustomerByOriginId(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 73,
                                "code": "private fun findCustomerByOriginId(iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 74,
                                "code": "if (!iEvent.customerOriginId().isNullOrEmpty()) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 80,
                                "code": "value = iEvent.customerOriginId()!!"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 77,
                                "code": "company = iEvent.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "company",
                                "line": 77,
                                "code": "company = iEvent.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "PlatformCustomerId",
                                "line": 76,
                                "code": "PlatformCustomerId("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 99,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "Lambda",
                                "node": "platformCustomerId",
                                "line": 103,
                                "code": ".ifEmpty { getCustomerByOriginIdInOldestKeys(platformCustomerId) },"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 118,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "platformCustomerId",
                                "line": 126,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "getCustomerByOriginIdInOldestKeys",
                                "node": "company",
                                "line": 126,
                                "code": "platformCustomerId.company, platformCustomerId.value"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=gvMWazFHfbxwhf8NWBbt3GAnlf8%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": -587754158,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-18T20:51:25Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "s",
                        "destinationNode": "company",
                        "sourceMethod": "putCustomer",
                        "destinationMethod": "findByPlatformCustomerId",
                        "sourceLine": 69,
                        "sourceCode": "@RequestBody s: S",
                        "destinationLine": 70,
                        "destinationCode": "@Param(\"company\") company: Company,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "putCustomer",
                                "node": "s",
                                "line": 71,
                                "code": "val customer = customerService.createOrUpdateCustomer(s)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 24,
                                "code": "fun createOrUpdateCustomer(customerAccountCommand: S): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/CustomerService.kt",
                                "method": "createOrUpdateCustomer",
                                "node": "customerAccountCommand",
                                "line": 26,
                                "code": "return eventHandler.executeAccountEvent(customerAccountCommand)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 56,
                                "code": "fun executeAccountEvent(eventCommand: EventCommand): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "eventCommand",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "additionalInfo",
                                "line": 134,
                                "code": "additionalInfo = additionalInfo,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/event/base/D.kt",
                                "method": "D",
                                "node": "additionalInfo",
                                "line": 42,
                                "code": "val additionalInfo: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "buildAccountUpdated",
                                "node": "D",
                                "line": 112,
                                "code": "D("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "buildAccountUpdated",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/command/S.kt",
                                "method": "toDomain",
                                "node": "also",
                                "line": 101,
                                "code": "buildAccountUpdated().also {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "executeAccountEvent",
                                "node": "toDomain",
                                "line": 57,
                                "code": "createOrUpdateCustomerByEvent(eventCommand.toDomain())"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 63,
                                "code": "fun createOrUpdateCustomerByEvent(iEvent: IEvent): Customer? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/handler/base/EventHandler.kt",
                                "method": "createOrUpdateCustomerByEvent",
                                "node": "iEvent",
                                "line": 65,
                                "code": "val customer = customerFromEventService.findCustomer(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomer",
                                "node": "iEvent",
                                "line": 65,
                                "code": "fun findCustomer(iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomer",
                                "node": "iEvent",
                                "line": 67,
                                "code": "?: findCustomerByOriginId(iEvent)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 73,
                                "code": "private fun findCustomerByOriginId(iEvent: IEvent): Customer? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 74,
                                "code": "if (!iEvent.customerOriginId().isNullOrEmpty()) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 80,
                                "code": "value = iEvent.customerOriginId()!!"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "iEvent",
                                "line": 77,
                                "code": "company = iEvent.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "company",
                                "line": 77,
                                "code": "company = iEvent.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/entity/valueobject/PlatformCustomerId.kt",
                                "method": "PlatformCustomerId",
                                "node": "company",
                                "line": 9,
                                "code": "val company: Company = Company.CENTAURO,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventService.kt",
                                "method": "findCustomerByOriginId",
                                "node": "PlatformCustomerId",
                                "line": 76,
                                "code": "PlatformCustomerId("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 99,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByCustomerOriginId",
                                "node": "platformCustomerId",
                                "line": 102,
                                "code": "findByPlatformCustomerId(platformCustomerId)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByPlatformCustomerId",
                                "node": "platformCustomerId",
                                "line": 108,
                                "code": "platformCustomerId: PlatformCustomerId"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByPlatformCustomerId",
                                "node": "platformCustomerId",
                                "line": 111,
                                "code": "platformCustomerId.company,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByPlatformCustomerId",
                                "node": "company",
                                "line": 111,
                                "code": "platformCustomerId.company,"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=oFJmykQBYbyN0n1g1XsQWCNIHZk%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": 640885851,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "cpf",
                        "destinationNode": "cpf",
                        "sourceMethod": "getCustomersByFilters",
                        "destinationMethod": "findByDocumentNumber",
                        "sourceLine": 90,
                        "sourceCode": "@Parameter(required = false, description = CPF_DESCRIPTION) @RequestParam cpf: String?,",
                        "destinationLine": 23,
                        "destinationCode": "@Param(\"cpf\") cpf: String?,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomersByFilters",
                                "node": "cpf",
                                "line": 94,
                                "code": "val identityKeys = IdentityKeys(cpf, cnpj, email)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/IdentityKeys.kt",
                                "method": "IdentityKeys",
                                "node": "cpf",
                                "line": 6,
                                "code": "var cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/IdentityKeys.kt",
                                "method": "IdentityKeys",
                                "node": "cpf",
                                "line": 6,
                                "code": "var cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/IdentityKeys.kt",
                                "method": "IdentityKeys",
                                "node": "cpf",
                                "line": 6,
                                "code": "var cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomersByFilters",
                                "node": "IdentityKeys",
                                "line": 94,
                                "code": "val identityKeys = IdentityKeys(cpf, cnpj, email)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomersByFilters",
                                "node": "identityKeys",
                                "line": 94,
                                "code": "val identityKeys = IdentityKeys(cpf, cnpj, email)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getCustomersByFilters",
                                "node": "identityKeys",
                                "line": 98,
                                "code": "val persons = personService.findBy(company, id, identityKeys).filterNotNull()"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findBy",
                                "node": "identityKey",
                                "line": 26,
                                "code": "identityKey: IdentityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findBy",
                                "node": "identityKey",
                                "line": 27,
                                "code": ") = findByCustomer(businessUnit, id, identityKey).map {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByCustomer",
                                "node": "identityKey",
                                "line": 34,
                                "code": "identityKey: IdentityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByCustomer",
                                "node": "identityKey",
                                "line": 38,
                                "code": "findByIdentityKey(businessUnit, identityKey)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByIdentityKey",
                                "node": "identityKeys",
                                "line": 53,
                                "code": "identityKeys: IdentityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByIdentityKey",
                                "node": "identityKeys",
                                "line": 55,
                                "code": "if (!identityKeys.existValidKey()) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByIdentityKey",
                                "node": "identityKeys",
                                "line": 58,
                                "code": "return customerFinder.findByIdentityKeys(identityKeys)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByIdentityKeys",
                                "node": "identityKeys",
                                "line": 29,
                                "code": "identityKeys: IdentityKeys,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByIdentityKeys",
                                "node": "identityKeys",
                                "line": 32,
                                "code": "val customers = findByDocumentNumber(identityKeys.cpf, identityKeys.cnpj)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByIdentityKeys",
                                "node": "cpf",
                                "line": 32,
                                "code": "val customers = findByDocumentNumber(identityKeys.cpf, identityKeys.cnpj)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByDocumentNumber",
                                "node": "cpf",
                                "line": 68,
                                "code": "cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByDocumentNumber",
                                "node": "cpf",
                                "line": 72,
                                "code": "customerRepository.findByDocumentNumber(cpf, cnpj)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=hq2oVIS4LrGF8CFA0OPJ4Z9%2BrNY%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    },
                    {
                        "similarityId": 536979830,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/EventRepository.kt",
                        "sourceNode": "customerId",
                        "destinationNode": "customerId",
                        "sourceMethod": "getOrders",
                        "destinationMethod": "findByCustomerIdAndCompanyAndType",
                        "sourceLine": 141,
                        "sourceCode": "@Parameter(description = CUSTOMER_ID_DESCRIPTION) @PathVariable customerId: String,",
                        "destinationLine": 75,
                        "destinationCode": "@Param(\"customerId\") customerId: String,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "getOrders",
                                "node": "customerId",
                                "line": 144,
                                "code": "val orderResponses = orderService.findEventsBy(customerId, pageable).map { OrderResponse.from(it) }"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/OrderService.kt",
                                "method": "findEventsBy",
                                "node": "id",
                                "line": 32,
                                "code": "fun findEventsBy(id: String, pageable: Pageable): List\u003cEvent\u003e {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/OrderService.kt",
                                "method": "findEventsBy",
                                "node": "id",
                                "line": 40,
                                "code": "customerId = id,"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=5Su3U7sQr%2BmQmRgPJR8PPDJYuug%3D",
                        "firstScanID": "13c58a3f-78d2-4e58-a900-cf7c95ebd96c",
                        "notes": []
                    },
                    {
                        "similarityId": 495143190,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/EventRepository.kt",
                        "sourceNode": "customerId",
                        "destinationNode": "customerId",
                        "sourceMethod": "deletePerson",
                        "destinationMethod": "findByCustomerIdAndCompany",
                        "sourceLine": 170,
                        "sourceCode": "@PathVariable customerId: String,",
                        "destinationLine": 17,
                        "destinationCode": "@Param(\"customerId\") customerId: String,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/CustomerController.kt",
                                "method": "deletePerson",
                                "node": "customerId",
                                "line": 174,
                                "code": "if (deletePersonService.deletePerson(customerId, businessUnit)) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/DeletePersonService.kt",
                                "method": "deletePerson",
                                "node": "customerId",
                                "line": 22,
                                "code": "fun deletePerson(customerId: String, company: Company): Boolean {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/DeletePersonService.kt",
                                "method": "deletePerson",
                                "node": "customerId",
                                "line": 23,
                                "code": "val eventCount = eventService.deleteByCustomerIdAndCompany(customerId, company)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/EventService.kt",
                                "method": "deleteByCustomerIdAndCompany",
                                "node": "customerId",
                                "line": 36,
                                "code": "fun deleteByCustomerIdAndCompany(customerId: String, company: Company): Int {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/EventService.kt",
                                "method": "deleteByCustomerIdAndCompany",
                                "node": "customerId",
                                "line": 37,
                                "code": "val events = eventRepository.findByCustomerIdAndCompany(customerId, company)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=m8FLfznhv%2B2hH9in9MfJ6Ek%2FD0Q%3D",
                        "firstScanID": "13c58a3f-78d2-4e58-a900-cf7c95ebd96c",
                        "notes": []
                    },
                    {
                        "similarityId": 604123299,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/repository/CustomerRepository.kt",
                        "sourceNode": "cpf",
                        "destinationNode": "cpf",
                        "sourceMethod": "getCustomers",
                        "destinationMethod": "findByDocumentNumber",
                        "sourceLine": 58,
                        "sourceCode": "@Parameter(required = false, description = CPF_DESCRIPTION) @RequestParam cpf: String?,",
                        "destinationLine": 23,
                        "destinationCode": "@Param(\"cpf\") cpf: String?,",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "cpf",
                                "line": 61,
                                "code": "val identityKeys = IdentityKeys(cpf = cpf, email = email)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/IdentityKeys.kt",
                                "method": "IdentityKeys",
                                "node": "cpf",
                                "line": 6,
                                "code": "var cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/IdentityKeys.kt",
                                "method": "IdentityKeys",
                                "node": "cpf",
                                "line": 6,
                                "code": "var cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/valueobject/IdentityKeys.kt",
                                "method": "IdentityKeys",
                                "node": "cpf",
                                "line": 6,
                                "code": "var cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "IdentityKeys",
                                "line": 61,
                                "code": "val identityKeys = IdentityKeys(cpf = cpf, email = email)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "identityKeys",
                                "line": 61,
                                "code": "val identityKeys = IdentityKeys(cpf = cpf, email = email)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "identityKeys",
                                "line": 64,
                                "code": "identityKeys = identityKeys,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/dtos/ClipboardQueryDTO.kt",
                                "method": "ClipboardQueryDTO",
                                "node": "identityKeys",
                                "line": 8,
                                "code": "val identityKeys: IdentityKeys,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/dtos/ClipboardQueryDTO.kt",
                                "method": "ClipboardQueryDTO",
                                "node": "identityKeys",
                                "line": 8,
                                "code": "val identityKeys: IdentityKeys,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/dtos/ClipboardQueryDTO.kt",
                                "method": "ClipboardQueryDTO",
                                "node": "identityKeys",
                                "line": 8,
                                "code": "val identityKeys: IdentityKeys,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "ClipboardQueryDTO",
                                "line": 62,
                                "code": "val clipboardQueryDTO = ClipboardQueryDTO("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "clipboardQueryDTO",
                                "line": 62,
                                "code": "val clipboardQueryDTO = ClipboardQueryDTO("
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/api/ClipboardController.kt",
                                "method": "getCustomers",
                                "node": "clipboardQueryDTO",
                                "line": 68,
                                "code": "val clipboard = clipboardService.getClipboard(clipboardQueryDTO)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "getClipboard",
                                "node": "clipboardQueryDTO",
                                "line": 22,
                                "code": "fun getClipboard(clipboardQueryDTO: ClipboardQueryDTO): Clipboard? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "getClipboard",
                                "node": "clipboardQueryDTO",
                                "line": 24,
                                "code": "createClipboard(clipboardQueryDTO)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "createClipboard",
                                "node": "clipboardQueryDTO",
                                "line": 29,
                                "code": "private fun createClipboard(clipboardQueryDTO: ClipboardQueryDTO): Clipboard? {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "createClipboard",
                                "node": "clipboardQueryDTO",
                                "line": 30,
                                "code": "val person = getPerson(clipboardQueryDTO) ?: return null"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "getPerson",
                                "node": "clipboardQueryDTO",
                                "line": 48,
                                "code": "private fun getPerson(clipboardQueryDTO: ClipboardQueryDTO): Person? ="
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "getPerson",
                                "node": "clipboardQueryDTO",
                                "line": 51,
                                "code": "id = null, identityKey = clipboardQueryDTO.identityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/ClipboardService.kt",
                                "method": "getPerson",
                                "node": "identityKeys",
                                "line": 51,
                                "code": "id = null, identityKey = clipboardQueryDTO.identityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findBy",
                                "node": "identityKey",
                                "line": 26,
                                "code": "identityKey: IdentityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findBy",
                                "node": "identityKey",
                                "line": 27,
                                "code": ") = findByCustomer(businessUnit, id, identityKey).map {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByCustomer",
                                "node": "identityKey",
                                "line": 34,
                                "code": "identityKey: IdentityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByCustomer",
                                "node": "identityKey",
                                "line": 38,
                                "code": "findByIdentityKey(businessUnit, identityKey)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByIdentityKey",
                                "node": "identityKeys",
                                "line": 53,
                                "code": "identityKeys: IdentityKeys"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByIdentityKey",
                                "node": "identityKeys",
                                "line": 55,
                                "code": "if (!identityKeys.existValidKey()) {"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/application/services/PersonService.kt",
                                "method": "findByIdentityKey",
                                "node": "identityKeys",
                                "line": 58,
                                "code": "return customerFinder.findByIdentityKeys(identityKeys)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByIdentityKeys",
                                "node": "identityKeys",
                                "line": 29,
                                "code": "identityKeys: IdentityKeys,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByIdentityKeys",
                                "node": "identityKeys",
                                "line": 32,
                                "code": "val customers = findByDocumentNumber(identityKeys.cpf, identityKeys.cnpj)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByIdentityKeys",
                                "node": "cpf",
                                "line": 32,
                                "code": "val customers = findByDocumentNumber(identityKeys.cpf, identityKeys.cnpj)"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByDocumentNumber",
                                "node": "cpf",
                                "line": 68,
                                "code": "cpf: String? = null,"
                            },
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/domain/service/CustomerFinder.kt",
                                "method": "findByDocumentNumber",
                                "node": "cpf",
                                "line": 72,
                                "code": "customerRepository.findByDocumentNumber(cpf, cnpj)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=UPJUQffX3uK2PAgHCjskVvLuyKY%3D",
                        "firstScanID": "42f633e0-baee-4312-9283-7b189e76450f",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Unchecked_Input_for_Loop_Condition",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/606/7308467749988344824",
                "queryId": 7308467749988344824,
                "description": "Method @SourceMethod at line @SourceLine of @SourceFile gets user input from element @SourceElement . This element’s value flows through the code without being validated, and is eventually used in a loop condition in @DestinationMethod at line @DestinationLine of @DestinationFile. This constitutes an Unchecked Input for Loop Condition.\n\n",
                "vulnerabilitiesTotal": 1,
                "queryPath": "Kotlin/Kotlin_Medium_Threat/Unchecked_Input_for_Loop_Condition",
                "cweId": 606,
                "categories": [
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A4-Insecure Design"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -1047631551,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-01T23:57:07Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/configuration/XSSSanitizationInterceptor.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/configuration/XSSSanitizationInterceptor.kt",
                        "sourceNode": "parameterMap",
                        "destinationNode": "parameterMap",
                        "sourceMethod": "sanitizeParameterMap",
                        "destinationMethod": "sanitizeParameterMap",
                        "sourceLine": 23,
                        "sourceCode": "val parameterMap = request.parameterMap",
                        "destinationLine": 25,
                        "destinationCode": "for ((_, values) in parameterMap) {",
                        "nodes": [
                            {
                                "fileName": "/src/main/kotlin/br/com/123/loiskjdye/configuration/XSSSanitizationInterceptor.kt",
                                "method": "sanitizeParameterMap",
                                "node": "parameterMap",
                                "line": 23,
                                "code": "val parameterMap = request.parameterMap"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=Nw4DvTqaqFHqWcuuvf05%2BOwCvUE%3D",
                        "firstScanID": "3d859bfc-e7c7-435d-862e-e50c0c257c23",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Unchecked_Input_for_Loop_Condition",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/606/12513885999564608658",
                "queryId": 12513885999564608658,
                "description": "Method @SourceMethod at line @SourceLine of @SourceFile gets user input from element @SourceElement . This element’s value flows through the code without being validated, and is eventually used in a loop condition in @DestinationMethod at line @DestinationLine of @DestinationFile. This constitutes an Unchecked Input for Loop Condition.\n\n",
                "vulnerabilitiesTotal": 2,
                "queryPath": "Python/Python_Medium_Threat/Unchecked_Input_for_Loop_Condition",
                "cweId": 606,
                "categories": [
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A4-Insecure Design"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -1697321860,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/kafka-tombstone.py",
                        "destinationFileName": "/scripts/kafka-tombstone.py",
                        "sourceNode": "environ",
                        "destinationNode": "Not",
                        "sourceMethod": "_create_producer_connected_to_kafka",
                        "destinationMethod": "_create_producer_connected_to_kafka",
                        "sourceLine": 22,
                        "sourceCode": "sasl_plain_password=os.environ['KAFKA_PASSWORD'])",
                        "destinationLine": 24,
                        "destinationCode": "while not producer.bootstrap_connected():",
                        "nodes": [
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "KafkaProducer",
                                "line": 17,
                                "code": "producer = KafkaProducer(bootstrap_servers=bootstrap_servers,"
                            },
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "producer",
                                "line": 17,
                                "code": "producer = KafkaProducer(bootstrap_servers=bootstrap_servers,"
                            },
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "producer",
                                "line": 24,
                                "code": "while not producer.bootstrap_connected():"
                            },
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "bootstrap_connected",
                                "line": 24,
                                "code": "while not producer.bootstrap_connected():"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=vIT%2BynoenV7jhBmTKHEGnwhdZn0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 815362143,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/kafka-tombstone.py",
                        "destinationFileName": "/scripts/kafka-tombstone.py",
                        "sourceNode": "environ",
                        "destinationNode": "Not",
                        "sourceMethod": "_create_producer_connected_to_kafka",
                        "destinationMethod": "_create_producer_connected_to_kafka",
                        "sourceLine": 21,
                        "sourceCode": "sasl_plain_username=os.environ['KAFKA_USERNAME'],",
                        "destinationLine": 24,
                        "destinationCode": "while not producer.bootstrap_connected():",
                        "nodes": [
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "KafkaProducer",
                                "line": 17,
                                "code": "producer = KafkaProducer(bootstrap_servers=bootstrap_servers,"
                            },
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "producer",
                                "line": 17,
                                "code": "producer = KafkaProducer(bootstrap_servers=bootstrap_servers,"
                            },
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "producer",
                                "line": 24,
                                "code": "while not producer.bootstrap_connected():"
                            },
                            {
                                "fileName": "/scripts/kafka-tombstone.py",
                                "method": "_create_producer_connected_to_kafka",
                                "node": "bootstrap_connected",
                                "line": 24,
                                "code": "while not producer.bootstrap_connected():"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=dwkc9QNXDY6nyxLmILK9%2FNz26H8%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "SSRF",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/918/5815271517533586646",
                "queryId": 5815271517533586646,
                "description": "The application sends a request to a remote server, for some resource, using @DestinationElement in @DestinationFile:@DestinationLine. However, an attacker can control the target of the request, by sending a URL or other data in @SourceElement at @SourceFile:@SourceLine.\n\n",
                "vulnerabilitiesTotal": 4,
                "queryPath": "Go/Go_Medium_Threat/SSRF",
                "cweId": 918,
                "categories": [
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Verification and representation of input data"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V05 Validation, Sanitization and Encoding"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2017",
                        "subCategories": [
                            "A5-Broken Access Control"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A10-Server-Side Request Forgery"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 1884777923,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Text",
                        "destinationNode": "Do",
                        "sourceMethod": "main",
                        "destinationMethod": "Lambda",
                        "sourceLine": 129,
                        "sourceCode": "line := scanner.Text()",
                        "destinationLine": 88,
                        "destinationCode": "resp, err := httpClient.Do(req)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Split",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "input",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "append",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 139,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 120,
                                "code": "}(i, inp)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 74,
                                "code": "go func(i int, inp input) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "url",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "NewRequest",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 85,
                                "code": "req.Header.Add(\"Accept\", \"application/vnd.example123.v1+json\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 86,
                                "code": "req.Header.Add(\"Accept-Charset\", \"UTF-8\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 88,
                                "code": "resp, err := httpClient.Do(req)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=tA56eqAtnN%2Bjd%2BsB1ayL0tlLBD8%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1912671113,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Text",
                        "destinationNode": "Do",
                        "sourceMethod": "main",
                        "destinationMethod": "Lambda",
                        "sourceLine": 151,
                        "sourceCode": "line := scanner.Text()",
                        "destinationLine": 88,
                        "destinationCode": "resp, err := httpClient.Do(req)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Split",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 153,
                                "code": "field := parts[0]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "field",
                                "line": 153,
                                "code": "field := parts[0]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "field",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "input",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "append",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 172,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 120,
                                "code": "}(i, inp)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 74,
                                "code": "go func(i int, inp input) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "url",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "NewRequest",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 78,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 85,
                                "code": "req.Header.Add(\"Accept\", \"application/vnd.example123.v1+json\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 86,
                                "code": "req.Header.Add(\"Accept-Charset\", \"UTF-8\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 88,
                                "code": "resp, err := httpClient.Do(req)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=LZtZQkrDjUuHkkCLdvQu%2BDKdraE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -2058055515,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Text",
                        "destinationNode": "Do",
                        "sourceMethod": "main",
                        "destinationMethod": "Lambda",
                        "sourceLine": 129,
                        "sourceCode": "line := scanner.Text()",
                        "destinationLine": 78,
                        "destinationCode": "resp, err := httpClient.Do(req)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Split",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "input",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "append",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 139,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 52,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 98,
                                "code": "}(i, inp)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 64,
                                "code": "go func(i int, inp input) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "url",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "NewRequest",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 75,
                                "code": "req.Header.Add(\"Accept\", \"application/vnd.example123.v1+json\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 76,
                                "code": "req.Header.Add(\"Accept-Charset\", \"UTF-8\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 78,
                                "code": "resp, err := httpClient.Do(req)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=RuLcgBI47lTYtQAwY3NhPdXs6Jw%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 569747057,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Text",
                        "destinationNode": "Do",
                        "sourceMethod": "main",
                        "destinationMethod": "Lambda",
                        "sourceLine": 151,
                        "sourceCode": "line := scanner.Text()",
                        "destinationLine": 78,
                        "destinationCode": "resp, err := httpClient.Do(req)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Split",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 153,
                                "code": "field := parts[0]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "field",
                                "line": 153,
                                "code": "field := parts[0]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "field",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "input",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "append",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 172,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 52,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inp",
                                "line": 98,
                                "code": "}(i, inp)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 64,
                                "code": "go func(i int, inp input) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "inp",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "url",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "NewRequest",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 68,
                                "code": "req, err := http.NewRequest(\"GET\", inp.url, nil)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 75,
                                "code": "req.Header.Add(\"Accept\", \"application/vnd.example123.v1+json\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 76,
                                "code": "req.Header.Add(\"Accept-Charset\", \"UTF-8\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "Lambda",
                                "node": "req",
                                "line": 78,
                                "code": "resp, err := httpClient.Do(req)"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=xHwepY1uRJ0CUKw1%2FCWCdjqvku4%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "SSL_Verification_Bypass",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/599/1229368380051640880",
                "queryId": 1229368380051640880,
                "description": "@DestinationFile relies HTTPS requests, in @DestinationMethod. The @DestinationElement parameter, at line @DestinationLine, effectively disables verification of the SSL certificate trust chain.\n\n",
                "vulnerabilitiesTotal": 1,
                "queryPath": "Go/Go_Medium_Threat/SSL_Verification_Bypass",
                "cweId": 599,
                "categories": [
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V09 Communication"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A2-Cryptographic Failures"
                        ]
                    },
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Security Functions"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -1862729044,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "true",
                        "destinationNode": "true",
                        "sourceLine": 28,
                        "sourceCode": "TLSClientConfig:       \u0026tls.Config{InsecureSkipVerify: true},",
                        "destinationLine": 28,
                        "destinationCode": "TLSClientConfig:       \u0026tls.Config{InsecureSkipVerify: true},",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=dwQ%2B5L%2FprM3S7VRgll%2FPfo1NVcE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Reflected_Relative_Path_Traversal",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/23/13335880433012882564",
                "queryId": 13335880433012882564,
                "description": "Method @SourceMethod at line @SourceLine of @SourceFile gets dynamic data from the @SourceElement element. This element’s value then flows through the code and is eventually used in a file path for local disk access in @DestinationMethod at line @DestinationLine of @DestinationFile. This may cause a Path Traversal vulnerability.\n\n",
                "vulnerabilitiesTotal": 4,
                "queryPath": "Go/Go_Medium_Threat/Reflected_Relative_Path_Traversal",
                "cweId": 23,
                "categories": [
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A1-Broken Access Control"
                        ]
                    },
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    },
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Verification and representation of input data"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V12 Files and Resources"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 395802728,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 191,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 193,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 191,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=bLd8WKxjj37KomVyg26Kd52H%2FVE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1961783156,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 159,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 161,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 159,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=6UQvxQarG8caXzRN9m8ZsUdqwAI%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 287938150,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 140,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 142,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 140,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=lMnAZUJkfs826uXTlQj9NqoevwE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1536663916,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 118,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 120,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 118,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=ZBmrTjbTFrelRalQkJt4lP7%2BLgU%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Reflected_Absolute_Path_Traversal",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/36/2543264030649380806",
                "queryId": 2543264030649380806,
                "description": "Method @SourceMethod at line @SourceLine of @SourceFile gets dynamic data from the @SourceElement element. This element’s value then flows through the code and is eventually used in a file path for local disk access in @DestinationMethod at line @DestinationLine of @DestinationFile. This may cause a Path Traversal vulnerability.\n\n",
                "vulnerabilitiesTotal": 4,
                "queryPath": "Go/Go_Medium_Threat/Reflected_Absolute_Path_Traversal",
                "cweId": 36,
                "categories": [
                    {
                        "name": "FISMA 2014",
                        "subCategories": [
                            "System And Information Integrity"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Verification and representation of input data"
                        ]
                    },
                    {
                        "name": "NIST SP 800-53",
                        "subCategories": [
                            "SI-10 Information Input Validation (P1)"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V12 Files and Resources"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A1-Broken Access Control"
                        ]
                    },
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    },
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 913471081,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 191,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 193,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 191,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=strTNgzsaxq%2BnXzpP%2F1tF3eaj3Q%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1794979387,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 159,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 161,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 159,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=VXQ3i6GPJDHiBkMZLc5FNxA%2F5C0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1464180907,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 140,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 142,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 140,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=Tt57l%2FfVa2%2BwJDmZhg8Yiu09GHY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -989389595,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Args",
                        "destinationNode": "filename",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 118,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 120,
                        "destinationCode": "file, err := os.Open(filename)",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 118,
                                "code": "filename := os.Args[1]"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=MMOOUcm1bpbOIdhY9t%2B6EyBle%2FY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Denial_Of_Service_Resource_Exhaustion",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/400/13696509829871502452",
                "queryId": 13696509829871502452,
                "description": "The resource @SourceElement allocated by @SourceMethod in the file @SourceFile at line @SourceLine is prone to resource exhaustion when used by @DestinationMethod in the file @DestinationFile at line @DestinationLine.\n\n",
                "vulnerabilitiesTotal": 12,
                "queryPath": "Go/Go_Medium_Threat/Denial_Of_Service_Resource_Exhaustion",
                "cweId": 400,
                "categories": [
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A4-Insecure Design"
                        ]
                    },
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    },
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Verification and representation of input data"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V12 Files and Resources"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 1854218705,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "print",
                        "sourceLine": 191,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 119,
                        "destinationCode": "for _, item := range *order.Items {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 191,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Open",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 198,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 206,
                                "code": "scanner.Buffer(buf, maxCapacity)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 208,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Text",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "append",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 223,
                                "code": "processOrders(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 145,
                                "code": "func processOrders(inputs []string, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "line",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "line",
                                "line": 173,
                                "code": "}(i, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "line",
                                "line": 157,
                                "code": "go func(i int, line string) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "line",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "Unmarshal",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "encoding/json",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "Address",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "record",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "record",
                                "line": 167,
                                "code": "print(record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "record",
                                "line": 97,
                                "code": "func print(record Record) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "record",
                                "line": 98,
                                "code": "for _, order := range record.Orders {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "Orders",
                                "line": 98,
                                "code": "for _, order := range record.Orders {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "order",
                                "line": 98,
                                "code": "for _, order := range record.Orders {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "order",
                                "line": 119,
                                "code": "for _, item := range *order.Items {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "Items",
                                "line": 119,
                                "code": "for _, item := range *order.Items {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "Pointer",
                                "line": 119,
                                "code": "for _, item := range *order.Items {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "len",
                                "line": 119,
                                "code": "for _, item := range *order.Items {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=cgInUQs0zqZy7%2Bi34V0h7rDHBq4%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1135908474,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "print",
                        "sourceLine": 191,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 98,
                        "destinationCode": "for _, order := range record.Orders {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 191,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Open",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 198,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 206,
                                "code": "scanner.Buffer(buf, maxCapacity)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 208,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Text",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "append",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 223,
                                "code": "processOrders(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 145,
                                "code": "func processOrders(inputs []string, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "line",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "line",
                                "line": 173,
                                "code": "}(i, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "line",
                                "line": 157,
                                "code": "go func(i int, line string) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "line",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "Unmarshal",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "encoding/json",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "Address",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "record",
                                "line": 162,
                                "code": "err := json.Unmarshal([]byte(line), \u0026record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "Lambda",
                                "node": "record",
                                "line": 167,
                                "code": "print(record)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "record",
                                "line": 97,
                                "code": "func print(record Record) {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "record",
                                "line": 98,
                                "code": "for _, order := range record.Orders {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "Orders",
                                "line": 98,
                                "code": "for _, order := range record.Orders {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "print",
                                "node": "len",
                                "line": 98,
                                "code": "for _, order := range record.Orders {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=%2FdG9mOc3VLYUM3saeMFd88WrV6A%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 32673949,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "processOrders",
                        "sourceLine": 191,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 155,
                        "destinationCode": "for i, line := range inputs {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 191,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Open",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 198,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 206,
                                "code": "scanner.Buffer(buf, maxCapacity)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 208,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Text",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 209,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "append",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 210,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 223,
                                "code": "processOrders(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 145,
                                "code": "func processOrders(inputs []string, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "inputs",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "processOrders",
                                "node": "len",
                                "line": 155,
                                "code": "for i, line := range inputs {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=R7Rt153i51oEwwbyLc6nApneueQ%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1091072045,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "Scan",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 191,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 208,
                        "destinationCode": "for scanner.Scan() {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 191,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "Open",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 193,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 198,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 202,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 206,
                                "code": "scanner.Buffer(buf, maxCapacity)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_orders_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 208,
                                "code": "for scanner.Scan() {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=%2BXVe1rco%2BeIXZo6ihh7OMabLLYA%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 2103498812,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "process",
                        "sourceLine": 159,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 122,
                        "destinationCode": "for i, line := range inputs {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 159,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 161,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "Open",
                                "line": 161,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 161,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 166,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 170,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 170,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 170,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 171,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 172,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "Text",
                                "line": 172,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 172,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "line",
                                "line": 173,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "append",
                                "line": 173,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 173,
                                "code": "inputs = append(inputs, line)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 180,
                                "code": "process(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "process",
                                "node": "inputs",
                                "line": 112,
                                "code": "func process(inputs []string, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "process",
                                "node": "inputs",
                                "line": 122,
                                "code": "for i, line := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "process",
                                "node": "len",
                                "line": 122,
                                "code": "for i, line := range inputs {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=1xy1UlEUgF4WbuyO49WvU0w56bM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 840410449,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "destinationFileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                        "sourceNode": "Args",
                        "destinationNode": "Scan",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 159,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 171,
                        "destinationCode": "for scanner.Scan() {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 159,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "filename",
                                "line": 161,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "Open",
                                "line": 161,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 161,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 166,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "file",
                                "line": 170,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 170,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 170,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/generate_customers_csv.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 171,
                                "code": "for scanner.Scan() {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=Tkvsc9AX2%2BFHObW0NaurE%2BwxVz0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 401019633,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "boundedParallelGet",
                        "sourceLine": 140,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 72,
                        "destinationCode": "for i, inp := range inputs {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 140,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Open",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 147,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 150,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Text",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Split",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 154,
                                "code": "value := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "value",
                                "line": 154,
                                "code": "value := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "value",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "input",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "append",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 172,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "len",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=jMOa2QJfnCz7LRuqTdMMTt5ijrU%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1798981385,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "boundedParallelGet",
                        "sourceLine": 140,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 62,
                        "destinationCode": "for i, inp := range inputs {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 140,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Open",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 147,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 150,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Text",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 151,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "line",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Split",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 152,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "parts",
                                "line": 154,
                                "code": "value := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "value",
                                "line": 154,
                                "code": "value := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "value",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "input",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "append",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 166,
                                "code": "inputs = append(inputs, input{field, value, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 172,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 52,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "len",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=wo%2FDo2dEMZ4VTgq08e%2BuZR3oIMM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 617239467,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Args",
                        "destinationNode": "Scan",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 140,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 150,
                        "destinationCode": "for scanner.Scan() {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 140,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "filename",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "Open",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 142,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 147,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "file",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 149,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 150,
                                "code": "for scanner.Scan() {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=XcaYLeJKppg9dYSs6SgDMGQPqgI%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -687221187,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "boundedParallelGet",
                        "sourceLine": 118,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 72,
                        "destinationCode": "for i, inp := range inputs {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 118,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Open",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 125,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 128,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Text",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Split",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "input",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "append",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 139,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/e.go",
                                "method": "boundedParallelGet",
                                "node": "len",
                                "line": 72,
                                "code": "for i, inp := range inputs {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=UlC%2FQ%2BFuFtk2Km%2FQwNC%2Bhz6unac%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -2037475029,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Args",
                        "destinationNode": "\u003c",
                        "sourceMethod": "main",
                        "destinationMethod": "boundedParallelGet",
                        "sourceLine": 118,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 62,
                        "destinationCode": "for i, inp := range inputs {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 118,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Open",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 125,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 128,
                                "code": "for scanner.Scan() {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Text",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 129,
                                "code": "line := scanner.Text()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "line",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Split",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 130,
                                "code": "parts := strings.Split(line, \"@\")"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "parts",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 131,
                                "code": "customer_id := parts[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "customer_id",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "input",
                                "node": "customer_id",
                                "line": 48,
                                "code": "customer_id string"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "input",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "append",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 133,
                                "code": "inputs = append(inputs, input{customer_id, url})"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "inputs",
                                "line": 139,
                                "code": "results := boundedParallelGet(inputs, concurrency)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 52,
                                "code": "func boundedParallelGet(inputs []input, concurrencyLimit int) []bool {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "inputs",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "boundedParallelGet",
                                "node": "len",
                                "line": 62,
                                "code": "for i, inp := range inputs {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=yI9rwIgdTYRg5Uv6klXjsscLNHo%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1158459855,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Medium",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "Args",
                        "destinationNode": "Scan",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 118,
                        "sourceCode": "filename := os.Args[1]",
                        "destinationLine": 128,
                        "destinationCode": "for scanner.Scan() {",
                        "nodes": [
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 118,
                                "code": "filename := os.Args[1]"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "filename",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "Open",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 120,
                                "code": "file, err := os.Open(filename)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 125,
                                "code": "defer file.Close()"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "file",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "NewScanner",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 127,
                                "code": "scanner := bufio.NewScanner(file)"
                            },
                            {
                                "fileName": "/scripts/export-csv-full-base/extract_orders.go",
                                "method": "main",
                                "node": "scanner",
                                "line": 128,
                                "code": "for scanner.Scan() {"
                            }
                        ],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=oFBUJSl5ZaU2n508T8beHzxwdKg%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "TruffleHog_HighEntropy_Strings",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/798/2386285962878890935",
                "queryId": 2386285962878890935,
                "description": "The application uses the hard-coded password @SourceElement for authentication purposes, either using it to verify users' identities, or to access another remote system. This password at line @SourceLine of @SourceFile appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding the application.",
                "vulnerabilitiesTotal": 56,
                "queryPath": "Java/Java_Low_Visibility/TruffleHog_HighEntropy_Strings",
                "cweId": 798,
                "categories": [
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V06 Stored Cryptography"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A7-Identification and Authentication Failures"
                        ]
                    },
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    },
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Security Functions"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -199619872,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-11T04:43:00Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "sourceNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "destinationNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "sourceLine": 330,
                        "sourceCode": "originId = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\",",
                        "destinationLine": 330,
                        "destinationCode": "originId = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=O9dg9o7XYmx6BcTGcu03wyKMpGM%3D",
                        "firstScanID": "12f6a247-2e80-497c-a975-20699ef3a6be",
                        "notes": []
                    },
                    {
                        "similarityId": -1700918878,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-11T04:43:00Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "sourceNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "destinationNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "sourceLine": 367,
                        "sourceCode": "originId = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\"",
                        "destinationLine": 367,
                        "destinationCode": "originId = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=aeXsqhk0uGM2ZYa1Q8syZB0DZGY%3D",
                        "firstScanID": "12f6a247-2e80-497c-a975-20699ef3a6be",
                        "notes": []
                    },
                    {
                        "similarityId": 1147546504,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-11T04:43:00Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "sourceNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "destinationNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "sourceLine": 247,
                        "sourceCode": "value = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\"",
                        "destinationLine": 247,
                        "destinationCode": "value = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=4IhwFXitst3KXs6jQ2dvZGlfbrU%3D",
                        "firstScanID": "12f6a247-2e80-497c-a975-20699ef3a6be",
                        "notes": []
                    },
                    {
                        "similarityId": 1147546504,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-04-11T04:43:00Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/SplitWrongCustomerJobIntegrationTest.kt",
                        "sourceNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "destinationNode": "a24dd2f3-e7bd-4f35-9530-28c023a6ff00",
                        "sourceLine": 278,
                        "sourceCode": "value = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\"",
                        "destinationLine": 278,
                        "destinationCode": "value = \"a24dd2f3-e7bd-4f35-9530-28c023a6ff00\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=JdU3IsDJGqFDUpSuUAHQ6I%2F6jyY%3D",
                        "firstScanID": "12f6a247-2e80-497c-a975-20699ef3a6be",
                        "notes": []
                    },
                    {
                        "similarityId": 1086961550,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-27T18:15:41Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "sourceNode": "b256f34f-71b3-42b0-9c2b-9699cb1c9a46",
                        "destinationNode": "b256f34f-71b3-42b0-9c2b-9699cb1c9a46",
                        "sourceLine": 56,
                        "sourceCode": "const val OTHER_CUSTOMER_ID = \"b256f34f-71b3-42b0-9c2b-9699cb1c9a46\"",
                        "destinationLine": 56,
                        "destinationCode": "const val OTHER_CUSTOMER_ID = \"b256f34f-71b3-42b0-9c2b-9699cb1c9a46\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=W5EkYqK4r1wsIgjmRl4i2gbRfew%3D",
                        "firstScanID": "674aaaba-7622-4773-bf5c-c69b46724e05",
                        "notes": []
                    },
                    {
                        "similarityId": 1085937290,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "sourceNode": "f5eab4ab-d5bf-4183-aa1b-4f8154df3411",
                        "destinationNode": "f5eab4ab-d5bf-4183-aa1b-4f8154df3411",
                        "sourceLine": 124,
                        "sourceCode": "\"mp_deviceid\":\"f5eab4ab-d5bf-4183-aa1b-4f8154df3411\",",
                        "destinationLine": 124,
                        "destinationCode": "\"mp_deviceid\":\"f5eab4ab-d5bf-4183-aa1b-4f8154df3411\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=dmB1Dwrh4xKejo%2ByPNnBebfWReU%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": -534264276,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "sourceNode": "e6c8ddc3-b12c-4a82-9c26-ecf4f637c65b",
                        "destinationNode": "e6c8ddc3-b12c-4a82-9c26-ecf4f637c65b",
                        "sourceLine": 102,
                        "sourceCode": "\"source_request_id\":\"e6c8ddc3-b12c-4a82-9c26-ecf4f637c65b\",",
                        "destinationLine": 102,
                        "destinationCode": "\"source_request_id\":\"e6c8ddc3-b12c-4a82-9c26-ecf4f637c65b\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=VfFFt2NzonsfBRUx71ImKfd4qL4%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": -1634429672,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "sourceNode": "eef028aa-e884-43e4-8a1e-13fea8107fee",
                        "destinationNode": "eef028aa-e884-43e4-8a1e-13fea8107fee",
                        "sourceLine": 101,
                        "sourceCode": "\"message_id\":\"eef028aa-e884-43e4-8a1e-13fea8107fee\",",
                        "destinationLine": 101,
                        "destinationCode": "\"message_id\":\"eef028aa-e884-43e4-8a1e-13fea8107fee\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=KDxwztm2HjXSkwoX809shw%2Fjuy8%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": 1271592864,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "sourceNode": "3C9ACCAC-4E75-40BC-A50E-D5D549F4580B",
                        "destinationNode": "3C9ACCAC-4E75-40BC-A50E-D5D549F4580B",
                        "sourceLine": 88,
                        "sourceCode": "\"session_uuid\":\"3C9ACCAC-4E75-40BC-A50E-D5D549F4580B\",",
                        "destinationLine": 88,
                        "destinationCode": "\"session_uuid\":\"3C9ACCAC-4E75-40BC-A50E-D5D549F4580B\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=NrAj7Kl84SAdUFx%2Biljj8FS0kFU%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": -1005063728,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "sourceNode": "-2418825570255719384",
                        "destinationNode": "-2418825570255719384",
                        "sourceLine": 87,
                        "sourceCode": "\"session_id\":\"-2418825570255719384\",",
                        "destinationLine": 87,
                        "destinationCode": "\"session_id\":\"-2418825570255719384\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=B67HUxR1L%2BZWYzBwaWqFpM1G6ZU%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": -951075168,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/WebUserCommandBuilder.kt",
                        "sourceNode": "36f88d79-7597-4097-7380-a06ed98aac7a",
                        "destinationNode": "36f88d79-7597-4097-7380-a06ed98aac7a",
                        "sourceLine": 86,
                        "sourceCode": "\"source_message_id\":\"36f88d79-7597-4097-7380-a06ed98aac7a\",",
                        "destinationLine": 86,
                        "destinationCode": "\"source_message_id\":\"36f88d79-7597-4097-7380-a06ed98aac7a\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=2W72khTVyVCrpA6piW2gYfWWq%2BM%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": 607023392,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/resources/wiremock/order/order.json",
                        "destinationFileName": "/src/test/resources/wiremock/order/order.json",
                        "sourceNode": "80430281-970E-4027-AC68-2131D1D77DC8",
                        "destinationNode": "80430281-970E-4027-AC68-2131D1D77DC8",
                        "sourceLine": 357,
                        "sourceCode": "\"grouper\": \"80430281-970E-4027-AC68-2131D1D77DC8\",",
                        "destinationLine": 357,
                        "destinationCode": "\"grouper\": \"80430281-970E-4027-AC68-2131D1D77DC8\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=yzFRItG%2Fl39MdZUOEgH0ers6V%2FY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -282363872,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/resources/wiremock/order/order.json",
                        "destinationFileName": "/src/test/resources/wiremock/order/order.json",
                        "sourceNode": "2D023F2A-FD9F-4282-B36C-280CC0C2FD72",
                        "destinationNode": "2D023F2A-FD9F-4282-B36C-280CC0C2FD72",
                        "sourceLine": 223,
                        "sourceCode": "\"grouper\": \"2D023F2A-FD9F-4282-B36C-280CC0C2FD72\",",
                        "destinationLine": 223,
                        "destinationCode": "\"grouper\": \"2D023F2A-FD9F-4282-B36C-280CC0C2FD72\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=6pYCwEjzMfg8QUD5gi%2FbLsahHBg%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1674015712,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/resources/wiremock/order/order.json",
                        "destinationFileName": "/src/test/resources/wiremock/order/order.json",
                        "sourceNode": "D12378CD-0FFA-401A-9EC9-6F01312746FA",
                        "destinationNode": "D12378CD-0FFA-401A-9EC9-6F01312746FA",
                        "sourceLine": 4,
                        "sourceCode": "\"code\": \"D12378CD-0FFA-401A-9EC9-6F01312746FA\",",
                        "destinationLine": 4,
                        "destinationCode": "\"code\": \"D12378CD-0FFA-401A-9EC9-6F01312746FA\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=xdtersnfgXprNY%2BQT%2BgZ0CdRCOM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 2062432160,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/OrderStatusDeliveryGroupConsumerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/OrderStatusDeliveryGroupConsumerTest.kt",
                        "sourceNode": "880CCCB5-2267-4A04-A963-24DEA02F1A14",
                        "destinationNode": "880CCCB5-2267-4A04-A963-24DEA02F1A14",
                        "sourceLine": 150,
                        "sourceCode": "\"    \\\"token\\\": \\\"880CCCB5-2267-4A04-A963-24DEA02F1A14\\\"\" +",
                        "destinationLine": 150,
                        "destinationCode": "\"    \\\"token\\\": \\\"880CCCB5-2267-4A04-A963-24DEA02F1A14\\\"\" +",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=IMbyW5EDThudp5ULJW%2FTvQDjc3E%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 2062432160,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/OrderStatusDeliveryGroupConsumerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/OrderStatusDeliveryGroupConsumerTest.kt",
                        "sourceNode": "880CCCB5-2267-4A04-A963-24DEA02F1A14",
                        "destinationNode": "880CCCB5-2267-4A04-A963-24DEA02F1A14",
                        "sourceLine": 42,
                        "sourceCode": "\"    \\\"token\\\": \\\"880CCCB5-2267-4A04-A963-24DEA02F1A14\\\"\" +",
                        "destinationLine": 42,
                        "destinationCode": "\"    \\\"token\\\": \\\"880CCCB5-2267-4A04-A963-24DEA02F1A14\\\"\" +",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=WreWxISEHGAGFChGwK2%2FE%2FRhEyg%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -641287918,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/OrderStatusDeliveryGroupConsumerIntegrationTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/OrderStatusDeliveryGroupConsumerIntegrationTest.kt",
                        "sourceNode": "71B00656-5B39-4625-BDA4-B066171652B6",
                        "destinationNode": "71B00656-5B39-4625-BDA4-B066171652B6",
                        "sourceLine": 42,
                        "sourceCode": "\"    \\\"token\\\": \\\"71B00656-5B39-4625-BDA4-B066171652B6\\\"\" +",
                        "destinationLine": 42,
                        "destinationCode": "\"    \\\"token\\\": \\\"71B00656-5B39-4625-BDA4-B066171652B6\\\"\" +",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=2rFxRpTHIeetsR%2FLOJOQp%2BOFkZ0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -437932192,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/CustomerTermsAcceptConsumerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/CustomerTermsAcceptConsumerTest.kt",
                        "sourceNode": "cd6ce515-29b4-4d1b-a415-da10d3d0bcd0",
                        "destinationNode": "cd6ce515-29b4-4d1b-a415-da10d3d0bcd0",
                        "sourceLine": 159,
                        "sourceCode": "\"  \\\"id\\\": \\\"cd6ce515-29b4-4d1b-a415-da10d3d0bcd0\\\",\" +",
                        "destinationLine": 159,
                        "destinationCode": "\"  \\\"id\\\": \\\"cd6ce515-29b4-4d1b-a415-da10d3d0bcd0\\\",\" +",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=6AcES%2FE6OYSEVZoS%2BZBSMYUNd8g%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1615769098,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/CustomerTermsAcceptConsumerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/CustomerTermsAcceptConsumerTest.kt",
                        "sourceNode": "cd6ce515-29b4-4d1b-a415-da10d3d0bcd0",
                        "destinationNode": "cd6ce515-29b4-4d1b-a415-da10d3d0bcd0",
                        "sourceLine": 116,
                        "sourceCode": "id shouldBeEqualTo \"cd6ce515-29b4-4d1b-a415-da10d3d0bcd0\"",
                        "destinationLine": 116,
                        "destinationCode": "id shouldBeEqualTo \"cd6ce515-29b4-4d1b-a415-da10d3d0bcd0\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=q4Yn90GH9JVTqHSWrD9UHun%2F1xM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -437932192,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/CustomerTermsAcceptConsumerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/kafka/listener/ecommerce/CustomerTermsAcceptConsumerTest.kt",
                        "sourceNode": "cd6ce515-29b4-4d1b-a415-da10d3d0bcd0",
                        "destinationNode": "cd6ce515-29b4-4d1b-a415-da10d3d0bcd0",
                        "sourceLine": 29,
                        "sourceCode": "\"  \\\"id\\\": \\\"cd6ce515-29b4-4d1b-a415-da10d3d0bcd0\\\",\" +",
                        "destinationLine": 29,
                        "destinationCode": "\"  \\\"id\\\": \\\"cd6ce515-29b4-4d1b-a415-da10d3d0bcd0\\\",\" +",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=bHzhOK9ZN76yub1vNK2JGbF4xm0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1276498382,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/NotifyPersonServiceTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/NotifyPersonServiceTest.kt",
                        "sourceNode": "ce79829a-6aa1-4a21-8753-f97a76b8153b",
                        "destinationNode": "ce79829a-6aa1-4a21-8753-f97a76b8153b",
                        "sourceLine": 59,
                        "sourceCode": "val customerId = \"ce79829a-6aa1-4a21-8753-f97a76b8153b\"",
                        "destinationLine": 59,
                        "destinationCode": "val customerId = \"ce79829a-6aa1-4a21-8753-f97a76b8153b\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=pCC0g4QtmZaeOErmOYZo4Cg%2B%2Fmk%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1276498382,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/NotifyPersonServiceTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/NotifyPersonServiceTest.kt",
                        "sourceNode": "ce79829a-6aa1-4a21-8753-f97a76b8153b",
                        "destinationNode": "ce79829a-6aa1-4a21-8753-f97a76b8153b",
                        "sourceLine": 42,
                        "sourceCode": "val customerId = \"ce79829a-6aa1-4a21-8753-f97a76b8153b\"",
                        "destinationLine": 42,
                        "destinationCode": "val customerId = \"ce79829a-6aa1-4a21-8753-f97a76b8153b\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=kVFdQhfKQRtzBC7%2B1Tfu%2BFpHbaY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1276498382,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/NotifyPersonServiceTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/NotifyPersonServiceTest.kt",
                        "sourceNode": "ce79829a-6aa1-4a21-8753-f97a76b8153b",
                        "destinationNode": "ce79829a-6aa1-4a21-8753-f97a76b8153b",
                        "sourceLine": 23,
                        "sourceCode": "val customerId = \"ce79829a-6aa1-4a21-8753-f97a76b8153b\"",
                        "destinationLine": 23,
                        "destinationCode": "val customerId = \"ce79829a-6aa1-4a21-8753-f97a76b8153b\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=%2BDP7T9e1aysYpAFo9ChlKIW2u2U%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -800650046,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventServiceIntegrationTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/domain/service/CustomerFromEventServiceIntegrationTest.kt",
                        "sourceNode": "1699b89c-6b60-4419-a4a0-02ea6004a06c",
                        "destinationNode": "1699b89c-6b60-4419-a4a0-02ea6004a06c",
                        "sourceLine": 45,
                        "sourceCode": "val mParticleDAS = \"1699b89c-6b60-4419-a4a0-02ea6004a06c\"",
                        "destinationLine": 45,
                        "destinationCode": "val mParticleDAS = \"1699b89c-6b60-4419-a4a0-02ea6004a06c\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=JCsJ2sy36Q2ICnD7%2FhtKEM9pOFw%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -722925024,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/infrastructure/mParticle/DataPlanVersionBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/infrastructure/mParticle/DataPlanVersionBuilder.kt",
                        "sourceNode": "RxZztwf8SoT05MGmvonOcIseIT8LA48C",
                        "destinationNode": "RxZztwf8SoT05MGmvonOcIseIT8LA48C",
                        "sourceLine": 16,
                        "sourceCode": "createdBy = \"client_id:RxZztwf8SoT05MGmvonOcIseIT8LA48C\",",
                        "destinationLine": 16,
                        "destinationCode": "createdBy = \"client_id:RxZztwf8SoT05MGmvonOcIseIT8LA48C\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=hjXPGjUR60BXLoFCeM6IUJxNOEE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1230730176,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/infrastructure/mParticle/DataPlanBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/infrastructure/mParticle/DataPlanBuilder.kt",
                        "sourceNode": "Rxbrs8SoT05MGmvonOcIs346LA48C",
                        "destinationNode": "Rxbrs8SoT05MGmvonOcIs346LA48C",
                        "sourceLine": 17,
                        "sourceCode": "createdBy = \"client_id:Rxbrs8SoT05MGmvonOcIs346LA48C\",",
                        "destinationLine": 17,
                        "destinationCode": "createdBy = \"client_id:Rxbrs8SoT05MGmvonOcIs346LA48C\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=qv2Qr904TfevDwaX0wnTMvJPBZI%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 2120657286,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "sourceNode": "a83142bd-022d-4d5b-849d-cc2dec0b9ae4",
                        "destinationNode": "a83142bd-022d-4d5b-849d-cc2dec0b9ae4",
                        "sourceLine": 30,
                        "sourceCode": "const val MPARTICLE_DAS = \"a83142bd-022d-4d5b-849d-cc2dec0b9ae4\"",
                        "destinationLine": 30,
                        "destinationCode": "const val MPARTICLE_DAS = \"a83142bd-022d-4d5b-849d-cc2dec0b9ae4\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=%2Fd1okGTQdJMUtrOjd%2BOYn5ybxmY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 2105735882,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "sourceNode": "a256f34f-71b3-42b0-9c2b-9699cb1c9a22",
                        "destinationNode": "a256f34f-71b3-42b0-9c2b-9699cb1c9a22",
                        "sourceLine": 28,
                        "sourceCode": "const val CUSTOMER_ID = \"a256f34f-71b3-42b0-9c2b-9699cb1c9a22\"",
                        "destinationLine": 28,
                        "destinationCode": "const val CUSTOMER_ID = \"a256f34f-71b3-42b0-9c2b-9699cb1c9a22\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=dliYfOKmJG8rWRB8vKjEl1%2BQs8c%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1649761718,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/DefaultValues.kt",
                        "sourceNode": "69971bc1-c624-461b-a669-7f8d407f4debR",
                        "destinationNode": "69971bc1-c624-461b-a669-7f8d407f4debR",
                        "sourceLine": 19,
                        "sourceCode": "const val AMPLITUDE_DEVICE_ID = \"69971bc1-c624-461b-a669-7f8d407f4debR\"",
                        "destinationLine": 19,
                        "destinationCode": "const val AMPLITUDE_DEVICE_ID = \"69971bc1-c624-461b-a669-7f8d407f4debR\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=voxh55OeaUAE7QwEUzHga24oNAE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 858642912,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/application/services/EventServiceTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/application/services/EventServiceTest.kt",
                        "sourceNode": "6ead3404-c36b-46b0-b042-885b9f0065c2",
                        "destinationNode": "6ead3404-c36b-46b0-b042-885b9f0065c2",
                        "sourceLine": 128,
                        "sourceCode": "val customerId = \"6ead3404-c36b-46b0-b042-885b9f0065c2\"",
                        "destinationLine": 128,
                        "destinationCode": "val customerId = \"6ead3404-c36b-46b0-b042-885b9f0065c2\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=PDa0jezCLGesOMK5zn2VENVseGU%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1091204880,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/application/services/EventServiceTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/application/services/EventServiceTest.kt",
                        "sourceNode": "d2c129a3-4e92-4268-b10a-33db5fdf99b6",
                        "destinationNode": "d2c129a3-4e92-4268-b10a-33db5fdf99b6",
                        "sourceLine": 110,
                        "sourceCode": "val customerId = \"d2c129a3-4e92-4268-b10a-33db5fdf99b6\"",
                        "destinationLine": 110,
                        "destinationCode": "val customerId = \"d2c129a3-4e92-4268-b10a-33db5fdf99b6\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=4SLZZMava4rpd5rR0N%2FXP42tNf8%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1552080448,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/application/services/EventServiceTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/application/services/EventServiceTest.kt",
                        "sourceNode": "9a8af21b-10ac-41c1-badc-eed75dc7cb34",
                        "destinationNode": "9a8af21b-10ac-41c1-badc-eed75dc7cb34",
                        "sourceLine": 87,
                        "sourceCode": "val customerId = \"9a8af21b-10ac-41c1-badc-eed75dc7cb34\"",
                        "destinationLine": 87,
                        "destinationCode": "val customerId = \"9a8af21b-10ac-41c1-badc-eed75dc7cb34\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=ogFx3gwKSEarScGYrHPAbk0A1Yg%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 807313472,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 99,
                        "sourceCode": "response.body shouldBeEqualTo \"Mó paia o customer e097e8cb-b2c8-4eb6-9b2b\"",
                        "destinationLine": 99,
                        "destinationCode": "response.body shouldBeEqualTo \"Mó paia o customer e097e8cb-b2c8-4eb6-9b2b\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=%2FxuLNPuXzWjnf%2FIV5acCOCOogwQ%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -325339936,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 96,
                        "sourceCode": "val response = customerController.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "destinationLine": 96,
                        "destinationCode": "val response = customerController.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=VnpF2w6sXi4LhzOEduXu5h0ZsMQ%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 354270058,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 94,
                        "sourceCode": "} throws Exception(\"Mó paia o customer e097e8cb-b2c8-4eb6-9b2b\")",
                        "destinationLine": 94,
                        "destinationCode": "} throws Exception(\"Mó paia o customer e097e8cb-b2c8-4eb6-9b2b\")",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=MVdBvIi1P%2FnQXmbdz3R52GesfQ0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -677940736,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 93,
                        "sourceCode": "deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "destinationLine": 93,
                        "destinationCode": "deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=MjUS6x4bsdtcxWVYx2SXY7mEpkY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -930739680,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 86,
                        "sourceCode": "verify { deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA) }",
                        "destinationLine": 86,
                        "destinationCode": "verify { deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA) }",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=4AZQoMXuMO8rJJtdSvwxN5Qv1rI%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -325339936,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 84,
                        "sourceCode": "val response = customerController.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "destinationLine": 84,
                        "destinationCode": "val response = customerController.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=d%2Fscmqd4YuD6yAHZxJVWGiE3dVo%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -677940736,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 81,
                        "sourceCode": "deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "destinationLine": 81,
                        "destinationCode": "deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=2V6J6ZgTXix8CSjYWr5LRNOGX8E%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -930739680,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 74,
                        "sourceCode": "verify { deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA) }",
                        "destinationLine": 74,
                        "destinationCode": "verify { deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA) }",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=8P2DBkqYp4tjSXi%2FporlNwjTRTI%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -325339936,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 72,
                        "sourceCode": "val response = customerController.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "destinationLine": 72,
                        "destinationCode": "val response = customerController.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=Z4uYa203KvYQafd166scZcCGoRk%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -677940736,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "destinationNode": "e097e8cb-b2c8-4eb6-9b2b",
                        "sourceLine": 69,
                        "sourceCode": "deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "destinationLine": 69,
                        "destinationCode": "deletePersonService.deletePerson(\"e097e8cb-b2c8-4eb6-9b2b\", Company.FISIA)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=31%2FU0p%2BSNFn4m6RWkdui724%2BI7g%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -533248960,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "62bda6f6-7934-4bbc-a9a5-76fd48596dd9",
                        "destinationNode": "62bda6f6-7934-4bbc-a9a5-76fd48596dd9",
                        "sourceLine": 51,
                        "sourceCode": "val customerId = \"62bda6f6-7934-4bbc-a9a5-76fd48596dd9\"",
                        "destinationLine": 51,
                        "destinationCode": "val customerId = \"62bda6f6-7934-4bbc-a9a5-76fd48596dd9\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=DEQAxnJ8DprxBP5wJA%2F%2FAO1jxFM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -533248960,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "62bda6f6-7934-4bbc-a9a5-76fd48596dd9",
                        "destinationNode": "62bda6f6-7934-4bbc-a9a5-76fd48596dd9",
                        "sourceLine": 40,
                        "sourceCode": "val customerId = \"62bda6f6-7934-4bbc-a9a5-76fd48596dd9\"",
                        "destinationLine": 40,
                        "destinationCode": "val customerId = \"62bda6f6-7934-4bbc-a9a5-76fd48596dd9\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=QGxVhyAAbN8ULtkgSp1RBVHMkhs%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -533248960,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/api/CustomerControllerTest.kt",
                        "sourceNode": "62bda6f6-7934-4bbc-a9a5-76fd48596dd9",
                        "destinationNode": "62bda6f6-7934-4bbc-a9a5-76fd48596dd9",
                        "sourceLine": 29,
                        "sourceCode": "val customerId = \"62bda6f6-7934-4bbc-a9a5-76fd48596dd9\"",
                        "destinationLine": 29,
                        "destinationCode": "val customerId = \"62bda6f6-7934-4bbc-a9a5-76fd48596dd9\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=h3JqYH0DrmkQKi1U7RBGNGo4dgc%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1776136322,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "destinationFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "sourceNode": "/9j/4AAQS",
                        "destinationNode": "/9j/4AAQS",
                        "sourceLine": 160,
                        "sourceCode": "no source available",
                        "destinationLine": 160,
                        "destinationCode": "no source available",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=kZJZf%2BMif3ZrqvaUZiW6JYfpP2I%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1672947992,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "destinationFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "sourceNode": "app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content",
                        "destinationNode": "app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content",
                        "sourceLine": 141,
                        "sourceCode": "\u003cmxCell style=\"html=1;overflow=block;blockSpacing=1;whiteSpace=wrap;shape=image;fontSize=13;spacing=3.8;strokeColor=none;strokeOpacity=100;strokeWidth=0;image=https://images.lucid.app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content;imageAspect=0;\" parent=\"1\" vertex=\"1\"\u003e",
                        "destinationLine": 141,
                        "destinationCode": "\u003cmxCell style=\"html=1;overflow=block;blockSpacing=1;whiteSpace=wrap;shape=image;fontSize=13;spacing=3.8;strokeColor=none;strokeOpacity=100;strokeWidth=0;image=https://images.lucid.app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content;imageAspect=0;\" parent=\"1\" vertex=\"1\"\u003e",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=x2cdi1xr5YKy7woEGg9mLmOT7dU%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1672947992,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "destinationFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "sourceNode": "app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content",
                        "destinationNode": "app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content",
                        "sourceLine": 133,
                        "sourceCode": "\u003cmxCell style=\"html=1;overflow=block;blockSpacing=1;whiteSpace=wrap;shape=image;fontSize=13;spacing=3.8;strokeColor=none;strokeOpacity=100;strokeWidth=0;image=https://images.lucid.app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content;imageAspect=0;\" parent=\"1\" vertex=\"1\"\u003e",
                        "destinationLine": 133,
                        "destinationCode": "\u003cmxCell style=\"html=1;overflow=block;blockSpacing=1;whiteSpace=wrap;shape=image;fontSize=13;spacing=3.8;strokeColor=none;strokeOpacity=100;strokeWidth=0;image=https://images.lucid.app/images/bf02ff9e-bfe2-4b7e-8863-b73bff19b87b/content;imageAspect=0;\" parent=\"1\" vertex=\"1\"\u003e",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=ySM7f4waLmLAp90gvACz1077Mew%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -694807218,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "destinationFileName": "/docs/architecture/architecture-cdp.drawio.xml",
                        "sourceNode": "iVBOR",
                        "destinationNode": "iVBOR",
                        "sourceLine": 33,
                        "sourceCode": "n/a",
                        "destinationLine": 33,
                        "destinationCode": "n/a",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=evZA8r4B3kmI3hP49kdPuWOnM14%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1346482252,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "-1337061051639281024",
                        "destinationNode": "-1337061051639281024",
                        "sourceLine": 227,
                        "sourceCode": "\"results_batch_id\": \"-1337061051639281024\",",
                        "destinationLine": 227,
                        "destinationCode": "\"results_batch_id\": \"-1337061051639281024\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=ZWmBAnVlNPufGeOVWQRlztCFQlU%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    },
                    {
                        "similarityId": 1434722978,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "b13df545-8fd6-462a-85bb-00a0a640013c",
                        "destinationNode": "b13df545-8fd6-462a-85bb-00a0a640013c",
                        "sourceLine": 218,
                        "sourceCode": "\"mp_deviceid\": \"b13df545-8fd6-462a-85bb-00a0a640013c\",",
                        "destinationLine": 218,
                        "destinationCode": "\"mp_deviceid\": \"b13df545-8fd6-462a-85bb-00a0a640013c\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=1D3NqHi%2FNj7%2FdoCWjHJ3eRAsvQA%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    },
                    {
                        "similarityId": 1515757216,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "983aaa66-716d-41f7-f2e1-45539420b730",
                        "destinationNode": "983aaa66-716d-41f7-f2e1-45539420b730",
                        "sourceLine": 163,
                        "sourceCode": "\"source_message_id\": \"983aaa66-716d-41f7-f2e1-45539420b730\",",
                        "destinationLine": 163,
                        "destinationCode": "\"source_message_id\": \"983aaa66-716d-41f7-f2e1-45539420b730\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=V6b1GEv3aVwLhZSr4U5al9doOsY%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    },
                    {
                        "similarityId": 1627688480,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "71AC6982-629F-4A6B-9568-37D3A56E37E3",
                        "destinationNode": "71AC6982-629F-4A6B-9568-37D3A56E37E3",
                        "sourceLine": 165,
                        "sourceCode": "\"session_uuid\": \"71AC6982-629F-4A6B-9568-37D3A56E37E3\",",
                        "destinationLine": 165,
                        "destinationCode": "\"session_uuid\": \"71AC6982-629F-4A6B-9568-37D3A56E37E3\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=6FfywHoYStqJjNAJ3h2F0WxsYno%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    },
                    {
                        "similarityId": 1193212346,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "-8245949395527182239",
                        "destinationNode": "-8245949395527182239",
                        "sourceLine": 189,
                        "sourceCode": "\"batch_id\": \"-8245949395527182239\",",
                        "destinationLine": 189,
                        "destinationCode": "\"batch_id\": \"-8245949395527182239\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=BNCm0w9jELq6L47ZrkxjYZ0qD%2Fg%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    },
                    {
                        "similarityId": -1712539798,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "a286dd30-319b-49a8-95ca-933ce6b85b6c",
                        "destinationNode": "a286dd30-319b-49a8-95ca-933ce6b85b6c",
                        "sourceLine": 190,
                        "sourceCode": "\"message_id\": \"a286dd30-319b-49a8-95ca-933ce6b85b6c\",",
                        "destinationLine": 190,
                        "destinationCode": "\"message_id\": \"a286dd30-319b-49a8-95ca-933ce6b85b6c\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=MHzt%2Bn0qVYSBeVaBhP%2FYN1glOJE%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    },
                    {
                        "similarityId": 1665652064,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/mParticle/BeginCheckoutCommandBuilder.kt",
                        "sourceNode": "339fe3e3-bb75-4c0d-2af4-685117e55999",
                        "destinationNode": "339fe3e3-bb75-4c0d-2af4-685117e55999",
                        "sourceLine": 191,
                        "sourceCode": "\"source_request_id\": \"339fe3e3-bb75-4c0d-2af4-685117e55999\",",
                        "destinationLine": 191,
                        "destinationCode": "\"source_request_id\": \"339fe3e3-bb75-4c0d-2af4-685117e55999\",",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=HYYl5pIzrao3bMT9RypYWCTPsxQ%3D",
                        "firstScanID": "147ab44a-cd9d-455f-a23f-ba74f51365d5",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Use_of_Non_Cryptographic_Random",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/330/6951891211749769081",
                "queryId": 6951891211749769081,
                "description": "Method @SourceMethod at line @SourceLine of @SourceFile uses a weak method @SourceElement to produce random values. These values might be used as personal identifiers, session tokens or cryptographic input; however, due to their insufficient randomness, an attacker may be able to derive their value.\n\n",
                "vulnerabilitiesTotal": 23,
                "queryPath": "Kotlin/Kotlin_Low_Visibility/Use_of_Non_Cryptographic_Random",
                "cweId": 330,
                "categories": [
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Security Functions"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V02 Authentication"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A2-Cryptographic Failures"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 516481930,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-26T17:55:36Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/DataRenotifyJobTest.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/infrastructure/jobs/DataRenotifyJobTest.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "`always returns false`",
                        "destinationMethod": "`always returns false`",
                        "sourceLine": 66,
                        "sourceCode": "val timeLimitMinutes = ThreadLocalRandom.current().nextLong(Long.MAX_VALUE)",
                        "destinationLine": 66,
                        "destinationCode": "val timeLimitMinutes = ThreadLocalRandom.current().nextLong(Long.MAX_VALUE)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=mVhNoC50rp9E9poSpsuzQ6ogY%2Bc%3D",
                        "firstScanID": "29a41414-4452-4a67-9f08-ac7d6556e427",
                        "notes": []
                    },
                    {
                        "similarityId": -1716307846,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/RandomUtils.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/RandomUtils.kt",
                        "sourceNode": "nextBoolean",
                        "destinationNode": "nextBoolean",
                        "sourceMethod": "boolean",
                        "destinationMethod": "boolean",
                        "sourceLine": 13,
                        "sourceCode": "fun boolean() = ThreadLocalRandom.current().nextBoolean()",
                        "destinationLine": 13,
                        "destinationCode": "fun boolean() = ThreadLocalRandom.current().nextBoolean()",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=c1FH%2F4N7nAqJ9yJrJiWo07%2B5T7c%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 309425226,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/RandomUtils.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/RandomUtils.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "int",
                        "destinationMethod": "int",
                        "sourceLine": 9,
                        "sourceCode": "fun int(min: Int = 0, bound: Int = Int.MAX_VALUE) = ThreadLocalRandom.current().nextInt(min, bound)",
                        "destinationLine": 9,
                        "destinationCode": "fun int(min: Int = 0, bound: Int = Int.MAX_VALUE) = ThreadLocalRandom.current().nextInt(min, bound)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=eIiBjlkpFeEnPooRjmyetS1%2F7cs%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -716467614,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/RandomUtils.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/RandomUtils.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "long",
                        "destinationMethod": "long",
                        "sourceLine": 7,
                        "sourceCode": "fun long(min: Long = 0, bound: Long = Long.MAX_VALUE) = ThreadLocalRandom.current().nextLong(min, bound)",
                        "destinationLine": 7,
                        "destinationCode": "fun long(min: Long = 0, bound: Long = Long.MAX_VALUE) = ThreadLocalRandom.current().nextLong(min, bound)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=mjnOele2Pk7LJLHFfnkZDmIe9A8%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 651102282,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "sourceNode": "nextDouble",
                        "destinationNode": "nextDouble",
                        "sourceMethod": "moneyValue",
                        "destinationMethod": "moneyValue",
                        "sourceLine": 43,
                        "sourceCode": "BigDecimal(ThreadLocalRandom.current().nextDouble(0.01, maxValue))",
                        "destinationLine": 43,
                        "destinationCode": "BigDecimal(ThreadLocalRandom.current().nextDouble(0.01, maxValue))",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=P%2BHK8yhO6QSkRGoZKq8QTgA6KHE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -576370902,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "Lambda",
                        "destinationMethod": "Lambda",
                        "sourceLine": 34,
                        "sourceCode": "id = ThreadLocalRandom.current().nextInt(),",
                        "destinationLine": 34,
                        "destinationCode": "id = ThreadLocalRandom.current().nextInt(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=88kKofdYjzWDPPfUtiBvu2pwiUA%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -532904118,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 29,
                        "sourceCode": "id = ThreadLocalRandom.current().nextInt(),",
                        "destinationLine": 29,
                        "destinationCode": "id = ThreadLocalRandom.current().nextInt(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=3BbVbnAb4Eu42ZTYcJ%2FWY0gVO%2F0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1405866082,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 19,
                        "sourceCode": "statusId = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 19,
                        "destinationCode": "statusId = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=bOk0Mah9iB6bUyWZEJGC18Sk%2BPE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1341375190,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 14,
                        "sourceCode": "customerId: Long = ThreadLocalRandom.current().nextLong(1, Long.MAX_VALUE),",
                        "destinationLine": 14,
                        "destinationCode": "customerId: Long = ThreadLocalRandom.current().nextLong(1, Long.MAX_VALUE),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=rXkgdtC3paV1jVJQZjd2yCxPH%2Bo%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 181695044,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/OrderBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 10,
                        "sourceCode": "id: Long = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 10,
                        "destinationCode": "id: Long = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=fSUw4dmnDN0x0Rn1hnzgRdm26U8%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 455442882,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/ItemBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/ItemBuilder.kt",
                        "sourceNode": "nextDouble",
                        "destinationNode": "nextDouble",
                        "sourceMethod": "moneyValue",
                        "destinationMethod": "moneyValue",
                        "sourceLine": 20,
                        "sourceCode": "BigDecimal(ThreadLocalRandom.current().nextDouble(0.01, maxValue))",
                        "destinationLine": 20,
                        "destinationCode": "BigDecimal(ThreadLocalRandom.current().nextDouble(0.01, maxValue))",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=RC73iDeh59PUDm%2FYX2AmWXLOpBk%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1712631370,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/ItemBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/ItemBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 11,
                        "sourceCode": "quantity = ThreadLocalRandom.current().nextInt(1, Int.MAX_VALUE),",
                        "destinationLine": 11,
                        "destinationCode": "quantity = ThreadLocalRandom.current().nextInt(1, Int.MAX_VALUE),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=fXsYQWm%2BQyH8yclh9EpILxPOeTQ%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1346155068,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 21,
                        "sourceCode": "id = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 21,
                        "destinationCode": "id = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=YivjCXC7JkglixKl0KmOqsj9CK0%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1864063286,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 19,
                        "sourceCode": "statusId = ThreadLocalRandom.current().nextInt(),",
                        "destinationLine": 19,
                        "destinationCode": "statusId = ThreadLocalRandom.current().nextInt(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=eODXBYatmua%2Bdvdp8xf95dST750%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 1346155068,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 13,
                        "sourceCode": "id = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 13,
                        "destinationCode": "id = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=vDruUtf7XcDH%2B7w9Puq9l7f7W7U%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1864063286,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/domain/canonicalorder/DeliveryBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 11,
                        "sourceCode": "statusId = ThreadLocalRandom.current().nextInt(),",
                        "destinationLine": 11,
                        "destinationCode": "statusId = ThreadLocalRandom.current().nextInt(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=ZPHyCvrkFKKf7Tc3fxs%2FXbI%2BY4M%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 86747414,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 37,
                        "sourceCode": "id = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 37,
                        "destinationCode": "id = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=zMPSctoPEZuHO8mwStL6OJdR%2FZY%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 301992676,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 34,
                        "sourceCode": "cancellationId = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 34,
                        "destinationCode": "cancellationId = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=UN7123YjZmkP%2F5CAIkw2e5194TE%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -584626590,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 31,
                        "sourceCode": "quantity = ThreadLocalRandom.current().nextInt(1, Int.MAX_VALUE)",
                        "destinationLine": 31,
                        "destinationCode": "quantity = ThreadLocalRandom.current().nextInt(1, Int.MAX_VALUE)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=vRByia%2Fpy5aOBu6gqvxMRJpozaM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -584626590,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextInt",
                        "destinationNode": "nextInt",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 26,
                        "sourceCode": "quantity = ThreadLocalRandom.current().nextInt(1, Int.MAX_VALUE)",
                        "destinationLine": 26,
                        "destinationCode": "quantity = ThreadLocalRandom.current().nextInt(1, Int.MAX_VALUE)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=ytwabDjrAAnouWK4k8YiPSKyNPc%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1042315702,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 20,
                        "sourceCode": "storeId = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 20,
                        "destinationCode": "storeId = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=4eZkDJOS05v4su1Z2aqCgcyuf1g%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -1927886198,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 17,
                        "sourceCode": "deliveryGroupId = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 17,
                        "destinationCode": "deliveryGroupId = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=gKFMZ6ERY%2BpBuJNABJcVID%2FEypU%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": -2015071542,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "destinationFileName": "/src/test/kotlin/br/com/123/loiskjdye/builder/application/ecommerce/OrderStatusDeliveryGroupCommandBuilder.kt",
                        "sourceNode": "nextLong",
                        "destinationNode": "nextLong",
                        "sourceMethod": "build",
                        "destinationMethod": "build",
                        "sourceLine": 10,
                        "sourceCode": "originOrderId: Long = ThreadLocalRandom.current().nextLong(),",
                        "destinationLine": 10,
                        "destinationCode": "originOrderId: Long = ThreadLocalRandom.current().nextLong(),",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=2pl1cS%2FhollDiD09oVRgu5eEvmo%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "TruffleHog_Regex_Matches",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/798/17363913395740017241",
                "queryId": 17363913395740017241,
                "description": "The application uses the hard-coded password @SourceElement for authentication purposes, either using it to verify users' identities, or to access another remote system. This password at line @SourceLine of @SourceFile appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding the application.",
                "vulnerabilitiesTotal": 1,
                "queryPath": "Java/Java_Low_Visibility/TruffleHog_Regex_Matches",
                "cweId": 798,
                "categories": [
                    {
                        "name": "CWE top 25",
                        "subCategories": [
                            "CWE top 25"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Security Functions"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V06 Stored Cryptography"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A7-Identification and Authentication Failures"
                        ]
                    },
                    {
                        "name": "SANS top 25",
                        "subCategories": [
                            "SANS top 25"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -1425229424,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/main/resources/application.yaml",
                        "destinationFileName": "/src/main/resources/application.yaml",
                        "sourceNode": "redis://${REDIS_AUTH:SUPER_SECRET_PASSWORD}@${REDIS_HOST",
                        "destinationNode": "redis://${REDIS_AUTH:SUPER_SECRET_PASSWORD}@${REDIS_HOST",
                        "sourceLine": 19,
                        "sourceCode": "url: redis://${REDIS_AUTH:SUPER_SECRET_PASSWORD}@${REDIS_HOST:localhost}:6379/0",
                        "destinationLine": 19,
                        "destinationCode": "url: redis://${REDIS_AUTH:SUPER_SECRET_PASSWORD}@${REDIS_HOST:localhost}:6379/0",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=7nrl5xTLhV8dMsl5lRJtL84TPTM%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Missing_Rooted_Device_Check",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/693/5904646516379822605",
                "queryId": 5904646516379822605,
                "description": "No checks to identify whether the device has been rooted were found.\n\n",
                "vulnerabilitiesTotal": 1,
                "queryPath": "Kotlin/Kotlin_Android/Missing_Rooted_Device_Check",
                "cweId": 693,
                "categories": [],
                "vulnerabilities": [
                    {
                        "similarityId": -330126304,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/src/main/kotlin/br/com/123/loiskjdye/LoiskjdyeApplication.kt",
                        "destinationFileName": "/src/main/kotlin/br/com/123/loiskjdye/LoiskjdyeApplication.kt",
                        "sourceNode": "main",
                        "destinationNode": "main",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 36,
                        "sourceCode": "fun main() {",
                        "destinationLine": 36,
                        "destinationCode": "fun main() {",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=%2BLfKM9Vre35vP%2BBPA7cJtIVdF2Q%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Improper_Error_Handling",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/248/11966797339944458227",
                "queryId": 11966797339944458227,
                "description": "An error generated by @SourceElement at @SourceFile in line @SourceLine is not properly handled by subsequent application code.\n\n",
                "vulnerabilitiesTotal": 2,
                "queryPath": "Go/Go_Low_Visibility/Improper_Error_Handling",
                "cweId": 248,
                "categories": [
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Error processing"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V14 Configuration"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A4-Insecure Design"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": 1767608375,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "destinationFileName": "/scripts/export-csv-full-base/extract_orders.go",
                        "sourceNode": "_",
                        "destinationNode": "_",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 136,
                        "sourceCode": "concurrency, _ := strconv.Atoi(os.Args[2])",
                        "destinationLine": 136,
                        "destinationCode": "concurrency, _ := strconv.Atoi(os.Args[2])",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=07cLMZjOUZzKjS5CD77oKmqGqH8%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    },
                    {
                        "similarityId": 923287423,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "_",
                        "destinationNode": "_",
                        "sourceMethod": "main",
                        "destinationMethod": "main",
                        "sourceLine": 169,
                        "sourceCode": "concurrency, _ := strconv.Atoi(os.Args[2])",
                        "destinationLine": 169,
                        "destinationCode": "concurrency, _ := strconv.Atoi(os.Args[2])",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=7pXYFlqxb265uzmYRG3TA427xjk%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Deprecated_API",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/477/6232347621420708893",
                "queryId": 6232347621420708893,
                "description": "Method @DestinationMethod in @DestinationFile, at line @DestinationLine, calls an obsolete API, @DestinationElement. This has been deprecated, and should not be used in a modern codebase.\n\n",
                "vulnerabilitiesTotal": 1,
                "queryPath": "Go/Go_Low_Visibility/Deprecated_API",
                "cweId": 477,
                "categories": [
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V01 Architecture, Design and Threat Modeling"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A6-Vulnerable and Outdated Components"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -904203947,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Low",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-01T15:19:17Z",
                        "sourceFileName": "/scripts/export-csv-full-base/e.go",
                        "destinationFileName": "/scripts/export-csv-full-base/e.go",
                        "sourceNode": "\"io/ioutil\"",
                        "destinationNode": "\"io/ioutil\"",
                        "sourceLine": 9,
                        "sourceCode": "\"io/ioutil\"",
                        "destinationLine": 9,
                        "destinationCode": "\"io/ioutil\"",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=DgyPxJl8MV6PUXK0loybcOIXHaQ%3D",
                        "firstScanID": "4438e7f8-9b94-4211-9314-ca7986448c3d",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Incorrect_Conversion_between_Numeric_Types",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/681/7919413771692923175",
                "queryId": 7919413771692923175,
                "description": "No query description available",
                "vulnerabilitiesTotal": 2,
                "queryPath": "Java/Java_Best_Coding_Practice/Incorrect_Conversion_between_Numeric_Types",
                "cweId": 681,
                "categories": [],
                "vulnerabilities": [
                    {
                        "similarityId": -592931585,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-24T14:21:13Z",
                        "sourceFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "destinationFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "sourceNode": "size0",
                        "destinationNode": "size0",
                        "sourceMethod": "customDecode",
                        "destinationMethod": "customDecode",
                        "sourceLine": 509,
                        "sourceCode": "a0 = new SpecificData.Array\u003cjava.lang.CharSequence\u003e((int)size0, SCHEMA$.getField(\"items\").schema());",
                        "destinationLine": 509,
                        "destinationCode": "a0 = new SpecificData.Array\u003cjava.lang.CharSequence\u003e((int)size0, SCHEMA$.getField(\"items\").schema());",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=wxekq3kf5x4oVy49lzjckgPYXkE%3D",
                        "firstScanID": "b005d91e-45f0-4c1b-a4b7-45efe8aa08b4",
                        "notes": []
                    },
                    {
                        "similarityId": -1084469121,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-24T14:21:13Z",
                        "sourceFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "destinationFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "sourceNode": "size0",
                        "destinationNode": "size0",
                        "sourceMethod": "customDecode",
                        "destinationMethod": "customDecode",
                        "sourceLine": 482,
                        "sourceCode": "a0 = new SpecificData.Array\u003cjava.lang.CharSequence\u003e((int)size0, SCHEMA$.getField(\"items\").schema());",
                        "destinationLine": 482,
                        "destinationCode": "a0 = new SpecificData.Array\u003cjava.lang.CharSequence\u003e((int)size0, SCHEMA$.getField(\"items\").schema());",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=zPyWjFi2GesVk40ANwqvNL8fcSQ%3D",
                        "firstScanID": "b005d91e-45f0-4c1b-a4b7-45efe8aa08b4",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Incorrect_Block_Delimitation",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/483/12135915305422528707",
                "queryId": 12135915305422528707,
                "description": "The application's @SourceMethod method (line @SourceLine) does not delimit a block using braces. This can create a logical error, and therefore, security implications that can be exploited by an attacker. ",
                "vulnerabilitiesTotal": 3,
                "queryPath": "Java/Java_Best_Coding_Practice/Incorrect_Block_Delimitation",
                "cweId": 483,
                "categories": [],
                "vulnerabilities": [
                    {
                        "similarityId": -801798977,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-24T14:21:13Z",
                        "sourceFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "destinationFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "sourceNode": "a0",
                        "destinationNode": "a0",
                        "sourceMethod": "customDecode",
                        "destinationMethod": "customDecode",
                        "sourceLine": 511,
                        "sourceCode": "} else a0.clear();",
                        "destinationLine": 511,
                        "destinationCode": "} else a0.clear();",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=DPhu8UYnCVextysP%2FsHH%2BtwlQ5I%3D",
                        "firstScanID": "b005d91e-45f0-4c1b-a4b7-45efe8aa08b4",
                        "notes": []
                    },
                    {
                        "similarityId": -81680995,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-24T14:21:13Z",
                        "sourceFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "destinationFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "sourceNode": "a0",
                        "destinationNode": "a0",
                        "sourceMethod": "customDecode",
                        "destinationMethod": "customDecode",
                        "sourceLine": 484,
                        "sourceCode": "} else a0.clear();",
                        "destinationLine": 484,
                        "destinationCode": "} else a0.clear();",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=Y3aceZH6jddhcx95OEt%2F2LLGvB0%3D",
                        "firstScanID": "b005d91e-45f0-4c1b-a4b7-45efe8aa08b4",
                        "notes": []
                    },
                    {
                        "similarityId": 1851967519,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-24T14:21:13Z",
                        "sourceFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "destinationFileName": "/src/main/java/example123/single_customer_view/EventWithItemsKeyV1.java",
                        "sourceNode": "if",
                        "destinationNode": "if",
                        "sourceMethod": "customEncode",
                        "destinationMethod": "customEncode",
                        "sourceLine": 465,
                        "sourceCode": "if (actualSize0 != size0)",
                        "destinationLine": 465,
                        "destinationCode": "if (actualSize0 != size0)",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=iwByIMOY5Ox2uap099wuoEsXVzI%3D",
                        "firstScanID": "b005d91e-45f0-4c1b-a4b7-45efe8aa08b4",
                        "notes": []
                    }
                ]
            },
            {
                "queryName": "Potentially_Serializable_Class_With_Sensitive_Data",
                "queryDescriptionLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast/description/499/2168313460723921343",
                "queryId": 2168313460723921343,
                "description": "No query description available",
                "vulnerabilitiesTotal": 6,
                "queryPath": "Java/Java_Best_Coding_Practice/Potentially_Serializable_Class_With_Sensitive_Data",
                "cweId": 499,
                "categories": [
                    {
                        "name": "OWASP Top 10 2013",
                        "subCategories": [
                            "A6-Sensitive Data Exposure"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2017",
                        "subCategories": [
                            "A3-Sensitive Data Exposure"
                        ]
                    },
                    {
                        "name": "OWASP Top 10 2021",
                        "subCategories": [
                            "A4-Insecure Design"
                        ]
                    },
                    {
                        "name": "PCI DSS v3.2.1",
                        "subCategories": [
                            "PCI DSS (3.2.1) - 6.5.3 - Insecure cryptographic storage"
                        ]
                    },
                    {
                        "name": "MOIS(KISA) Secure Coding 2021",
                        "subCategories": [
                            "MOIS(KISA) Security Functions"
                        ]
                    },
                    {
                        "name": "OWASP ASVS",
                        "subCategories": [
                            "V09 Communication"
                        ]
                    }
                ],
                "vulnerabilities": [
                    {
                        "similarityId": -765276279,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-05T17:38:27Z",
                        "sourceFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "destinationFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "sourceNode": "additionalPhone",
                        "destinationNode": "Builder",
                        "sourceLine": 967,
                        "sourceCode": "private java.lang.CharSequence additionalPhone;",
                        "destinationLine": 946,
                        "destinationCode": "public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase\u003cPayloadPersonV4\u003e",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=2brkl6eQixybw1ZvP%2FaD9KLimUA%3D",
                        "firstScanID": "1db8368e-1b90-4367-a1ab-dd5fea1084c3",
                        "notes": []
                    },
                    {
                        "similarityId": 1272328932,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-05T17:38:27Z",
                        "sourceFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "destinationFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "sourceNode": "additionalPhone",
                        "destinationNode": "PayloadPersonV4",
                        "sourceLine": 967,
                        "sourceCode": "private java.lang.CharSequence additionalPhone;",
                        "destinationLine": 15,
                        "destinationCode": "@org.apache.avro.specific.AvroGenerated",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=NP94lAYMgemapke4wSG78Vm99Ho%3D",
                        "firstScanID": "1db8368e-1b90-4367-a1ab-dd5fea1084c3",
                        "notes": []
                    },
                    {
                        "similarityId": 1517996265,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-05T17:38:27Z",
                        "sourceFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "destinationFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "sourceNode": "phone",
                        "destinationNode": "Builder",
                        "sourceLine": 966,
                        "sourceCode": "private java.lang.CharSequence phone;",
                        "destinationLine": 946,
                        "destinationCode": "public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase\u003cPayloadPersonV4\u003e",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=pPOTwxE6LwYQHAsLjVjsiFv43OY%3D",
                        "firstScanID": "1db8368e-1b90-4367-a1ab-dd5fea1084c3",
                        "notes": []
                    },
                    {
                        "similarityId": -791477180,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-05T17:38:27Z",
                        "sourceFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "destinationFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "sourceNode": "phone",
                        "destinationNode": "PayloadPersonV4",
                        "sourceLine": 966,
                        "sourceCode": "private java.lang.CharSequence phone;",
                        "destinationLine": 15,
                        "destinationCode": "@org.apache.avro.specific.AvroGenerated",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=AZvw6VtHA0L94%2FQdtzH9wX7QYKs%3D",
                        "firstScanID": "1db8368e-1b90-4367-a1ab-dd5fea1084c3",
                        "notes": []
                    },
                    {
                        "similarityId": -1555372122,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-05T17:38:27Z",
                        "sourceFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "destinationFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "sourceNode": "additionalPhone",
                        "destinationNode": "PayloadPersonV4",
                        "sourceLine": 97,
                        "sourceCode": "private java.lang.CharSequence additionalPhone;",
                        "destinationLine": 15,
                        "destinationCode": "@org.apache.avro.specific.AvroGenerated",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=j%2FaQQ3pN5bqnNbqXlh3omGE5w7I%3D",
                        "firstScanID": "1db8368e-1b90-4367-a1ab-dd5fea1084c3",
                        "notes": []
                    },
                    {
                        "similarityId": 403993414,
                        "status": "Recurrent",
                        "state": "To Verify",
                        "severity": "Information",
                        "foundDate": "2024-04-16T14:39:59Z",
                        "firstFoundDate": "2024-03-05T17:38:27Z",
                        "sourceFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "destinationFileName": "/src/main/java/example123/customer/single_view/PayloadPersonV4.java",
                        "sourceNode": "phone",
                        "destinationNode": "PayloadPersonV4",
                        "sourceLine": 96,
                        "sourceCode": "private java.lang.CharSequence phone;",
                        "destinationLine": 15,
                        "destinationCode": "@org.apache.avro.specific.AvroGenerated",
                        "nodes": [],
                        "resultViewerLink": "https://ast.checkmarx.net/juke/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/20c7d605-51d2-4471-afd7-514774dfb9bd/sast?result-id=iQjDiFc2FTPUbn7hSXRyzb1Wfgc%3D",
                        "firstScanID": "1db8368e-1b90-4367-a1ab-dd5fea1084c3",
                        "notes": []
                    }
                ]
            }
        ]
    },
    "iacScanResults": {
        "totalResults": 10,
        "severitiesBreakdown": [
            {
                "level": "High",
                "value": 0
            },
            {
                "level": "Medium",
                "value": 9
            },
            {
                "level": "Low",
                "value": 1
            },
            {
                "level": "Information",
                "value": 0
            }
        ],
        "technology": [
            {
                "name": "Kubernetes",
                "totalResults": 4,
                "queries": [
                    {
                        "queryName": "Using Unrecommended Namespace",
                        "totalResults": 4,
                        "description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
                        "category": "Insecure Configurations",
                        "resultsList": [
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=lhh6XPbJLc58Mvv859bsOnM3N6Q=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "770fb4c5-e018-4218-b2b4-dab4994309eb",
                                "firstDetectionDate": "2023-07-17T18:40:20Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.aioros/development/03-serviceusage-networking.yaml",
                                "issueType": "MissingAttribute",
                                "actualValue": "metadata.namespace is undefined or null",
                                "expectedValue": "metadata.namespace should be defined and not null"
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=AorFkMT5KKT6DfXK+YfN7Ybl9Fw=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "770fb4c5-e018-4218-b2b4-dab4994309eb",
                                "firstDetectionDate": "2023-07-17T18:40:20Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.aioros/production/05-serviceusage-redis.yaml",
                                "issueType": "MissingAttribute",
                                "actualValue": "metadata.namespace is undefined or null",
                                "expectedValue": "metadata.namespace should be defined and not null"
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=Zg5+/a5aE5Pg3GTl4pLEqLBVtDo=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "770fb4c5-e018-4218-b2b4-dab4994309eb",
                                "firstDetectionDate": "2023-07-17T18:40:20Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.aioros/development/05-serviceusage-redis.yaml",
                                "issueType": "MissingAttribute",
                                "actualValue": "metadata.namespace is undefined or null",
                                "expectedValue": "metadata.namespace should be defined and not null"
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=EcHRtIbhJoeGq3IVAsCW+cLR4Rw=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "770fb4c5-e018-4218-b2b4-dab4994309eb",
                                "firstDetectionDate": "2023-07-17T18:40:20Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.aioros/production/03-serviceusage-networking.yaml",
                                "issueType": "MissingAttribute",
                                "actualValue": "metadata.namespace is undefined or null",
                                "expectedValue": "metadata.namespace should be defined and not null"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "CICD",
                "totalResults": 5,
                "queries": [
                    {
                        "queryName": "Unpinned Actions Full Length Commit SHA",
                        "totalResults": 5,
                        "description": "Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload. When selecting a SHA, you should verify it is from the action's repository and not a repository fork.",
                        "category": "Supply-Chain",
                        "resultsList": [
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=Mbn8Q9W7P8ySlvbKhIstFHZTT7o=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "8e909aa4-ffe5-4fa6-aeda-3ff2857e6efc",
                                "firstDetectionDate": "2024-02-26T17:27:23Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.github/workflows/ci.yml",
                                "issueType": "IncorrectValue",
                                "actualValue": "Action is not pinned to a full length commit SHA.",
                                "expectedValue": "Action pinned to a full length commit SHA."
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=EiZqOwVB2pAfwNX1lkqr+1EykZc=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "3d859bfc-e7c7-435d-862e-e50c0c257c23",
                                "firstDetectionDate": "2024-04-01T23:50:39Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.github/workflows/checkmarx.yaml",
                                "issueType": "IncorrectValue",
                                "actualValue": "Action is not pinned to a full length commit SHA.",
                                "expectedValue": "Action pinned to a full length commit SHA."
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=ajmu7/mNIMc+JLCZVBDM0yRwtH4=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "3d859bfc-e7c7-435d-862e-e50c0c257c23",
                                "firstDetectionDate": "2024-04-01T23:50:39Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.github/workflows/checkmarx.yaml",
                                "issueType": "IncorrectValue",
                                "actualValue": "Action is not pinned to a full length commit SHA.",
                                "expectedValue": "Action pinned to a full length commit SHA."
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=gKo2jaF6n9mSWAogyDnoSsHV45c=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "845c809d-6f15-4802-a8fc-7cfa84a9ca88",
                                "firstDetectionDate": "2024-02-14T22:47:51Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.github/workflows/ci.yml",
                                "issueType": "IncorrectValue",
                                "actualValue": "Action is not pinned to a full length commit SHA.",
                                "expectedValue": "Action pinned to a full length commit SHA."
                            },
                            {
                                "severity": "Medium",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=xXj2JMgbqjRRB5irfTk0Zn/QXMQ=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "50593b29-6d4f-4d62-a6df-95831d5e139f",
                                "firstDetectionDate": "2023-12-11T16:46:37Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/.github/workflows/deploy_development.yml",
                                "issueType": "IncorrectValue",
                                "actualValue": "Action is not pinned to a full length commit SHA.",
                                "expectedValue": "Action pinned to a full length commit SHA."
                            }
                        ]
                    }
                ]
            },
            {
                "name": "Dockerfile",
                "totalResults": 1,
                "queries": [
                    {
                        "queryName": "Healthcheck Instruction Missing",
                        "totalResults": 1,
                        "description": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working",
                        "category": "Insecure Configurations",
                        "resultsList": [
                            {
                                "severity": "Low",
                                "resultViewerLink": "https://ast.checkmarx.net/juke/20c7d605-51d2-4471-afd7-514774dfb9bd/7c9b4b8e-6986-4e5f-a787-f7d2c93e622a/kics?result-id=vipqB4mUTCHtk9A/I4lw/ewPubQ=",
                                "status": "Recurrent",
                                "state": "To Verify",
                                "firstScanID": "a81fcfd6-3009-4e4c-9fab-3522577cd5b2",
                                "firstDetectionDate": "2024-04-10T12:21:12Z",
                                "lastDetectionDate": "2024-04-16T14:36:23Z",
                                "fileName": "/Dockerfile",
                                "issueType": "MissingAttribute",
                                "actualValue": "Dockerfile doesn't contain instruction 'HEALTHCHECK'",
                                "expectedValue": "Dockerfile should contain instruction 'HEALTHCHECK'"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "scaScanResults": {
        "totalResults": 0,
        "severitiesBreakdown": [],
        "packages": []
    },
    "categories": [
        {
            "name": "CWE top 25",
            "subCategories": [
                {
                    "name": "CWE_top_25_380",
                    "vulnerabilitiesBox": {
                        "name": "CWE top 25",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 3
                            },
                            {
                                "level": "Medium",
                                "value": 24
                            },
                            {
                                "level": "Low",
                                "value": 57
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "FISMA 2014",
            "subCategories": [
                {
                    "name": "System_And_Information_Integrity_26",
                    "vulnerabilitiesBox": {
                        "name": "System And Information Integrity",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 4
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "MOIS(KISA) Secure Coding 2021",
            "subCategories": [
                {
                    "name": "MOIS_KISA__Error_processing_384",
                    "vulnerabilitiesBox": {
                        "name": "MOIS(KISA) Error processing",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 2
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "MOIS_KISA__Security_Functions_385",
                    "vulnerabilitiesBox": {
                        "name": "MOIS(KISA) Security Functions",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 1
                            },
                            {
                                "level": "Low",
                                "value": 80
                            },
                            {
                                "level": "Information",
                                "value": 6
                            }
                        ]
                    }
                },
                {
                    "name": "MOIS_KISA__Verification_and_representation_of_input_data_387",
                    "vulnerabilitiesBox": {
                        "name": "MOIS(KISA) Verification and representation of input data",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 3
                            },
                            {
                                "level": "Medium",
                                "value": 24
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "NIST SP 800-53",
            "subCategories": [
                {
                    "name": "SI_10_Information_Input_Validation__P1__45",
                    "vulnerabilitiesBox": {
                        "name": "SI-10 Information Input Validation (P1)",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 4
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "OWASP ASVS",
            "subCategories": [
                {
                    "name": "V01_Architecture__Design_and_Threat_Modeling_388",
                    "vulnerabilitiesBox": {
                        "name": "V01 Architecture, Design and Threat Modeling",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 1
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "V02_Authentication_389",
                    "vulnerabilitiesBox": {
                        "name": "V02 Authentication",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 23
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "V06_Stored_Cryptography_393",
                    "vulnerabilitiesBox": {
                        "name": "V06 Stored Cryptography",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 57
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "V09_Communication_396",
                    "vulnerabilitiesBox": {
                        "name": "V09 Communication",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 1
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 6
                            }
                        ]
                    }
                },
                {
                    "name": "V05_Validation__Sanitization_and_Encoding_392",
                    "vulnerabilitiesBox": {
                        "name": "V05 Validation, Sanitization and Encoding",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 3
                            },
                            {
                                "level": "Medium",
                                "value": 4
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "V12_Files_and_Resources_399",
                    "vulnerabilitiesBox": {
                        "name": "V12 Files and Resources",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 20
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "V14_Configuration_401",
                    "vulnerabilitiesBox": {
                        "name": "V14 Configuration",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 2
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "OWASP Top 10 2013",
            "subCategories": [
                {
                    "name": "A6_Sensitive_Data_Exposure_15",
                    "vulnerabilitiesBox": {
                        "name": "A6-Sensitive Data Exposure",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 6
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "OWASP Top 10 2017",
            "subCategories": [
                {
                    "name": "A3_Sensitive_Data_Exposure_51",
                    "vulnerabilitiesBox": {
                        "name": "A3-Sensitive Data Exposure",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 6
                            }
                        ]
                    }
                },
                {
                    "name": "A5_Broken_Access_Control_53",
                    "vulnerabilitiesBox": {
                        "name": "A5-Broken Access Control",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 4
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "OWASP Top 10 2021",
            "subCategories": [
                {
                    "name": "A2_Cryptographic_Failures_403",
                    "vulnerabilitiesBox": {
                        "name": "A2-Cryptographic Failures",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 1
                            },
                            {
                                "level": "Low",
                                "value": 23
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "A1_Broken_Access_Control_402",
                    "vulnerabilitiesBox": {
                        "name": "A1-Broken Access Control",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 8
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "A6_Vulnerable_and_Outdated_Components_407",
                    "vulnerabilitiesBox": {
                        "name": "A6-Vulnerable and Outdated Components",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 1
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "A3_Injection_404",
                    "vulnerabilitiesBox": {
                        "name": "A3-Injection",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 3
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "A7_Identification_and_Authentication_Failures_408",
                    "vulnerabilitiesBox": {
                        "name": "A7-Identification and Authentication Failures",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 57
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                },
                {
                    "name": "A4_Insecure_Design_405",
                    "vulnerabilitiesBox": {
                        "name": "A4-Insecure Design",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 15
                            },
                            {
                                "level": "Low",
                                "value": 2
                            },
                            {
                                "level": "Information",
                                "value": 6
                            }
                        ]
                    }
                },
                {
                    "name": "A10_Server_Side_Request_Forgery_411",
                    "vulnerabilitiesBox": {
                        "name": "A10-Server-Side Request Forgery",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 4
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "PCI DSS v3.2.1",
            "subCategories": [
                {
                    "name": "PCI_DSS__3_2_1____6_5_3___Insecure_cryptographic_storage_414",
                    "vulnerabilitiesBox": {
                        "name": "PCI DSS (3.2.1) - 6.5.3 - Insecure cryptographic storage",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 0
                            },
                            {
                                "level": "Medium",
                                "value": 0
                            },
                            {
                                "level": "Low",
                                "value": 0
                            },
                            {
                                "level": "Information",
                                "value": 6
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "SANS top 25",
            "subCategories": [
                {
                    "name": "SANS_top_25_421",
                    "vulnerabilitiesBox": {
                        "name": "SANS top 25",
                        "severityDistribution": [
                            {
                                "level": "High",
                                "value": 3
                            },
                            {
                                "level": "Medium",
                                "value": 21
                            },
                            {
                                "level": "Low",
                                "value": 57
                            },
                            {
                                "level": "Information",
                                "value": 0
                            }
                        ]
                    }
                }
            ]
        }
    ],
    "resolvedVulnerabilities": {
        "resolvedTotal": 0,
        "resolvedVulnerabilities": []
    },
    "vulnerabilityDetails": [
        {
            "vulnerabilityName": "Reflected_XSS",
            "risk": "A successful XSS exploit would allow an attacker to rewrite web pages and insert malicious scripts which would alter the intended output. This could include HTML fragments, CSS styling rules, arbitrary JavaScript, or references to third party code. An attacker could use this to steal users' passwords, collect personal data such as credit card details, provide false information, or run malware. From the victim’s point of view, this is performed by the genuine website, and the victim would blame the site for incurred damage.\n\nThe attacker could use social engineering to cause the user to send the website modified input, which will be returned in the requested web page.\n\n",
            "cause": "The application creates web pages that include untrusted data, whether from user input, the application’s database, or from other external sources. The untrusted data is embedded directly in the page's HTML, causing the browser to display it as part of the web page. If the input includes HTML fragments or JavaScript, these are displayed too, and the user cannot tell that this is not the intended page. The vulnerability is the result of directly embedding arbitrary data without first encoding it in a format that would prevent the browser from treating it like HTML or code instead of plain text.\n\nNote that an attacker can exploit this vulnerability either by modifying the URL, or by submitting malicious data in the user input or other request fields.\n\n",
            "generalRecommendations": "*   Fully encode all dynamic data, regardless of source, before embedding it in output.\r\n*   Encoding should be context-sensitive. For example:\r\n    *   HTML encoding for HTML content\r\n    *   HTML Attribute encoding for data output to attribute values\r\n    *   JavaScript encoding for server-generated JavaScript\r\n*   It is recommended to use the platform-provided encoding functionality, or known security libraries for encoding output.\r\n*   Implement a Content Security Policy (CSP) with explicit whitelists for the application's resources only. \r\n*   As an extra layer of protection, validate all untrusted data, regardless of source (note this is not a replacement for encoding). Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:\r\n    *   Data type\r\n    *   Size\r\n    *   Range\r\n    *   Format\r\n    *   Expected values\r\n*   In the `Content-Type` HTTP response header, explicitly define character encoding (charset) for the entire page. \r\n*   Set the `HTTPOnly` flag on the session cookie for \"Defense in Depth\", to prevent any successful XSS exploits from stealing the cookie.\n\n",
            "cweId": 79
        },
        {
            "vulnerabilityName": "Client_Side_Injection",
            "risk": "An attacker could directly access all of the system's data. The attacker would likely be able to steal any sensitive information stored by the system, including private user information, credit card details, proprietary business data, and any other secret data. Likewise, the attacker could possibly modify or erase existing data, or even add new bogus data. In some scenarios, it may even be possible to execute code on the database. \r\n\r\nIn addition to disclosing or altering confidential information directly, this vulnerability might also be used to achieve secondary effects, such as bypassing authentication, subverting security checks, or forging a data trail. \r\n\r\nFurther increasing the likelihood of exploit is the fact that this flaw is easy for attackers to find, and easy to exploit.\n\nSince this is a client-side issue, it will likely only expose data stored on the current device to retrieval or tampering.\n\n",
            "cause": "The application stores and manages data in a database, by submitting a textual SQL query to the database engine for processing. The application creates the query by simple string concatenation, embedding untrusted data. However, there is no separation between data and code; furthermore, the embedded data is neither checked for data type validity nor subsequently sanitized. Thus, the untrusted data could contain SQL commands, or modify the intended query. The database would interpret the altered query and commands as if they originated from the application, and execute them accordingly.\n\n",
            "generalRecommendations": "*   Validate all untrusted data, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. \r\n*   In particular, check for:\r\n    *   Data type\r\n    *   Size\r\n    *   Range\r\n    *   Format\r\n    *   Expected values.\r\n*   Restrict access to database objects and functionality, according to the Principle of Least Privilege.\r\n*   Do not use dynamically concatenate strings to construct SQL queries. \r\n*   Prefer using DB Stored Procedures for all data access, instead of ad-hoc dynamic queries. \r\n*   Instead of unsafe string concatenation, use secure database components such as parameterized queries and object bindings (for example, commands and parameters). \r\n*   Alternatively, an even better solution is to use an ORM library, in order to pre-define and encapsulate the allowed commands enabled for the application, instead of dynamically accessing the database directly. In this way the code plane and data plane should be isolated from each other.\n\n",
            "cweId": 89
        },
        {
            "vulnerabilityName": "Unchecked_Input_for_Loop_Condition",
            "risk": "An attacker could input a very high value, potentially causing a denial of service (DoS).\n\n",
            "cause": "The application performs some repetitive task in a loop, and defines the number of times to perform the loop according to user input. A very high value could cause the application to get stuck in the loop and to be unable to continue to other operations.\n\n",
            "generalRecommendations": "Ideally, don’t base a loop on user-provided data. If it is necessary to do so, the user input must be first validated and its range should be limited.\n\n",
            "cweId": 606
        },
        {
            "vulnerabilityName": "Unchecked_Input_for_Loop_Condition",
            "risk": "An attacker could input a very high value, potentially causing a denial of service (DoS).\n\n",
            "cause": "The application performs some repetitive task in a loop, and defines the number of times to perform the loop according to user input. A very high value could cause the application to get stuck in the loop and to be unable to continue to other operations.\n\n",
            "generalRecommendations": "Ideally, don’t base a loop on user-provided data. If it is necessary to do so, the user input must be first validated and its range should be limited.\n\n",
            "cweId": 606
        },
        {
            "vulnerabilityName": "SSRF",
            "risk": "An attacker can abuse this flaw to make arbitrary requests, originating from the application server. This can be exploited to scan internal services; proxy attacks into a protected network; bypass network controls; download unauthorized files; access internal services and management interfaces; and possibly control the contents of requests and even steal server credentials.\n\n",
            "cause": "The application accepts a URL (or other data) from the user, and uses this to make a request to another remote server.\r\n\r\nHowever, the attacker can inject an arbitrary URL into the request, causing the application to connect to any server the attacker wants. Thus, the attacker can abuse the application to gain access to services that would not otherwise be accessable, and cause the request to ostensibly originate from the application server.\n\n",
            "generalRecommendations": "*   Do not connect to arbitrary services based on user input.\r\n*   If possible, the application should have the user's browser retrieve the desired information directly. \r\n*   If it is necessary for the application to proxy the request on the server, explicitly whitelist the allowed target URLs, and do not include any sensitive server information.\n\n",
            "cweId": 918
        },
        {
            "vulnerabilityName": "SSL_Verification_Bypass",
            "risk": "If the SSL/TLS library is configured to disable verification of the certificate's properties, such as trust chain, hostname, expiry and more - it is possible to cause the application to utilize an unvalidated certificate. This may allow an attacker to intercept the client requests, provide their own forged server certificate, and perform an active Man-in-the-Middle attacks - even over HTTPS. Thus an attacker would have complete access to the content of requests and responses, reading any secret information and tampering any sensitive data, including user credentials.\n\n",
            "cause": "The application utilizes HTTPS, but is explicitly configured to disable verification of certificate authenticity. If the certificate signer is not verified all the way up to a trusted certificate authority, it is possible to issue a bogus certificate, and have it be accepted by the application. Since the application does not enforce the signing certificate is already configured in the system's trusted root certificate store, it is possible to simply use a self-signed certificate, with any user- or server-name, and the application will trust it.\n\n",
            "generalRecommendations": "Generic Guidance: \n*   Properly implement all checks necessary to ensure the identity of entities involved in encrypted communications.\n*   Properly configure all parameters of HTTPS.\n*   Never disable certificate verification.\n\n\n\n",
            "cweId": 599
        },
        {
            "vulnerabilityName": "Reflected_Relative_Path_Traversal",
            "risk": "An attacker could define arbitrary file path for the application to use, potentially leading to:\r\n*   Stealing sensitive files, such as configuration or system files\r\n*   Overwriting files such as program binaries, configuration files, or system files\r\n*   Deleting critical files, causing denial of service (DoS).\n\n",
            "cause": "The application uses user input in the file path for accessing files on the application server’s local disk.\n\n",
            "generalRecommendations": "1.  Ideally, avoid depending on dynamic data for file selection.\n2.  Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:\n    * Data type\n    * Size\n    * Range\n    * Format\n    * Expected values\n4.  Accept dynamic data only for the filename, not for the path and folders.\n5.  Ensure that file path is fully canonicalized.\n6.  Explicitly limit the application to use a designated folder that is separate from the applications binary folder.\n7.  Restrict the privileges of the application’s OS user to necessary files and folders. The application should not be able to write to the application binary folder, and should not read anything outside of the application folder and data folder.\n\n",
            "cweId": 23
        },
        {
            "vulnerabilityName": "Reflected_Absolute_Path_Traversal",
            "risk": "An attacker could define arbitrary file path for the application to use, potentially leading to:\r\n*   Stealing sensitive files, such as configuration or system files\r\n*   Overwriting files such as program binaries, configuration files, or system files\r\n*   Deleting critical files, causing denial of service (DoS).\n\n",
            "cause": "The application uses user input in the file path for accessing files on the application server’s local disk.\n\n",
            "generalRecommendations": "1.  Ideally, avoid depending on dynamic data for file selection.\n2.  Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:\n    * Data type\n    * Size\n    * Range\n    * Format\n    * Expected values\n4.  Accept dynamic data only for the filename, not for the path and folders.\n5.  Ensure that file path is fully canonicalized.\n6.  Explicitly limit the application to use a designated folder that is separate from the applications binary folder.\n7.  Restrict the privileges of the application’s OS user to necessary files and folders. The application should not be able to write to the application binary folder, and should not read anything outside of the application folder and data folder.\n\n",
            "cweId": 36
        },
        {
            "vulnerabilityName": "Denial_Of_Service_Resource_Exhaustion",
            "risk": "Denial-of-Service (DoS) will result in inaccessibility to some, if not all, facets of an application.\n\n",
            "cause": "Computing resources are limited by server specifications, be it memory, storage, CPU, bandwidth and more. Failure to ensure that these resources are properly generated, managed and released may result in a system failing in unexpected ways, which may result in Denial-of-Service.\n\n",
            "generalRecommendations": "Practice caution when handling system resources, from pointers in memory to files in the file system, to prevent potential abuse of available resources.\n\n",
            "cweId": 400
        },
        {
            "vulnerabilityName": "TruffleHog_HighEntropy_Strings",
            "risk": "Hardcoded passwords expose the application to password leakage. If an attacker gains access to the source code, she will be able to steal the embedded passwords, and use them to impersonate a valid user. This could include impersonating end users to the application, or impersonating the application to a remote system, such as a database or a remote web service. \r\n\r\nOnce the attacker succeeds in impersonating the user or application, she will have full access to the system, and be able to do anything the impersonated identity could do.",
            "cause": "The application codebase has string literal passwords embedded in the source code. This hardcoded value is used either to compare to user-provided credentials, or to authenticate downstream to a remote system (such as a database or a remote web service).  \r\n\r\nAn attacker only needs to gain access to the source code to reveal the hardcoded password. Likewise, the attacker can reverse engineer the compiled application binaries, and easily retrieve the embedded password. Once found, the attacker can easily use the password in impersonation attacks, either directly on the application or to the remote system. \r\n\r\nFurthermore, once stolen, this password cannot be easily changed to prevent further misuse, unless a new version of the application is compiled. Moreover, if this application is distributed to numerous systems, stealing the password from one system automatically allows a class break in to all the deployed systems.",
            "generalRecommendations": "*   Do not hardcode any secret data in source code, especially not passwords. \r\n*   In particular, user passwords should be stored in a database or directory service, and protected with a strong password hash (e.g. bcrypt, scrypt, PBKDF2, or Argon2). Do not compare user passwords with a hardcoded value. \r\n*   Sytem passwords should be stored in a configuration file or the database, and protected with strong encryption (e.g. AES-256). Encryption keys should be securely managed, and not hardcoded.",
            "cweId": 798
        },
        {
            "vulnerabilityName": "Use_of_Non_Cryptographic_Random",
            "risk": "Random values are often used as a mechanism to prevent malicious users from knowing or predicting a given value, such as a password, encryption key, or session identifier. Depending on what this random value is used for, an attacker would be able to predict the next numbers generated, or previously generated values, based on sources often used to derive certain randomness; however, while they may seem random, large statistical samples would demonstrate that they are insufficiently random, producing a much smaller space of possible \"random\" values than a truly random sample would. This could enable an attacker to derive or guess this value, and thus hijack another user's session, impersonate another user, or crack an encryption key (depending on what the pseudo-random value was used for).\n\n",
            "cause": "The application uses a weak method of generating pseudo-random values, such that other numbers could be determined from a relatively small sample size. Since the pseudo-random number generator used is designed for statistically uniform distribution of values, it is approximately deterministic. Thus, after collecting a few generated values, it would be possible for an attacker to calculate past or future values.  \r\nSpecifically, if this pseudo-random value is used in any security context, such as one-time passwords, keys, secret identifiers or salts - an attacker would likely be able to predict the next value generated and steal it, or guess a previously generated value and spoof its original intent.\n\n",
            "generalRecommendations": "*   Always use a cryptographically secure pseudo-random number generator, instead of basic random methods, particularly when dealing with a security context\r\n*   Use the cryptorandom generator that is built-in to your language or platform, and ensure it is securely seeded. Do not seed the generator with a weak, non-random seed. (In most cases, the default is securely random). \r\n*   Ensure you use a long enough random value, thus making brute-force attacks unfeasible.\n\n",
            "cweId": 330
        },
        {
            "vulnerabilityName": "TruffleHog_Regex_Matches",
            "risk": "Hardcoded passwords expose the application to password leakage. If an attacker gains access to the source code, she will be able to steal the embedded passwords, and use them to impersonate a valid user. This could include impersonating end users to the application, or impersonating the application to a remote system, such as a database or a remote web service. \r\n\r\nOnce the attacker succeeds in impersonating the user or application, she will have full access to the system, and be able to do anything the impersonated identity could do.",
            "cause": "The application codebase has string literal passwords embedded in the source code. This hardcoded value is used either to compare to user-provided credentials, or to authenticate downstream to a remote system (such as a database or a remote web service).  \r\n\r\nAn attacker only needs to gain access to the source code to reveal the hardcoded password. Likewise, the attacker can reverse engineer the compiled application binaries, and easily retrieve the embedded password. Once found, the attacker can easily use the password in impersonation attacks, either directly on the application or to the remote system. \r\n\r\nFurthermore, once stolen, this password cannot be easily changed to prevent further misuse, unless a new version of the application is compiled. Moreover, if this application is distributed to numerous systems, stealing the password from one system automatically allows a class break in to all the deployed systems.",
            "generalRecommendations": "*   Do not hardcode any secret data in source code, especially not passwords. \r\n*   In particular, user passwords should be stored in a database or directory service, and protected with a strong password hash (e.g. bcrypt, scrypt, PBKDF2, or Argon2). Do not compare user passwords with a hardcoded value. \r\n*   Sytem passwords should be stored in a configuration file or the database, and protected with strong encryption (e.g. AES-256). Encryption keys should be securely managed, and not hardcoded.",
            "cweId": 798
        },
        {
            "vulnerabilityName": "Missing_Rooted_Device_Check",
            "risk": "A rooted device can be vulnerable to multiple forms of attack, as applications, services and more may have significant access to privileged device operations. These operations include directly reading and writing memory, full file system access and more.\r\n\r\nWhile no checks for a rooted device are bulletproof, as a malicious application will almost assuredly be able to suppress any such checks, they are nonetheless recommended to protect application users from using it on a compromised device, for instances such as when a device has been rooted but not yet compromised.\n\n",
            "cause": "The absence of proper device root check indicates that it would function normally on a rooted device.\n\n",
            "generalRecommendations": "Conduct checks, preferably at startup, to ensure the device is not rooted. If it is rooted, warn the user, and consider preventing them from using the application altogether, to prevent compromise of sensitive information within the application.\n\n",
            "cweId": 693
        },
        {
            "vulnerabilityName": "Improper_Error_Handling",
            "risk": "An unhandled error may cause unexpected behavior if it is not properly checked, depending on implementation the likeliest scenario being denial-of-service if the unhandled error aggregates, or triggers further errors downstream. A suppressed error or one that is not properly logged and documented will likely lead to loss of relevant information, hinder troubleshooting and potentially obscure code quality and security related issues.\n\n",
            "cause": "An error is thrown, but is not handled - the error itself is either intentionally suppressed or, through a certain logic flow, is never actively handled. If an error is properly suppressed or never used, it is implicitly suppressed - this implies it is not logged or logically validated by application code.\n\n",
            "generalRecommendations": "*   Always log errors to ensure availability of error-related information\r\n*   Perform logical checks when handling error-prone code to root out any potential unexpected behavior in case an operation fails\r\n    *   Cover all potential edge cases, however unlikely their occurrence may be, to avoid troubleshooting problems in the future\n*   In Go, when using panic() or a panic-prone piece of code (such as a 3rd party library), always consider the following:\r\n    *   `recover()` must be deferred via the `defer` keyword - otherwise, the value of `recover()` would be `nil`, and then when the panic call occurs nothing will \"catch\" it\r\n    *   A call to `recover()` must be immediately in the deferred function, which is either anonymous or named. If the deferred function calls another function that contains `recover()`, its value would be `nil` and the thrown panic will continue after deferred code has finished running\r\n    *   Goroutines which panic cannot be recovered by their calling code. If a deferred `recover()` call precedes a call to panic-prone code that is invoked as a Go routine (via `go`), the deferred code will be ignored, panic will terminate the program and a stack trace for every ongoing routine will be dumped\r\n    *   Return values from calls to `recover()` should be handled like errors - they should be logged, and should fit code flow in case a panic was caused",
            "cweId": 248
        },
        {
            "vulnerabilityName": "Deprecated_API",
            "risk": "Referencing deprecated modules can cause an application to be exposed to known vulnerabilities, that have been publicly reported and already fixed. A common attack technique is to scan applications for these known vulnerabilities, and then exploit the application through these deprecated versions. However, even if deprecated code is used in a way that is completely secure, its very use and inclusion in the code base would encourage developers to re-use the deprecated element in the future, potentially leaving the application vulnerable to attack, which is why deprecated code should be eliminated from the code-base as a matter of practice.\r\n\r\nNote that the actual risk involved depends on the specifics of any known vulnerabilities in older versions.\n\n",
            "cause": "The application references code elements that have been declared as deprecated. This could include classes, functions, methods, properties, modules, or obsolete library versions that are either out of date by version, or have been entirely deprecated. It is likely that the code that references the obsolete element was developed before it was declared as obsolete, and in the meantime the referenced code was updated.\n\nIn Go - preceding code with a comment whose prefix is `// Deprecated: ` will denote it as deprecated.",
            "generalRecommendations": "*   Always prefer to use the most updated versions of libraries, packages, and other dependancies.\r\n*   Do not use or reference any class, method, function, property, or other element that has been declared deprecated.\n\n",
            "cweId": 477
        },
        {
            "vulnerabilityName": "Incorrect_Block_Delimitation",
            "risk": "Since in some languages braces are optional for blocks, the code may not explicitly delimit a block that is intended to contain two or more instructions, creating a logic error. In some cases, the logic error can have security implications.",
            "cause": "The programmer indented a statement's block composed by more than one instruction, but, since there were no braces, only the first instruction was influenced by that statement.",
            "generalRecommendations": "Always use explicit block delimitation.",
            "cweId": 483
        }
    ]
}