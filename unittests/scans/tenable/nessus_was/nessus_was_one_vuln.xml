<?xml version="1.0" ?><NessusClientData_v2><Policy><policyName></policyName><policyComments></policyComments><Preferences><ServerPreferences><config_id>905a5ba3-6db3-4f80-b550-1c2316e23cc6</config_id><owner_id>19257b6d-6ad2-4e1e-b710-dcfb12e720f7</owner_id><settings_http_user_agent>WAS/%v</settings_http_user_agent><settings_http_include_scan_id>false</settings_http_include_scan_id><settings_http_request_headers_Accept>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</settings_http_request_headers_Accept><settings_http_request_headers_Accept-Language>en-US,en;q=0.5</settings_http_request_headers_Accept-Language><settings_http_request_timeout>20</settings_http_request_timeout><settings_http_custom_user_agent>false</settings_http_custom_user_agent><settings_http_response_max_size>5000000</settings_http_response_max_size><settings_http_request_concurrency>10</settings_http_request_concurrency><settings_http_request_redirect_limit>2</settings_http_request_redirect_limit><settings_audit_xmls>true</settings_audit_xmls><settings_audit_forms>true</settings_audit_forms><settings_audit_jsons>true</settings_audit_jsons><settings_audit_links>true</settings_audit_links><settings_audit_cookies>true</settings_audit_cookies><settings_audit_headers>true</settings_audit_headers><settings_audit_ui_forms>true</settings_audit_ui_forms><settings_audit_ui_inputs>true</settings_audit_ui_inputs><settings_audit_parameter_names>false</settings_audit_parameter_names><settings_audit_path_parameters>false</settings_audit_path_parameters><settings_audit_parameter_values>true</settings_audit_parameter_values><settings_scope_option>all</settings_scope_option><settings_scope_page_limit>100</settings_scope_page_limit><settings_scope_decompose_paths>false</settings_scope_decompose_paths>\<settings_scope_dom_depth_limit>5</settings_scope_dom_depth_limit><settings_scope_exclude_binaries>true</settings_scope_exclude_binaries><settings_scope_auto_redundant_paths>5</settings_scope_auto_redundant_paths><settings_scope_directory_depth_limit>10</settings_scope_directory_depth_limit><settings_scope_exclude_path_patterns>logout</settings_scope_exclude_path_patterns><settings_scope_exclude_file_extensions>js,css,png,jpeg,gif,pdf,csv,svn-base,svg,jpg,ico,woff,woff2</settings_scope_exclude_file_extensions><settings_chrome_script_finish_wait>5000</settings_chrome_script_finish_wait><settings_chrome_script_command_wait>500</settings_chrome_script_command_wait><settings_chrome_script_page_load_wait>30000</settings_chrome_script_page_load_wait><settings_plugin_ids></settings_plugin_ids><settings_plugin_mode>disable</settings_plugin_mode><settings_plugin_names></settings_plugin_names><settings_plugin_families></settings_plugin_families><settings_plugin_rate_limiter_autothrottle>true</settings_plugin_rate_limiter_autothrottle><settings_plugin_rate_limiter_timeout_threshold>100</settings_plugin_rate_limiter_timeout_threshold><settings_plugin_rate_limiter_requests_per_second>25</settings_plugin_rate_limiter_requests_per_second><settings_browser_pool_size>3</settings_browser_pool_size><settings_browser_job_timeout>60</settings_browser_job_timeout><settings_browser_screen_width>1600</settings_browser_screen_width><settings_browser_ignore_images>true</settings_browser_ignore_images><settings_browser_screen_height>1200</settings_browser_screen_height><settings_timeout>02:00:00</settings_timeout><settings_assessment_enable>true</settings_assessment_enable><settings_assessment_dictionary>limited</settings_assessment_dictionary><settings_assessment_rfi_remote_url>http://rfi.nessus.org/rfi.txt</settings_assessment_rfi_remote_url><settings_debug_mode>false</settings_debug_mode><settings_credentials_credential_ids></settings_credentials_credential_ids><additional_properties></additional_properties><scanner_type>cloud</scanner_type><scanner_instance_id></scanner_instance_id><name>nessis_was_many_vuln</name><description></description></ServerPreferences><PluginPreferences></PluginPreferences></Preferences><FamilySelection></FamilySelection><IndividualPluginSelection></IndividualPluginSelection></Policy>
<Report xmlns:cm="http://www.nessus.org/cm" name="google.com" version="1.1" type="was"><ReportHost name="http://google.com/"><HostProperties><tag name="host-fqdn">http://google.com/</tag><tag name="system-type">web_application</tag><tag name="HOST_START">2021-03-12T12:34:30.12031+00:00</tag><tag name="HOST_END">2021-03-12T14:35:34.341269+00:00</tag></HostProperties>
<ReportItem pluginFamily="Cross Site Scripting" pluginName="Cross-Site Scripting (XSS)" pluginID="98104" severity="3" protocol="TCP" svc_name="http" port="80">
<description>
Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.
</description>
<plugin_publication_date>2017-03-31T00:00:00+00:00</plugin_publication_date><plugin_modification_date>2020-01-14T00:00:00+00:00</plugin_modification_date>
<plugin_output>
Vulnerability has been detected on URL 'http://google.com/search.jsp' by exploiting 'form' element named 'query' and injecting following payload:

| ()"&amp;%1'-;&lt;xss_9676200&gt;'

To confirm the presence of the vulnerability, this proof has been identified in the target response:

| &lt;xss_9676200&gt;
</plugin_output>
<plugin_name>Cross-Site Scripting (XSS)</plugin_name>
<solution>
To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&amp;` * `&lt;` * `&gt;` * `'` * `'` * `/`
An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._
</solution>
<risk_factor>high</risk_factor><cvss>7.5</cvss><cvssv3>7.1</cvssv3>
<see_also>http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting</see_also><see_also>https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet</see_also>
<xref>WASC:Cross-Site Scripting</xref><xref>CWE:79</xref><xref>OWASP_API:2019-API7</xref><xref>OWASP:2017-A7</xref><xref>OWASP:2010-A2</xref><xref>OWASP:2013-A3</xref></ReportItem></ReportHost></Report></NessusClientData_v2>