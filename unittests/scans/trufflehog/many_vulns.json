{"branch": "origin/dev", "commit": "Fixed since_commit and tests (#219)\n\n* Fixed since_commit and tests\r\n\r\n* Updated testing comment\r\n\r\nCo-authored-by: Dylan Ayrey <dxa4481@rit.edu>", "commitHash": "288f35ed2e73145e3578207e896a4cf1600bea45", "date": "2021-01-30 19:50:09", "diff": "@@ -30,12 +30,12 @@ class TestStringMethods(unittest.TestCase):\n             self.fail(\"Unicode print error\")\n \n     def test_return_correct_commit_hash(self):\n-        # Start at commit 202564cf776b402800a4aab8bb14fa4624888475, which \n+        # Start at commit d15627104d07846ac2914a976e8e347a663bbd9b, which \n         # is immediately followed by a secret inserting commit:\n-        # https://github.com/dxa4481/truffleHog/commit/d15627104d07846ac2914a976e8e347a663bbd9b\n-        since_commit = '202564cf776b402800a4aab8bb14fa4624888475'\n-        commit_w_secret = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n-        cross_valdiating_commit_w_secret_comment = 'Oh no a secret file'\n+        # https://github.com/dxa4481/truffleHog/commit/9ed54617547cfca783e0f81f8dc5c927e3d1e345\n+        since_commit = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n+        commit_w_secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\n+        cross_valdiating_commit_w_secret_comment = 'OH no a secret'\n \n         json_result = ''\n         if sys.version_info >= (3,):\n@@ -54,8 +54,7 @@ class TestStringMethods(unittest.TestCase):\n \n         json_result_list = tmp_stdout.getvalue().split('\\n')\n         results = [json.loads(r) for r in json_result_list if bool(r.strip())]\n-        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret and r['branch'] == 'origin/master', results))\n-\n+        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret, results))\n         self.assertEqual(1, len(filtered_results))\n         self.assertEqual(commit_w_secret, filtered_results[0]['commitHash'])\n         # Additionally, we cross-validate the commit comment matches the expected comment\n", "path": "test_all.py", "printDiff": "\u001b[93msecret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\u001b[0m", "reason": "Generic Secret", "stringsFound": ["secret = 'd15627104d07846ac2914a976e8e347a663bbd9b'", "secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'"]}
{"branch": "origin/dev", "commit": "Add allow list for known secrets (#223)\n\n* Include allow list\r\n\r\n* Make newlines in allow list flexible\r\n\r\n* Allow literals as well as regex in allow list\r\n\r\n* Fix flexible newline regex\r\n\r\n* Escape ALL THE THINGS\r\n\r\n* Detect \"\\<cr>\" and \"\\<lf>\", simplify newline regex, allow diff chars after newlines\r\n\r\n- re.escape also puts `\\` in front of `<cr>` and `<lf>`, so account for that in the replacement.\r\n- simplify newline replacement regex (and make slightly more flexible)\r\n- detect leading + / - at start of diff lines", "commitHash": "caa709db5b599dbe67afbad2eee4ae632cc3c12e", "date": "2021-01-30 19:38:57", "diff": "@@ -71,23 +71,13 @@ Feel free to also contribute high signal regexes upstream that you think will be\n \n trufflehog's base rule set sources from https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json\n \n-To explicitly allow particular secrets (e.g. self-signed keys used only for local testing) you can provide an allow list `--allow /path/to/allow` in the following format:\n-```\n-{\n-    \"local self signed test key\": \"-----BEGIN EC PRIVATE KEY-----\\nfoobar123\\n-----END EC PRIVATE KEY-----\",\n-    \"git cherry pick SHAs\": \"regex:Cherry picked from .*\",\n-}\n-```\n-\n-Note that values beginning with `regex:` will be used as regular expressions. Values without this will be literal, with some automatic conversions (e.g. flexible newlines).\n-\n ## How it works\n This module will go through the entire commit history of each branch, and check each diff from each commit, and check for secrets. This is both by regex and by entropy. For entropy checks, truffleHog will evaluate the shannon entropy for both the base64 char set and hexidecimal char set for every blob of text greater than 20 characters comprised of those character sets in each diff. If at any point a high entropy string >20 characters is detected, it will print to the screen.\n \n ## Help\n \n ```\n-usage: trufflehog [-h] [--json] [--regex] [--rules RULES] [--allow ALLOW]\n+usage: trufflehog [-h] [--json] [--regex] [--rules RULES]\n                   [--entropy DO_ENTROPY] [--since_commit SINCE_COMMIT]\n                   [--max_depth MAX_DEPTH]\n                   git_url\n@@ -102,7 +92,6 @@ optional arguments:\n   --json                Output in JSON\n   --regex               Enable high signal regex checks\n   --rules RULES         Ignore default regexes and source from json list file\n-  --allow ALLOW         Explicitly allow regexes from json list file\n   --entropy DO_ENTROPY  Enable entropy checks\n   --since_commit SINCE_COMMIT\n                         Only scan from a given commit hash\n", "path": "README.md", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "resolving merge conflicts\n", "commitHash": "466cdc94b4fcb0acd1904726a9b4de5c26e9125d", "date": "2019-05-06 07:47:40", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "resolving merge conflicts\n", "commitHash": "466cdc94b4fcb0acd1904726a9b4de5c26e9125d", "date": "2019-05-06 07:47:40", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "resolving merge conflicts\n", "commitHash": "466cdc94b4fcb0acd1904726a9b4de5c26e9125d", "date": "2019-05-06 07:47:40", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "resolving merge conflicts\n", "commitHash": "466cdc94b4fcb0acd1904726a9b4de5c26e9125d", "date": "2019-05-06 07:47:40", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "resolving merge conflicts\n", "commitHash": "466cdc94b4fcb0acd1904726a9b4de5c26e9125d", "date": "2019-05-06 07:47:40", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "Merge pull request #135 from max-sixty/patch-1\n\nBenifit -> Benefit", "commitHash": "a4c69fa2f6b256bfe824ac82b96c77eb8c06b2d0", "date": "2018-12-17 07:21:16", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge pull request #135 from max-sixty/patch-1\n\nBenifit -> Benefit", "commitHash": "a4c69fa2f6b256bfe824ac82b96c77eb8c06b2d0", "date": "2018-12-17 07:21:16", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge pull request #135 from max-sixty/patch-1\n\nBenifit -> Benefit", "commitHash": "a4c69fa2f6b256bfe824ac82b96c77eb8c06b2d0", "date": "2018-12-17 07:21:16", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge pull request #135 from max-sixty/patch-1\n\nBenifit -> Benefit", "commitHash": "a4c69fa2f6b256bfe824ac82b96c77eb8c06b2d0", "date": "2018-12-17 07:21:16", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge pull request #135 from max-sixty/patch-1\n\nBenifit -> Benefit", "commitHash": "a4c69fa2f6b256bfe824ac82b96c77eb8c06b2d0", "date": "2018-12-17 07:21:16", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "bumping requirements\n", "commitHash": "355502852332d5efe3d9ec94682c77c662da8609", "date": "2018-12-17 07:17:41", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "bumping requirements\n", "commitHash": "355502852332d5efe3d9ec94682c77c662da8609", "date": "2018-12-17 07:17:41", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "bumping requirements\n", "commitHash": "355502852332d5efe3d9ec94682c77c662da8609", "date": "2018-12-17 07:17:41", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "bumping requirements\n", "commitHash": "355502852332d5efe3d9ec94682c77c662da8609", "date": "2018-12-17 07:17:41", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "bumping requirements\n", "commitHash": "355502852332d5efe3d9ec94682c77c662da8609", "date": "2018-12-17 07:17:41", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "typo", "commitHash": "fc24b2567fb71e51345b3f611ed6eeb815440407", "date": "2018-12-07 00:27:58", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "typo", "commitHash": "fc24b2567fb71e51345b3f611ed6eeb815440407", "date": "2018-12-07 00:27:58", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "typo", "commitHash": "fc24b2567fb71e51345b3f611ed6eeb815440407", "date": "2018-12-07 00:27:58", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "typo", "commitHash": "fc24b2567fb71e51345b3f611ed6eeb815440407", "date": "2018-12-07 00:27:58", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "typo", "commitHash": "fc24b2567fb71e51345b3f611ed6eeb815440407", "date": "2018-12-07 00:27:58", "diff": "@@ -4,6 +4,32 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n+import re\n+from json import loads, dumps\n+\n+rules = {\n+    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n+    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n+    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n+    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n+    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n+    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n+    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n+    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n+    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n+    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n+    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n+    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n+    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n+    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n+    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n+    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n+    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n+}\n+\n+for key in rules:\n+    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -11,8 +37,16 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-        if item['private'] == False:\n+\n+        if item['fork'] == False and reached:\n             print('searching ' + item[\"html_url\"])\n-            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n+            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n+            for issue in results[\"foundIssues\"]:\n+                d = loads(open(issue).read())\n+                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n+                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n+                d['diff'] = d['diff'][0:200]\n+                d['printDiff'] = d['printDiff'][0:200]\n+                print(dumps(d, indent=4))\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"twitter\", 1)\n+get_org_repos(\"square\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "modifying search org\n", "commitHash": "3048c6429d80094b42fd44919e3d6768536178ce", "date": "2018-09-29 18:21:15", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "modifying search org\n", "commitHash": "3048c6429d80094b42fd44919e3d6768536178ce", "date": "2018-09-29 18:21:15", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "modifying search org\n", "commitHash": "3048c6429d80094b42fd44919e3d6768536178ce", "date": "2018-09-29 18:21:15", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "modifying search org\n", "commitHash": "3048c6429d80094b42fd44919e3d6768536178ce", "date": "2018-09-29 18:21:15", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "modifying search org\n", "commitHash": "3048c6429d80094b42fd44919e3d6768536178ce", "date": "2018-09-29 18:21:15", "diff": "@@ -4,32 +4,6 @@ via https://github.com/dxa4481/truffleHog/pull/9\n \"\"\"\n import requests\n from truffleHog import truffleHog\n-import re\n-from json import loads, dumps\n-\n-rules = {\n-    \"Slack Token\": \"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\",\n-    \"RSA private key\": \"-----BEGIN RSA PRIVATE KEY-----\",\n-    \"SSH (OPENSSH) private key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\",\n-    \"SSH (DSA) private key\": \"-----BEGIN DSA PRIVATE KEY-----\",\n-    \"SSH (EC) private key\": \"-----BEGIN EC PRIVATE KEY-----\",\n-    \"PGP private key block\": \"-----BEGIN PGP PRIVATE KEY BLOCK-----\",\n-    \"Facebook Oauth\": \"[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].{0,30}['\\\"\\\\s][0-9a-f]{32}['\\\"\\\\s]\",\n-    \"Twitter Oauth\": \"[t|T][w|W][i|I][t|T][t|T][e|E][r|R].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,44}['\\\"\\\\s]\",\n-    \"GitHub\": \"[g|G][i|I][t|T][h|H][u|U][b|B].{0,30}['\\\"\\\\s][0-9a-zA-Z]{35,40}['\\\"\\\\s]\",\n-    \"Google Oauth\": \"(\\\"client_secret\\\":\\\"[a-zA-Z0-9-_]{24}\\\")\",\n-    \"AWS API Key\": \"AKIA[0-9A-Z]{16}\",\n-    \"Heroku API Key\": \"[h|H][e|E][r|R][o|O][k|K][u|U].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\",\n-    \"Generic Secret\": \"[s|S][e|E][c|C][r|R][e|E][t|T].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Generic API Key\": \"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].{0,30}['\\\"\\\\s][0-9a-zA-Z]{32,45}['\\\"\\\\s]\",\n-    \"Slack Webhook\": \"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\",\n-    \"Google (GCP) Service-account\": \"\\\"type\\\": \\\"service_account\\\"\",\n-    \"Twilio API Key\": \"SK[a-z0-9]{32}\",\n-    \"Password in URL\": \"[a-zA-Z]{3,10}://[^/\\\\s:@]{3,20}:[^/\\\\s:@]{3,20}@.{1,100}[\\\"'\\\\s]\",\n-}\n-\n-for key in rules:\n-    rules[key] = re.compile(rules[key])\n \n def get_org_repos(orgname, page):\n     response = requests.get(url='https://api.github.com/users/' + orgname + '/repos?page={}'.format(page))\n@@ -37,16 +11,8 @@ def get_org_repos(orgname, page):\n     if not json:\n         return None\n     for item in json:\n-\n-        if item['fork'] == False and reached:\n+        if item['private'] == False:\n             print('searching ' + item[\"html_url\"])\n-            results = truffleHog.find_strings(item[\"html_url\"], do_regex=True, custom_regexes=rules, do_entropy=False, max_depth=100000)\n-            for issue in results[\"foundIssues\"]:\n-                d = loads(open(issue).read())\n-                d['github_url'] = \"{}/blob/{}/{}\".format(item[\"html_url\"], d['commitHash'], d['path'])\n-                d['github_commit_url'] = \"{}/commit/{}\".format(item[\"html_url\"], d['commitHash'])\n-                d['diff'] = d['diff'][0:200]\n-                d['printDiff'] = d['printDiff'][0:200]\n-                print(dumps(d, indent=4))\n+            truffleHog.find_strings(item[\"html_url\"], do_regex=True, do_entropy=False, max_depth=100000)\n     get_org_repos(orgname, page + 1)\n-get_org_repos(\"square\", 1)\n+get_org_repos(\"twitter\", 1)\n", "path": "scripts/searchOrg.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "Update README.md", "commitHash": "fe0d53753c8df41e7aef6083684f0e4bc9e94016", "date": "2018-08-28 05:08:51", "diff": "@@ -1,11 +1,6 @@\n import unittest\n import os\n-import sys\n-import json\n-import io\n from truffleHog import truffleHog\n-from mock import patch \n-from mock import MagicMock\n \n \n class TestStringMethods(unittest.TestCase):\n@@ -27,44 +22,5 @@ class TestStringMethods(unittest.TestCase):\n         except UnicodeEncodeError:\n             self.fail(\"Unicode print error\")\n \n-    def test_return_correct_commit_hash(self):\n-        # Start at commit d15627104d07846ac2914a976e8e347a663bbd9b, which \n-        # is immediately followed by a secret inserting commit:\n-        # https://github.com/dxa4481/truffleHog/commit/9ed54617547cfca783e0f81f8dc5c927e3d1e345\n-        since_commit = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n-        commit_w_secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\n-        cross_valdiating_commit_w_secret_comment = 'OH no a secret'\n-\n-        json_result = ''\n-        if sys.version_info >= (3,):\n-            tmp_stdout = io.StringIO()\n-        else:\n-            tmp_stdout = io.BytesIO()\n-        bak_stdout = sys.stdout\n-\n-        # Redirect STDOUT, run scan and re-establish STDOUT\n-        sys.stdout = tmp_stdout\n-        try:\n-            truffleHog.find_strings(\"https://github.com/dxa4481/truffleHog.git\", \n-                since_commit=since_commit, printJson=True, surpress_output=False)\n-        finally:\n-            sys.stdout = bak_stdout\n-\n-        json_result_list = tmp_stdout.getvalue().split('\\n')\n-        results = [json.loads(r) for r in json_result_list if bool(r.strip())]\n-        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret, results))\n-        self.assertEqual(1, len(filtered_results))\n-        self.assertEqual(commit_w_secret, filtered_results[0]['commitHash'])\n-        # Additionally, we cross-validate the commit comment matches the expected comment\n-        self.assertEqual(cross_valdiating_commit_w_secret_comment, filtered_results[0]['commit'].strip())\n-\n-    @patch('truffleHog.truffleHog.clone_git_repo')\n-    @patch('truffleHog.truffleHog.Repo')\n-    def test_branch(self, repo_const_mock, clone_git_repo): \n-        repo = MagicMock()\n-        repo_const_mock.return_value = repo\n-        truffleHog.find_strings(\"test_repo\", branch=\"testbranch\")\n-        repo.remotes.origin.fetch.assert_called_once_with(\"testbranch\")\n-\n if __name__ == '__main__':\n     unittest.main()\n", "path": "test_all.py", "printDiff": "\u001b[93msecret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\u001b[0m", "reason": "Generic Secret", "stringsFound": ["secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'"]}
{"branch": "origin/dev", "commit": "Merge pull request #114 from jwilk-forks/spelling\n\nFix typos", "commitHash": "d768edc419bda068aaf50406dc35ed8ffa3b25c6", "date": "2018-08-25 05:33:23", "diff": "@@ -1,6 +1,11 @@\n import unittest\n import os\n+import sys\n+import json\n+import io\n from truffleHog import truffleHog\n+from mock import patch \n+from mock import MagicMock\n \n \n class TestStringMethods(unittest.TestCase):\n@@ -22,5 +27,44 @@ class TestStringMethods(unittest.TestCase):\n         except UnicodeEncodeError:\n             self.fail(\"Unicode print error\")\n \n+    def test_return_correct_commit_hash(self):\n+        # Start at commit d15627104d07846ac2914a976e8e347a663bbd9b, which \n+        # is immediately followed by a secret inserting commit:\n+        # https://github.com/dxa4481/truffleHog/commit/9ed54617547cfca783e0f81f8dc5c927e3d1e345\n+        since_commit = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n+        commit_w_secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\n+        cross_valdiating_commit_w_secret_comment = 'OH no a secret'\n+\n+        json_result = ''\n+        if sys.version_info >= (3,):\n+            tmp_stdout = io.StringIO()\n+        else:\n+            tmp_stdout = io.BytesIO()\n+        bak_stdout = sys.stdout\n+\n+        # Redirect STDOUT, run scan and re-establish STDOUT\n+        sys.stdout = tmp_stdout\n+        try:\n+            truffleHog.find_strings(\"https://github.com/dxa4481/truffleHog.git\", \n+                since_commit=since_commit, printJson=True, surpress_output=False)\n+        finally:\n+            sys.stdout = bak_stdout\n+\n+        json_result_list = tmp_stdout.getvalue().split('\\n')\n+        results = [json.loads(r) for r in json_result_list if bool(r.strip())]\n+        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret, results))\n+        self.assertEqual(1, len(filtered_results))\n+        self.assertEqual(commit_w_secret, filtered_results[0]['commitHash'])\n+        # Additionally, we cross-validate the commit comment matches the expected comment\n+        self.assertEqual(cross_valdiating_commit_w_secret_comment, filtered_results[0]['commit'].strip())\n+\n+    @patch('truffleHog.truffleHog.clone_git_repo')\n+    @patch('truffleHog.truffleHog.Repo')\n+    def test_branch(self, repo_const_mock, clone_git_repo): \n+        repo = MagicMock()\n+        repo_const_mock.return_value = repo\n+        truffleHog.find_strings(\"test_repo\", branch=\"testbranch\")\n+        repo.remotes.origin.fetch.assert_called_once_with(\"testbranch\")\n+\n if __name__ == '__main__':\n     unittest.main()\n", "path": "test_all.py", "printDiff": "\u001b[93msecret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\u001b[0m", "reason": "Generic Secret", "stringsFound": ["secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'"]}
{"branch": "origin/dev", "commit": "Merge branch 'dev' into bugfix/wrong-commit-hash", "commitHash": "2e064ae3275a44f9b382c3d0cb5fedff72105942", "date": "2018-08-25 05:32:36", "diff": "@@ -1,8 +1,5 @@\n import unittest\n import os\n-import sys\n-import json\n-import io\n from truffleHog import truffleHog\n from mock import patch \n from mock import MagicMock\n@@ -27,37 +24,6 @@ class TestStringMethods(unittest.TestCase):\n         except UnicodeEncodeError:\n             self.fail(\"Unicode print error\")\n \n-    def test_return_correct_commit_hash(self):\n-        # Start at commit d15627104d07846ac2914a976e8e347a663bbd9b, which \n-        # is immediately followed by a secret inserting commit:\n-        # https://github.com/dxa4481/truffleHog/commit/9ed54617547cfca783e0f81f8dc5c927e3d1e345\n-        since_commit = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n-        commit_w_secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\n-        cross_valdiating_commit_w_secret_comment = 'OH no a secret'\n-\n-        json_result = ''\n-        if sys.version_info >= (3,):\n-            tmp_stdout = io.StringIO()\n-        else:\n-            tmp_stdout = io.BytesIO()\n-        bak_stdout = sys.stdout\n-\n-        # Redirect STDOUT, run scan and re-establish STDOUT\n-        sys.stdout = tmp_stdout\n-        try:\n-            truffleHog.find_strings(\"https://github.com/dxa4481/truffleHog.git\", \n-                since_commit=since_commit, printJson=True, surpress_output=False)\n-        finally:\n-            sys.stdout = bak_stdout\n-\n-        json_result_list = tmp_stdout.getvalue().split('\\n')\n-        results = [json.loads(r) for r in json_result_list if bool(r.strip())]\n-        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret, results))\n-        self.assertEqual(1, len(filtered_results))\n-        self.assertEqual(commit_w_secret, filtered_results[0]['commitHash'])\n-        # Additionally, we cross-validate the commit comment matches the expected comment\n-        self.assertEqual(cross_valdiating_commit_w_secret_comment, filtered_results[0]['commit'].strip())\n-\n     @patch('truffleHog.truffleHog.clone_git_repo')\n     @patch('truffleHog.truffleHog.Repo')\n     def test_branch(self, repo_const_mock, clone_git_repo): \n", "path": "test_all.py", "printDiff": "\u001b[93msecret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\u001b[0m", "reason": "Generic Secret", "stringsFound": ["secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'"]}
{"branch": "origin/dev", "commit": "updating regexes\n", "commitHash": "37f962034a57768db3b581b6a2d969015d673a1b", "date": "2018-07-29 22:01:10", "diff": "@@ -1,5 +1,8 @@\n import unittest\n import os\n+import sys\n+import json\n+import io\n from truffleHog import truffleHog\n \n \n@@ -22,5 +25,37 @@ class TestStringMethods(unittest.TestCase):\n         except UnicodeEncodeError:\n             self.fail(\"Unicode print error\")\n \n+    def test_return_correct_commit_hash(self):\n+        # Start at commit d15627104d07846ac2914a976e8e347a663bbd9b, which \n+        # is immediately followed by a secret inserting commit:\n+        # https://github.com/dxa4481/truffleHog/commit/9ed54617547cfca783e0f81f8dc5c927e3d1e345\n+        since_commit = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n+        commit_w_secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\n+        cross_valdiating_commit_w_secret_comment = 'OH no a secret'\n+\n+        json_result = ''\n+        if sys.version_info >= (3,):\n+            tmp_stdout = io.StringIO()\n+        else:\n+            tmp_stdout = io.BytesIO()\n+        bak_stdout = sys.stdout\n+\n+        # Redirect STDOUT, run scan and re-establish STDOUT\n+        sys.stdout = tmp_stdout\n+        try:\n+            truffleHog.find_strings(\"https://github.com/dxa4481/truffleHog.git\", \n+                since_commit=since_commit, printJson=True, surpress_output=False)\n+        finally:\n+            sys.stdout = bak_stdout\n+\n+        json_result_list = tmp_stdout.getvalue().split('\\n')\n+        results = [json.loads(r) for r in json_result_list if bool(r.strip())]\n+        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret, results))\n+        self.assertEqual(1, len(filtered_results))\n+        self.assertEqual(commit_w_secret, filtered_results[0]['commitHash'])\n+        # Additionally, we cross-validate the commit comment matches the expected comment\n+        self.assertEqual(cross_valdiating_commit_w_secret_comment, filtered_results[0]['commit'].strip())\n+\n+\n if __name__ == '__main__':\n     unittest.main()\n", "path": "test_all.py", "printDiff": "\u001b[93msecret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\u001b[0m", "reason": "Generic Secret", "stringsFound": ["secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'"]}
{"branch": "origin/dev", "commit": "Added a test case to ensure the correct commitHash is returned (includes a commit comment cross-validation)\n", "commitHash": "59b59ef81ce6efb9f96edce07cd3fc0e2f5e7003", "date": "2018-06-11 18:16:34", "diff": "@@ -1,8 +1,5 @@\n import unittest\n import os\n-import sys\n-import json\n-import io\n from truffleHog import truffleHog\n \n \n@@ -25,34 +22,5 @@ class TestStringMethods(unittest.TestCase):\n         except UnicodeEncodeError:\n             self.fail(\"Unicode print error\")\n \n-    def test_return_correct_commit_hash(self):\n-        # Start at commit d15627104d07846ac2914a976e8e347a663bbd9b, which \n-        # is immediately followed by a secret inserting commit:\n-        # https://github.com/dxa4481/truffleHog/commit/9ed54617547cfca783e0f81f8dc5c927e3d1e345\n-        since_commit = 'd15627104d07846ac2914a976e8e347a663bbd9b'\n-        commit_w_secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\n-        cross_valdiating_commit_w_secret_comment = 'OH no a secret'\n-\n-        json_result = ''\n-        tmp_stdout = io.StringIO()\n-        bak_stdout = sys.stdout\n-\n-        # Redirect STDOUT, run scan and re-establish STDOUT\n-        sys.stdout = tmp_stdout\n-        try:\n-            truffleHog.find_strings(\"https://github.com/dxa4481/truffleHog.git\", \n-                since_commit=since_commit, printJson=True, surpress_output=False)\n-        finally:\n-            sys.stdout = bak_stdout\n-\n-        json_result_list = tmp_stdout.getvalue().split('\\n')\n-        results = [json.loads(r) for r in json_result_list if bool(r.strip())]\n-        filtered_results = list(filter(lambda r: r['commitHash'] == commit_w_secret, results))\n-        self.assertEqual(1, len(filtered_results))\n-        self.assertEqual(commit_w_secret, filtered_results[0]['commitHash'])\n-        # Additionally, we cross-validate the commit comment matches the expected comment\n-        self.assertEqual(cross_valdiating_commit_w_secret_comment, filtered_results[0]['commit'].strip())\n-\n-\n if __name__ == '__main__':\n     unittest.main()\n", "path": "test_all.py", "printDiff": "\u001b[93msecret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'\u001b[0m", "reason": "Generic Secret", "stringsFound": ["secret = '9ed54617547cfca783e0f81f8dc5c927e3d1e345'"]}
{"branch": "origin/dev", "commit": "Merge branch 'dev' of github.com:dxa4481/truffleHog into dev\n", "commitHash": "1e1974b2eb888cdf876623973301e2e1a0faf8cc", "date": "2018-05-13 19:52:22", "diff": "@@ -26,29 +26,20 @@ pip install truffleHog\n \n ## Customizing\n \n-Custom regexes can be added with the following flag `--rules /path/to/rules`. This should be a json file of the following format:\n+Custom regexes can be added to the following file:\n ```\n-{\n-    \"RSA private key\": \"-----BEGIN EC PRIVATE KEY-----\"\n-}\n+truffleHog/truffleHog/regexChecks.py\n ```\n Things like subdomain enumeration, s3 bucket detection, and other useful regexes highly custom to the situation can be added.\n \n Feel free to also contribute high signal regexes upstream that you think will benifit the community. Things like Azure keys, Twilio keys, Google Compute keys, are welcome, provided a high signal regex can be constructed.\n \n-Trufflehog's base rule set sources from https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json\n-\n ## How it works\n This module will go through the entire commit history of each branch, and check each diff from each commit, and check for secrets. This is both by regex and by entropy. For entropy checks, trufflehog will evaluate the shannon entropy for both the base64 char set and hexidecimal char set for every blob of text greater than 20 characters comprised of those character sets in each diff. If at any point a high entropy string >20 characters is detected, it will print to the screen.\n \n ## Help\n \n ```\n-usage: trufflehog [-h] [--json] [--regex] [--rules RULES]\n-                  [--entropy DO_ENTROPY] [--since_commit SINCE_COMMIT]\n-                  [--max_depth MAX_DEPTH]\n-                  git_url\n-\n Find secrets hidden in the depths of git.\n \n positional arguments:\n@@ -58,7 +49,6 @@ optional arguments:\n   -h, --help            show this help message and exit\n   --json                Output in JSON\n   --regex               Enable high signal regex checks\n-  --rules RULES         Ignore default regexes and source from json list file\n   --entropy DO_ENTROPY  Enable entropy checks\n   --since_commit SINCE_COMMIT\n                         Only scan from a given commit hash\n", "path": "README.md", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "surpressing output\n", "commitHash": "09824b0c9f512c548a3de1d564453e092d5d7077", "date": "2018-05-13 19:52:07", "diff": "@@ -26,20 +26,29 @@ pip install truffleHog\n \n ## Customizing\n \n-Custom regexes can be added to the following file:\n+Custom regexes can be added with the following flag `--rules /path/to/rules`. This should be a json file of the following format:\n ```\n-truffleHog/truffleHog/regexChecks.py\n+{\n+    \"RSA private key\": \"-----BEGIN EC PRIVATE KEY-----\"\n+}\n ```\n Things like subdomain enumeration, s3 bucket detection, and other useful regexes highly custom to the situation can be added.\n \n Feel free to also contribute high signal regexes upstream that you think will benifit the community. Things like Azure keys, Twilio keys, Google Compute keys, are welcome, provided a high signal regex can be constructed.\n \n+Trufflehog's base rule set sources from https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json\n+\n ## How it works\n This module will go through the entire commit history of each branch, and check each diff from each commit, and check for secrets. This is both by regex and by entropy. For entropy checks, trufflehog will evaluate the shannon entropy for both the base64 char set and hexidecimal char set for every blob of text greater than 20 characters comprised of those character sets in each diff. If at any point a high entropy string >20 characters is detected, it will print to the screen.\n \n ## Help\n \n ```\n+usage: trufflehog [-h] [--json] [--regex] [--rules RULES]\n+                  [--entropy DO_ENTROPY] [--since_commit SINCE_COMMIT]\n+                  [--max_depth MAX_DEPTH]\n+                  git_url\n+\n Find secrets hidden in the depths of git.\n \n positional arguments:\n@@ -49,6 +58,7 @@ optional arguments:\n   -h, --help            show this help message and exit\n   --json                Output in JSON\n   --regex               Enable high signal regex checks\n+  --rules RULES         Ignore default regexes and source from json list file\n   --entropy DO_ENTROPY  Enable entropy checks\n   --since_commit SINCE_COMMIT\n                         Only scan from a given commit hash\n", "path": "README.md", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Update README.md", "commitHash": "9def4f5eb76dc43c8d68b40940a473546b71c97a", "date": "2018-05-06 19:07:07", "diff": "@@ -26,29 +26,20 @@ pip install truffleHog\n \n ## Customizing\n \n-Custom regexes can be added with the following flag `--rules /path/to/rules`. This should be a json file of the following format:\n+Custom regexes can be added to the following file:\n ```\n-{\n-    \"RSA private key\": \"-----BEGIN EC PRIVATE KEY-----\"\n-}\n+truffleHog/truffleHog/regexChecks.py\n ```\n Things like subdomain enumeration, s3 bucket detection, and other useful regexes highly custom to the situation can be added.\n \n Feel free to also contribute high signal regexes upstream that you think will benifit the community. Things like Azure keys, Twilio keys, Google Compute keys, are welcome, provided a high signal regex can be constructed.\n \n-Trufflehog's base rule set sources from https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json\n-\n ## How it works\n This module will go through the entire commit history of each branch, and check each diff from each commit, and check for secrets. This is both by regex and by entropy. For entropy checks, trufflehog will evaluate the shannon entropy for both the base64 char set and hexidecimal char set for every blob of text greater than 20 characters comprised of those character sets in each diff. If at any point a high entropy string >20 characters is detected, it will print to the screen.\n \n ## Help\n \n ```\n-usage: trufflehog [-h] [--json] [--regex] [--rules RULES]\n-                  [--entropy DO_ENTROPY] [--since_commit SINCE_COMMIT]\n-                  [--max_depth MAX_DEPTH]\n-                  git_url\n-\n Find secrets hidden in the depths of git.\n \n positional arguments:\n@@ -58,7 +49,6 @@ optional arguments:\n   -h, --help            show this help message and exit\n   --json                Output in JSON\n   --regex               Enable high signal regex checks\n-  --rules RULES         Ignore default regexes and source from json list file\n   --entropy DO_ENTROPY  Enable entropy checks\n   --since_commit SINCE_COMMIT\n                         Only scan from a given commit hash\n", "path": "README.md", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Changing regexes to install regex package\n", "commitHash": "58690fe2e89d0aef28ae313c8554941104071bb1", "date": "2018-04-14 19:26:10", "diff": "@@ -0,0 +1,19 @@\n+import re\n+\n+regexes = {\n+    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n+    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n+    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+}\n+\n", "path": "truffleHog/defaultRegexes/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Changing regexes to install regex package\n", "commitHash": "58690fe2e89d0aef28ae313c8554941104071bb1", "date": "2018-04-14 19:26:10", "diff": "@@ -0,0 +1,19 @@\n+import re\n+\n+regexes = {\n+    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n+    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n+    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+}\n+\n", "path": "truffleHog/defaultRegexes/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Changing regexes to install regex package\n", "commitHash": "58690fe2e89d0aef28ae313c8554941104071bb1", "date": "2018-04-14 19:26:10", "diff": "@@ -0,0 +1,19 @@\n+import re\n+\n+regexes = {\n+    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n+    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n+    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+}\n+\n", "path": "truffleHog/defaultRegexes/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Changing regexes to install regex package\n", "commitHash": "58690fe2e89d0aef28ae313c8554941104071bb1", "date": "2018-04-14 19:26:10", "diff": "@@ -0,0 +1,19 @@\n+import re\n+\n+regexes = {\n+    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n+    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n+    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+}\n+\n", "path": "truffleHog/defaultRegexes/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Changing regexes to install regex package\n", "commitHash": "58690fe2e89d0aef28ae313c8554941104071bb1", "date": "2018-04-14 19:26:10", "diff": "@@ -0,0 +1,19 @@\n+import re\n+\n+regexes = {\n+    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n+    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n+    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+}\n+\n", "path": "truffleHog/defaultRegexes/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "adding configurable rules and making the library import better\n", "commitHash": "5717db6fa94ea13244edfa37f9f62d1856db8aca", "date": "2018-01-14 23:56:27", "diff": "@@ -1,3 +0,0 @@\n-{\n-    \"RSA private key\": \"-----BEGIN EC PRIVATE KEY-----\"\n-}\n", "path": "testRules.json", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "updating regex checks\n", "commitHash": "94c6d085bc2db0ab0ed7d8c13a4401001ed00777", "date": "2017-12-10 21:56:38", "diff": "@@ -1,7 +1,9 @@\n import re\n \n regexes = {\n-    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n     \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n@@ -9,10 +11,14 @@ regexes = {\n     \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n     \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n     \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "updating regex checks\n", "commitHash": "94c6d085bc2db0ab0ed7d8c13a4401001ed00777", "date": "2017-12-10 21:56:38", "diff": "@@ -1,7 +1,9 @@\n import re\n \n regexes = {\n-    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n     \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n@@ -9,10 +11,14 @@ regexes = {\n     \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n     \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n     \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "updating regex checks\n", "commitHash": "94c6d085bc2db0ab0ed7d8c13a4401001ed00777", "date": "2017-12-10 21:56:38", "diff": "@@ -1,7 +1,9 @@\n import re\n \n regexes = {\n-    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n     \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n@@ -9,10 +11,14 @@ regexes = {\n     \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n     \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n     \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "updating regex checks\n", "commitHash": "94c6d085bc2db0ab0ed7d8c13a4401001ed00777", "date": "2017-12-10 21:56:38", "diff": "@@ -1,7 +1,9 @@\n import re\n \n regexes = {\n-    #\"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n     \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n@@ -9,10 +11,14 @@ regexes = {\n     \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n     \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[[\\'|\"]0-9a-zA-Z]{35,40}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n+    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n     \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "Merge https://github.com/carnal0wnage/truffleHog-1 into dev\n", "commitHash": "4e1884de29ccc5ca2a9a6c3c19fe912a4ae60ea1", "date": "2017-12-10 21:49:19", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge https://github.com/carnal0wnage/truffleHog-1 into dev\n", "commitHash": "4e1884de29ccc5ca2a9a6c3c19fe912a4ae60ea1", "date": "2017-12-10 21:49:19", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge https://github.com/carnal0wnage/truffleHog-1 into dev\n", "commitHash": "4e1884de29ccc5ca2a9a6c3c19fe912a4ae60ea1", "date": "2017-12-10 21:49:19", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge https://github.com/carnal0wnage/truffleHog-1 into dev\n", "commitHash": "4e1884de29ccc5ca2a9a6c3c19fe912a4ae60ea1", "date": "2017-12-10 21:49:19", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Merge https://github.com/carnal0wnage/truffleHog-1 into dev\n", "commitHash": "4e1884de29ccc5ca2a9a6c3c19fe912a4ae60ea1", "date": "2017-12-10 21:49:19", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "Add coverage\n", "commitHash": "bbb1392f94ddf21ae18bce19f63f5abb309657c7", "date": "2017-12-10 20:25:01", "diff": "@@ -2,13 +2,24 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Add coverage\n", "commitHash": "bbb1392f94ddf21ae18bce19f63f5abb309657c7", "date": "2017-12-10 20:25:01", "diff": "@@ -2,13 +2,24 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Add coverage\n", "commitHash": "bbb1392f94ddf21ae18bce19f63f5abb309657c7", "date": "2017-12-10 20:25:01", "diff": "@@ -2,13 +2,24 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Add coverage\n", "commitHash": "bbb1392f94ddf21ae18bce19f63f5abb309657c7", "date": "2017-12-10 20:25:01", "diff": "@@ -2,13 +2,24 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Add coverage\n", "commitHash": "bbb1392f94ddf21ae18bce19f63f5abb309657c7", "date": "2017-12-10 20:25:01", "diff": "@@ -2,13 +2,24 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n+    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n+    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n+    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n+    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n+    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n+    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n+    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n+    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n+    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n+    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "Update regexChecks.py", "commitHash": "b6073aafed119255301571cf8ff1ea43ede87c95", "date": "2017-12-08 17:38:45", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Update regexChecks.py", "commitHash": "b6073aafed119255301571cf8ff1ea43ede87c95", "date": "2017-12-08 17:38:45", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN OPENSSH PRIVATE KEY-----\u001b[0m", "reason": "SSH (OPENSSH) private key", "stringsFound": ["-----BEGIN OPENSSH PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Update regexChecks.py", "commitHash": "b6073aafed119255301571cf8ff1ea43ede87c95", "date": "2017-12-08 17:38:45", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN DSA PRIVATE KEY-----\u001b[0m", "reason": "SSH (DSA) private key", "stringsFound": ["-----BEGIN DSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Update regexChecks.py", "commitHash": "b6073aafed119255301571cf8ff1ea43ede87c95", "date": "2017-12-08 17:38:45", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "Update regexChecks.py", "commitHash": "b6073aafed119255301571cf8ff1ea43ede87c95", "date": "2017-12-08 17:38:45", "diff": "@@ -2,24 +2,13 @@ import re\n \n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Generic AppSecret\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*.[0-9a-zA-Z]{32,45}'),\n-    \"Generic AppSecret 2\": re.compile('[a|A][p|P][p|P][s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"SSH (OPENSSH) private key\": re.compile('-----BEGIN OPENSSH PRIVATE KEY-----'),\n-    \"SSH (DSA) private key\": re.compile('-----BEGIN DSA PRIVATE KEY-----'),\n-    \"SSH (EC) private key\": re.compile('-----BEGIN EC PRIVATE KEY-----'),\n-    \"PGP private key block\": re.compile('-----BEGIN PGP PRIVATE KEY BLOCK-----'),\n     \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Facebook Oauth 2\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*.[0-9a-f]{32}'),\n     \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n-    \"Twitter Oauth 2\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*.[0-9a-zA-Z]{35,44}'),\n-    \"GitHub\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[0-9a-zA-Z]{35,40}'),\n-    \"GitHub 2\": re.compile('[g|G][i|I][t|T][h|H][u|U][b|B].*[c|C][l|L][i|I][e|E][n|N][T|T][s|S][e|E][c|C][r|R][e|E][t|T].*[0-9a-zA-Z]{35,40}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"Google Oauth 2\": re.compile('[c|C][l|L][i|I][e|E][n|N][T|T][_][s|S][e|E][c|C][r|R][e|E][t|T].*[:].*[a-zA-Z0-9-_]{24}'),\n     \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n     \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]'),\n+    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN PGP PRIVATE KEY BLOCK-----\u001b[0m", "reason": "PGP private key block", "stringsFound": ["-----BEGIN PGP PRIVATE KEY BLOCK-----"]}
{"branch": "origin/dev", "commit": "tweaking regex\n", "commitHash": "0653620019e670ac1fe2565ca87eb2297f3cc01a", "date": "2017-10-31 03:06:22", "diff": "@@ -4,11 +4,9 @@ regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n     \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\\'|\"][0-9a-f]{32}[\\'|\"]'),\n-    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\\'|\"][0-9a-zA-Z]{35,44}[\\'|\"]'),\n+    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[0-9a-f]{32}'),\n+    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[0-9a-zA-Z]{35,44}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"AWS API Key\": re.compile('AKIA[0-9A-Z]{16}'),#[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}'),\n-    \"Heroku API Key\": re.compile('[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'),\n-    \"Generic Secret\": re.compile('[s|S][e|E][c|C][r|R][e|E][t|T].*[\\'|\"][0-9a-zA-Z]{32,45}[\\'|\"]')\n+    \"AWS API Key\": re.compile('[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "adding some more signals\n", "commitHash": "e1d329e58ae387b1b9a2599a9b418ed0aa71a73e", "date": "2017-10-11 06:15:41", "diff": "@@ -3,10 +3,7 @@ import re\n regexes = {\n     \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n     \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n-    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----'),\n-    \"Facebook Oauth\": re.compile('[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[0-9a-f]{32}'),\n-    \"Twitter Oauth\": re.compile('[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[0-9a-zA-Z]{35,44}'),\n     \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"AWS API Key\": re.compile('[a|A][w|W][s|S].*AKIA[0-9A-Z]{16}')\n+    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----')\n }\n \n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----", "-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/dev", "commit": "adding regex support\n", "commitHash": "8ab1422ed7e109b9fc1dd012bfd844e8e0293fbb", "date": "2017-10-08 10:25:35", "diff": "@@ -1,9 +0,0 @@\n-import re\n-\n-regexes = {\n-    \"Internal subdomain\": re.compile('([a-z0-9]+[.]*supersecretinternal[.]com)'),\n-    \"Slack Token\": re.compile('(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'),\n-    \"Google Oauth\": re.compile('(\"client_secret\":\"[a-zA-Z0-9-_]{24}\")'),\n-    \"RSA private key\": re.compile('-----BEGIN RSA PRIVATE KEY-----')\n-}\n-\n", "path": "truffleHog/regexChecks.py", "printDiff": "\u001b[93m-----BEGIN RSA PRIVATE KEY-----\u001b[0m", "reason": "RSA private key", "stringsFound": ["-----BEGIN RSA PRIVATE KEY-----"]}
{"branch": "origin/paths", "commit": "adding configurable rules and making the library import better\n", "commitHash": "5717db6fa94ea13244edfa37f9f62d1856db8aca", "date": "2018-01-14 23:56:27", "diff": "@@ -1,3 +0,0 @@\n-{\n-    \"RSA private key\": \"-----BEGIN EC PRIVATE KEY-----\"\n-}\n", "path": "testRules.json", "printDiff": "\u001b[93m-----BEGIN EC PRIVATE KEY-----\u001b[0m", "reason": "SSH (EC) private key", "stringsFound": ["-----BEGIN EC PRIVATE KEY-----"]}
