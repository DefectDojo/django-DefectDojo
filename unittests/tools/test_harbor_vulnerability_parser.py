from ..dojo_test_case import DojoTestCase, get_unit_tests_path
from dojo.tools.crashtest_security.parser import CrashtestSecurityParser
from dojo.models import Test


class TestCrashtestSecurityParser(DojoTestCase):
    def test_crashtest_security_json_parser_empty_file_has_no_findings(self):
        testfile = open("unittests/scans/crashtest_security/empty.json")
        parser = CrashtestSecurityParser()
        findings = parser.get_findings(testfile, Test())
        testfile.close()
        self.assertEqual(0, len(findings))

    def test_crashtest_security_json_parser_full_file_has_many_findings(self):
        testfile = open("unittests/scans/crashtest_security/full.json")
        parser = CrashtestSecurityParser()
        findings = parser.get_findings(testfile, Test())
        testfile.close()
        self.assertEqual(73, len(findings))
        finding = findings[0]
        self.assertEqual(finding.title, "CVE-YYYY-NNN - package (exploitable-version)")
        self.assertEqual(
            finding.description,
            "This is a sample description for sample description from Harbor API.",
        )
        self.assertEqual(finding.severity, 'Info')
        self.assertEqual(finding.mitigation, 'Upgrade package to version unexploitable-version')
        self.assertEqual(1, len(finding.unsaved_vulnerability_ids))
        self.assertEqual(finding.unsaved_vulnerability_ids[0], 'CVE-YYYY-NNN')
        self.assertEqual(finding.component_name, 'package')
        self.assertEqual(finding.component_version, 'exploitable-version')
        self.assertEqual(finding.references, 'https://github.com/goharbor/harbor\n')

    def test_crashtest_security_json_parser_extracted_data_file_has_many_findings(self):
        testfile = open(
            get_unit_tests_path() + "/scans/crashtest_security/data_extracted.json"
        )
        parser = CrashtestSecurityParser()
        findings = parser.get_findings(testfile, Test())
        testfile.close()
        self.assertEqual(73, len(findings))