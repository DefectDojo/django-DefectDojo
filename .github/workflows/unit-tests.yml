name: Unit tests
# pull requests:
# push:
#      run on every push, which is when something gets merged also
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - dev

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      # disabled login as it leaves plain text credentials behind

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set unit-test mode
        run: docker/setEnv.sh unit_tests_cicd

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # - name: Get Date
      #   id: get-date
      #   run: |
      #     echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      #   shell: bash

      # build with docker so we can use layer caching

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: defectdojo/defectdojo-django:latest
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile.django
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: defectdojo/defectdojo-nginx:latest
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile.nginx
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # but run with docker-compose

      # phased startup so we can use the exit code from integrationtest container
      - name: Start MySQL
        run: docker-compose up -d

      - name: Initialize
        run: docker-compose up --exit-code-from initializer initializer

      - name: Unit tests
        run: docker-compose up --exit-code-from uwsgi uwsgi

      - name: Logs
        if: failure()
        run: docker-compose logs --tail="2500" uwsgi

      - name: Shutdown
        if: always()
        run: docker-compose down
