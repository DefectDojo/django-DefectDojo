name: toolkit-unit-tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']  # Матрица версий Python
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found! Skipping dependency installation."
          fi

      - name: Lint with flake8
        run: |
          if [ -f "setup.cfg" ] || [ -f ".flake8" ]; then
            pip install flake8
            flake8 .
          else
            echo "No lint configuration found! Skipping linting."
          fi

      - name: Run unit tests
        run: |
          pip install pytest
          pytest --junitxml=test-results.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Для доступа к секретам, если нужны

      - name: Upload test results
        if: always()  # Выполнить этот шаг всегда, независимо от успеха предыдущих шагов
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml
