name: Tag, release, docker

env:
  GIT_USERNAME: "DefectDojo release bot"
  GIT_EMAIL: "dojo-release-bot@users.noreply.github.com"
on:
  workflow_dispatch:
    inputs:
      # the actual branch that can be chosen on the UI is made irrelevant by further steps
      # because someone will forget one day to change it.
      release_number:
        description: 'Release version (x.y.z format)'
        required: true

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Configure git
        run: |
          git config --global user.name "${{ env.GIT_USERNAME }}"
          git config --global user.email "${{ env.GIT_EMAIL }}"
      - name: Create new tag ${{ github.event.inputs.release_number }}
        # at this point, the PR from the 1st workflow is merged into master.
        run: |
          git tag -a ${{ github.event.inputs.release_number }} -m "[bot] release ${{ github.event.inputs.release_number }}"
          git push origin ${{ github.event.inputs.release_number }}
      - name: Create release ${{ github.event.inputs.release_number }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_number }}  # this does not create a tag
          release_name: Release ${{ github.event.inputs.release_number }}
          body: |
            Fill in with release drafter information manually for now, then publish.
          draft: true
          prerelease: false
  job-build-matrix:
    needs: tag-and-release
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        # ref should be the tag name
        run: echo "::set-output name=matrix::{\"docker-image\":[\"django\",\"nginx\"],\"docker-tag\":[\"latest\",\"${{ github.event.inputs.release_number }}\"]}"
  job-build-and-push:
    needs: job-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.job-build-matrix.outputs.matrix)}}
    steps:
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.release_number }}
      - id: set-repo-org
        run: echo ::set-output name=repoorg::${GITHUB_REPOSITORY%%/*} | tr '[:upper:]' '[:lower:]'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push images
        env:
          REPO_ORG: ${{ steps.set-repo-org.outputs.repoorg }}
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: defectdojo/defectdojo-${{ matrix.docker-image}}:${{ matrix.docker-tag }}
          file: ./Dockerfile.${{ matrix.docker-image }}
          context: .
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
