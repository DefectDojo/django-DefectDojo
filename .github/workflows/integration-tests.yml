name: Integration tests
# pull requests:
# push:
#      run on every push, which is when something gets merged also
on:
  pull_request:
  push:
    branches:
      - master
      - dev
      - release/**
      - hotfix/**

jobs:
  integration_tests:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set integration-test mode
        run: ln -s docker-compose.override.integration_tests.yml docker-compose.override.yml

      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      - run: docker-compose pull
      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@master
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Build the stack
        run: docker-compose build

      # phased startup so we can use the exit code from integrationtest container
      - name: Start MySQL
        run: docker-compose up -d

      - name: Initialize
        run: docker-compose up --exit-code-from initializer initializer

      - name: Start Dojo
        # implicity starts uwsgi and rabbitmq
        run: docker-compose up -d nginx celerybeat celeryworker

      - name: Integration tests
        run: docker-compose up --exit-code-from integrationtest integrationtest

      - name: Logs
        if: failure()
        run: docker-compose logs --tail="2500" uwsgi

      - name: Shutdown
        if: always()
        run: docker-compose down
