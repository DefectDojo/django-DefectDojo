name: Integration tests

on:
  workflow_call:

jobs:
  integration_tests:
    # run tests with docker-compose
    name: User Interface Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: [
          "tests/finding_test.py",
          "tests/report_builder_test.py",
          "tests/notes_test.py",
          "tests/regulations_test.py",
          "tests/product_type_test.py",
          "tests/product_test.py",
          "tests/endpoint_test.py",
          "tests/engagement_test.py",
          "tests/environment_test.py",
          "tests/test_test.py",
          "tests/user_test.py",
          "tests/group_test.py",
          "tests/product_group_test.py",
          "tests/product_type_group_test.py",
          "tests/product_member_test.py",
          "tests/product_type_member_test.py",
          "tests/ibm_appscan_test.py",
          "tests/search_test.py",
          "tests/file_test.py",
          "tests/dedupe_test.py",
          "tests/check_various_pages.py",
          "tests/notifications_test.py",
          "tests/tool_config.py",
          "openapi-validatator",
        ]
        profile: ["mysql-rabbitmq", "postgres-redis"]
        os: [alpine, debian]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # load docker images from build jobs
      - name: Load images from artifacts
        uses: actions/download-artifact@v3

      - name: Load docker images
        run: |-
             docker load -i nginx/nginx-${{ matrix.os }}_img
             docker load -i django/django-${{ matrix.os }}_img
             docker load -i integration-tests/integration-tests-debian_img
             docker images

      - name: Set integration-test mode
        run: ln -s docker-compose.override.integration_tests.yml docker-compose.override.yml

      # phased startup with MySQL and RabbitMQ so we can use the exit code from integrationtest container
      - name: Start Dojo MySQL + RabbitMQ
        if: matrix.profile == 'mysql-rabbitmq'
        run: docker-compose --profile ${{ matrix.profile }} --env-file ./docker/environments/${{ matrix.profile }}.env up --no-deps -d mysql nginx celerybeat celeryworker mailhog uwsgi rabbitmq
        env:
          DJANGO_VERSION: ${{ matrix.os }}
          NGINX_VERSION: ${{ matrix.os }}

      - name: Start Dojo PostgreSQL + Redis
        if: matrix.profile == 'postgres-redis'
        run: docker-compose --profile ${{ matrix.profile }} --env-file ./docker/environments/${{ matrix.profile }}.env up --no-deps -d postgres nginx celerybeat celeryworker mailhog uwsgi redis
        env:
          DJANGO_VERSION: ${{ matrix.os }}
          NGINX_VERSION: ${{ matrix.os }}

      - name: Initialize
        run: docker-compose --profile ${{ matrix.profile }} --env-file ./docker/environments/${{ matrix.profile }}.env up --no-deps --exit-code-from initializer initializer
        env:
          DJANGO_VERSION: ${{ matrix.os }}
          NGINX_VERSION: ${{ matrix.os }}

      - name: Integration tests
        run: docker-compose --profile ${{ matrix.profile }} --env-file ./docker/environments/${{ matrix.profile }}.env up --no-deps --exit-code-from integration-tests integration-tests
        env:
          DD_INTEGRATION_TEST_FILENAME: ${{ matrix.test-case }}
          INTEGRATION_TESTS_VERSION: debian

      - name: Logs
        if: always()
        run: docker-compose --profile ${{ matrix.profile }} --env-file ./docker/environments/${{ matrix.profile }}.env logs --tail="2500"

      - name: Shutdown
        if: always()
        run: docker-compose --profile ${{ matrix.profile }} --env-file ./docker/environments/${{ matrix.profile }}.env down
