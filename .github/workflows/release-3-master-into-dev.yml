name: "Release-3: PR for merging master into dev"

env:
  GIT_USERNAME: "DefectDojo release bot"
  GIT_EMAIL: "dojo-release-bot@users.noreply.github.com"
on:
  workflow_dispatch:
    inputs:
      # the actual branch that can be chosen on the UI is made irrelevant by further steps
      # because someone will forget one day to change it.
      release_number_new:
        description: "Newly just released version (x.y.z format)"
        required: true
      release_number_dev:
        description: "Future release version for dev branch (x.y.z-dev format)"
        required: true

jobs:
  create_pr_for_merge_back_into_dev:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: master
      
      - name: Create merge back branch
        run: |
          echo "NEW_BRANCH=master-into-dev/${{ github.event.inputs.release_number_new }}-${{ github.event.inputs.release_number_dev }}" >> $GITHUB_ENV
      
      - name: Configure git
        run: |
          git config --global user.name "${{ env.GIT_USERNAME }}"
          git config --global user.email "${{ env.GIT_EMAIL }}"
      
      - name: Push new branch
        run: git push origin HEAD:${NEW_BRANCH}
      
      - name: Checkout new branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.NEW_BRANCH }}
      
      - name: Update version numbers in key files
        run: |
          sed -ri "s/__version__ = '.*'/__version__ = '${{ github.event.inputs.release_number_dev }}'/" dojo/__init__.py
          sed -ri "s/appVersion: \".*\"/appVersion: \"${{ github.event.inputs.release_number_dev }}\"/" helm/defectdojo/Chart.yaml
          sed -ri "s/\"version\": \".*\"/\"version\": \"${{ github.event.inputs.release_number_dev }}\"/" components/package.json
          CURRENT_CHART_VERSION=$(grep -oP 'version: (\K\S*)?' helm/defectdojo/Chart.yaml | head -1)
          sed -ri "0,/version/s/version: \S+/$(echo "version: $CURRENT_CHART_VERSION" | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{$NF=sprintf("%0*d", length($NF), ($NF+1)); print}')-dev/" helm/defectdojo/Chart.yaml
      
      - name: Check numbers
        run: |
          grep version dojo/__init__.py
          grep appVersion helm/defectdojo/Chart.yaml
          grep version components/package.json
      
      - name: Push version changes
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          commit_user_name: "${{ env.GIT_USERNAME }}"
          commit_user_email: "${{ env.GIT_EMAIL }}"
          commit_author: "${{ env.GIT_USERNAME }} <${{ env.GIT_EMAIL }}>"
          commit_message: "Update versions in application files"
          branch: ${{ env.NEW_BRANCH }}
      - id: set-repo-org
        run: echo "repoorg=${GITHUB_REPOSITORY%%/*}"  >> $GITHUB_ENV
      
      - name: Create Pull Request
        env:
          REPO_ORG: ${{ env.repoorg }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.pulls.create({
              owner: '${{ env.REPO_ORG }}',
              repo: 'django-DefectDojo',
              title: 'Release: Merge back ${{ github.event.inputs.release_number_new }} into dev from: ${{ env.NEW_BRANCH }}',
              body: `Release triggered by \`${ process.env.GITHUB_ACTOR }\``,
              head: '${{ env.NEW_BRANCH }}',
              base: 'dev'
            })
