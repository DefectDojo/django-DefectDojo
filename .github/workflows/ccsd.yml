name: Bild Deploy Pipeline


on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  SERVER_IP: 5.129.250.92
  DEPLOY_USER: root
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ${{ github.repository }}

jobs:
  
  build:
    name: Build Application
    #needs: sast
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker
        run: |
          docker --version
          docker info
      
      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} --password-stdin
      
      - name: Use nginx image as base (simple alternative)
        run: |
          docker pull nginx:alpine
        
          docker tag nginx:alpine ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker tag nginx:alpine ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          echo "✓ Nginx image successfully pushed to GHCR"
      
      - name: Verify image
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          echo "✓ Image verification successful"

  deploy:
    name: Deploy to Server
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: 5.129.250.92
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/
            rm -rf diplom_defect

            echo "Downloading repository as ZIP..."
            git clone https://github.com/nasekaylovm-cyber/diplom_defect/archive/refs/heads/main.zip
            unzip repo.zip
            mv diplom_defect-main diplom_defect
            rm repo.zip
            
            cd diplom_defect
            docker compose build
            sleep 1000
            docker-compose up -d
            sleep 1000
            echo "Deployment done! Containers:"
   
  dast:  
    name: DAST Analysis
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://5.129.250.92'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          
      - name: Upload DAST results
        uses: actions/upload-artifact@v3
        with:
          name: dast-results
          path: zap-report.html



