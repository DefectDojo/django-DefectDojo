
# code: language=Dockerfile

FROM openapitools/openapi-generator-cli:v6.6.0@sha256:54381220aecf2e77bb4b6694c4e1a03e733b49453292cd1af6f48b510f1f008a as openapitools
FROM python:3.11.4-slim-bullseye@sha256:9b4d90af2003eef5d862f8118d8645d37d170402645a09e48241a3e492a0d4dc as build
WORKDIR /app
RUN \
  apt-get -y update && \
  apt-get -y install \
    git \
    wget \
    curl \
    unzip \
    gpg \
    default-jre-headless \
    jq \
    && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists && \
  true

# Installing Google Chrome browser
RUN \
  curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add && \
  echo "deb [arch=amd64]  http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list && \
  apt-get -y update && \
  apt-get -y install \
    google-chrome-stable \
  && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists && \
  true

RUN pip install --no-cache-dir selenium==4.9.0 requests

# Installing Chromedriver
WORKDIR /opt/chrome-driver
RUN \
  chrome_version=$(apt-cache show google-chrome-stable | grep Version | awk '{print $2}' | cut -d '-' -f 1) && \
  chrome_version_blob=$(curl -k https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json | jq ".versions[] | select(.version==\"$chrome_version\")") && \
  chromedriver_url=$(echo $chrome_version_blob | jq -r ".downloads.chromedriver[] | select(.platform==\"linux64\") | .url") && \
  wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/115.0.5790.98/linux64/chromedriver-linux64.zip && \
  unzip -j chromedriver-linux64.zip chromedriver-linux64/chromedriver && \
  rm -rf chromedriver-linux64.zip && \
  chmod -R 0755 .
WORKDIR /app

# install openapi-generator-cli
COPY --from=openapitools /opt/openapi-generator/modules/openapi-generator-cli/target/openapi-generator-cli.jar /usr/local/bin/openapi-generator-cli.jar

COPY docker/wait-for-it.sh \
  docker/entrypoint-integration-tests.sh \
  /

COPY tests/ ./tests/

RUN chmod -R 0777 /app

ARG uid=1001
USER ${uid}
ENV \
  DD_ADMIN_USER=admin \
  DD_ADMIN_PASSWORD='' \
  DD_BASE_URL="http://localhost:8080/"
CMD ["/entrypoint-integration-tests.sh"]
