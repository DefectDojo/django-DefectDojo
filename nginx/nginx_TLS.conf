worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
    worker_connections    32;
}

http {
    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    client_max_body_size 800m;
    sendfile                        on;
    keepalive_timeout 65;

  upstream uwsgi_server {
    include /run/uwsgi_server;
  }

    server {
        listen                      8080;
        location / {
            return                 301 https://$host$request_uri:8083;
        }
    }

    server {
        listen                      8083 ssl;
        server_name                 your.servername.com;
        ssl_certificate             /yourCertificate.cer;
        ssl_certificate_key         /yourPrivateKey.key;
        ssl_session_cache           builtin:1000  shared:SSL:10m;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers                 HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers   on;

        location = /50x.html {
            root                    /usr/share/nginx/html;
        }

    location /static {
      alias /usr/share/nginx/html/static;
        }

    location / {
      include /run/uwsgi_pass;
      include /etc/nginx/wsgi_params;
      uwsgi_read_timeout 1800;
      
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # enable this if and only if you use HTTPS, this helps to
      # set the proper protocol for doing redirects:
      proxy_set_header X-Forwarded-Proto $scheme;

      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
    }
    error_page 500 502 503 504 /50x.html;

    }
}