# code: language=Dockerfile

# The code for the build image should be idendical with the code in
# Dockerfile.django to use the caching mechanism of Docker.

FROM python:3.5.9-buster@sha256:1baef6be00b82fbd77f1b60ab227a1dbede6f23825ce1b7f1e9c6f7d1469a45c as build
WORKDIR /app
RUN \
  apt-get -y update && \
  apt-get -y install \
    dnsutils \
    default-mysql-client \
    postgresql-client \
    xmlsec1 \
    git \
    && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists && \
  true
COPY requirements.txt ./
RUN pip3 wheel --wheel-dir=/tmp/wheels -r ./requirements.txt

FROM build AS collectstatic

USER root
ENV \
  # This will point yarn to whatever version of node you decide to use
  # due to the use of nodejs instead of node name in some distros
  node="nodejs"
RUN \
  apt-get -y update && \
  apt-get -y install apt-transport-https ca-certificates && \
  curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
  curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
  echo "deb https://nightly.yarnpkg.com/debian/ nightly main" | tee /etc/apt/sources.list.d/yarn.list && \
  apt-get -y update && \
  apt-get -y install nodejs && \
  echo "$(node --version)" && \
  apt-get -y install --no-install-recommends yarn && \
  echo "$(yarn --version)" && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists && \
  true

RUN pip3 install \
	--no-cache-dir \
	--no-index \
  --find-links=/tmp/wheels \
	-r ./requirements.txt

COPY components/ ./components/
COPY manage.py ./
COPY dojo/ ./dojo/
RUN \
  cp dojo/settings/settings.dist.py dojo/settings/settings.py
RUN \
  cd components && \
  yarn && \
  cd .. && \
  python3 manage.py collectstatic --noinput && \
  true

FROM nginx:1.17.9@sha256:3936fb3946790d711a68c58be93628e43cbca72439079e16d154b5db216b58da
COPY --from=collectstatic /app/static/ /usr/share/nginx/html/static/
COPY wsgi_params nginx/nginx.conf nginx/nginx_TLS.conf /etc/nginx/
COPY docker/entrypoint-nginx.sh /
RUN \
  apt-get -y update && \
  apt-get -y install openssl && \
  apt-get clean && \
  chmod -R g=u /var/cache/nginx && \
  chmod -R g=u /var/run && \
  mkdir -p /etc/nginx/ssl && \
  chmod -R g=u /etc/nginx && \
  true
ENV \
  DD_UWSGI_PASS="uwsgi_server" \
  DD_UWSGI_HOST="uwsgi" \
  DD_UWSGI_PORT="3031" \
  GENERATE_TLS_CERTIFICATE="False" \
  USE_TLS="False" \
  NGINX_METRICS_ENABLED="False" \
  METRICS_HTTP_AUTH_USER="" \
  METRICS_HTTP_AUTH_PASSWORD=""
USER 1001
EXPOSE 8080
ENTRYPOINT ["/entrypoint-nginx.sh"]
