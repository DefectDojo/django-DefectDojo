# Generated by Django 4.1.13 on 2024-04-16 03:37

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):
    dependencies = [
         ("dojo", "0209_merge_acunetix"),
    ]

    operations = [
        migrations.CreateModel(
            name="TransferFinding",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Titile")),
                ("date", models.DateField(auto_now_add=True, verbose_name="Date")),
                (
                    "path",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="transfer_finding/%Y/%m/%d",
                        verbose_name="Proof",
                    ),
                ),
                ("notes", models.CharField(blank=True, max_length=2500)),
                (
                    "accepted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user that accepts the tranfer finding, The user must belong to the product whit contact",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accepted_by",
                        to="dojo.dojo_user",
                    ),
                ),
                (
                    "destination_engagement",
                    models.ForeignKey(
                        blank=True,
                        help_text="Destination Engagement",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destination_engagement",
                        to="dojo.engagement",
                    ),
                ),
                (
                    "destination_product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Destination Product name",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destination_product",
                        to="dojo.product",
                    ),
                ),
                (
                    "destination_product_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Destination Product Type Name",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destination_product_type",
                        to="dojo.product_type",
                    ),
                ),
                (
                    "origin_engagement",
                    models.ForeignKey(
                        blank=True,
                        help_text="Origin Engagement Name",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="origin_engagement",
                        to="dojo.engagement",
                    ),
                ),
                (
                    "origin_product",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Origin Product name",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="origin_product",
                        to="dojo.product",
                    ),
                ),
                (
                    "origin_product_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Origin Product Type",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="origin_product_type",
                        to="dojo.product_type",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="The person that Owner the Tranfer finding",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owner",
                        to="dojo.dojo_user",
                        verbose_name="Owner",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="notifications",
            name="transfer_finding",
            field=multiselectfield.db.fields.MultiSelectField(
                blank=True,
                choices=[
                    ("slack", "slack"),
                    ("msteams", "msteams"),
                    ("mail", "mail"),
                    ("alert", "alert"),
                ],
                default="alert",
                help_text="Send notification to the contacts of the product",
                max_length=24,
                verbose_name="Transfer Finding",
            ),
        ),
        migrations.AddField(
            model_name="system_settings",
            name="enable_transfer_finding",
            field=models.BooleanField(
                default=False,
                help_text="Enable transfer of findings between different product types",
                verbose_name="Enable Transfer Finding",
            ),
        ),
        migrations.AddField(
            model_name="system_settings",
            name="orphan_findings",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Name of the producttype that contains the orphan findings",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="finding",
            name="risk_status",
            field=models.CharField(
                choices=[
                    ("Risk Pending", "Risk Pending"),
                    ("Risk Rejected", "Risk Rejected"),
                    ("Risk Accepted", "Risk Accepted"),
                    ("Risk Active", "Risk Active"),
                    ("Transfer Pending", "Transfer Pending"),
                    ("Transfer Rejected", "Transfer Rejected"),
                    ("Transfer Accepted", "Transfer Accepted"),
                ],
                default="Risk Active",
                help_text="Denotes the type of finding status, (pending, rejected).",
                max_length=20,
                null=True,
                verbose_name="Risk Status",
            ),
        ),
        migrations.CreateModel(
            name="TransferFindingFinding",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "engagement_related",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="engagement_related",
                        to="dojo.finding",
                    ),
                ),
                (
                    "finding_related",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dojo.finding",
                        verbose_name="finding_related",
                    ),
                ),
                (
                    "findings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="findings",
                        to="dojo.finding",
                        verbose_name="Finding ID",
                    ),
                ),
                (
                    "transfer_findings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_findings",
                        to="dojo.transferfinding",
                        verbose_name="Transfer Finding",
                    ),
                ),
            ],
        ),
    ]
