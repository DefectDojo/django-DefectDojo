# Generated by Django 4.1.13 on 2024-02-10 02:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("dojo", "0196_product_type_environment_manager_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Transfer_Finding",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Titile")),
                (
                    "destination_product",
                    models.CharField(
                        blank=True, help_text="Product name", max_length=255, null=True
                    ),
                ),
                (
                    "destination_engagement",
                    models.CharField(
                        blank=True,
                        help_text="Engagement name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Transfer Pending", "Transfer Pending"),
                            ("Transfer Rejected", "Transfer Rejected"),
                            ("Transfer Accepted", "Transfer Accepted"),
                        ],
                        default="Transfer Pending",
                        max_length=100,
                        verbose_name="Status",
                    ),
                ),
                (
                    "origin_product_type",
                    models.CharField(
                        blank=True,
                        help_text="origin product type",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "origin_product",
                    models.CharField(
                        blank=True,
                        help_text=" Origin Product",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "origin_engagement",
                    models.CharField(
                        blank=True,
                        help_text="Origin Engagement",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "accepted_by",
                    models.CharField(
                        blank=True,
                        help_text="The user that accepts the tranfer finding, The user must belong to the product whit contact",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "path",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="transfer_finding/%Y/%m/%d",
                        verbose_name="Proof",
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The person that Owner the Tranfer finding",
                        max_length=200,
                        null=True,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "destination_product_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="product type name",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dojo.product_type",
                    ),
                ),
                (
                    "finding_id",
                    models.ManyToManyField(
                        to="dojo.finding", verbose_name="Finding ID"
                    ),
                ),
                ("notes", models.ManyToManyField(editable=False, to="dojo.notes")),
            ],
        ),
    ]
