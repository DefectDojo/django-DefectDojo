# Generated by Django 2.2.12 on 2020-04-05 16:35

from django.db import migrations, models
# import django.db.models.deletion
from tagging.registry import register as tag_register
import logging

logger = logging.getLogger(__name__)


class Migration(migrations.Migration):

    def copy_existing_tags_to_text_field(apps, schema_editor):
        # We can't import the models directly as it may be a newer
        # version than this migration expects. We use the historical version.
        logger.info('Migrating tags from django-tagging to django-tagulous. Enable DEBUG logging to find out more.')
        import tagulous.utils
        for model_name in ['product', 'test', 'finding', 'engagement', 'endpoint', 'finding_template', 'app_Analysis', 'objects']:
            model_class = apps.get_model('dojo', model_name)
            # the get_model returns a fake class proxy, which is not registered with django-tagging
            tag_register(model_class)

            for obj in model_class.objects.all():
                # logger.debug('%s:%s:%s', model_class, obj.id, obj)
                if obj.tags and obj.id == 41:
                    tags_as_string = tagulous.utils.render_tags(obj.tags.all())
                    logger.debug('%s:%s:%s: found tags: %s', model_class, obj.id, obj, tags_as_string)

                # logger.debug('%s:%s found tags: %s', model_class, obj.id, tags_as_string)
                # obj.tags_from_django_tagging = tags_as_string

        raise ValueError('fake error to fail migration')

    dependencies = [
        ('dojo', '0064_jira_refactor_populate'),
    ]

    operations = [
        migrations.AddField(
            model_name='app_analysis',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='finding',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='finding_template',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='objects',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.AddField(
            model_name='test',
            name='tags_from_django_tagging',
            field=models.TextField(blank=True, help_text='Temporary archive with tags from the previous tagging library we used'),
        ),
        migrations.RunPython(copy_existing_tags_to_text_field)

    ]
