import datetime
from django.test import TestCase

from dojo.models import Test, Finding
from dojo.tools.cyclonedx.parser import CycloneDXParser


class TestParser(TestCase):

    # def test_grype_report(self):
    #     with open("dojo/unittests/scans/cyclonedx/grype.xml") as file:
    #         parser = CycloneDXParser()
    #         findings = parser.get_findings(file, Test())
    #         self.assertEqual(634, len(findings))
    #         for finding in findings:
    #             self.assertIn(finding.severity, Finding.SEVERITIES)
    #             if "urn:uuid:06be2823-e8ff-4f98-9d25-3b15155fc7a2" == finding.unique_id_from_tool:
    #                 with self.subTest(i="urn:uuid:06be2823-e8ff-4f98-9d25-3b15155fc7a2"):
    #                     finding = findings[0]
    #                     self.assertEqual("CVE-2011-3374", finding.cve)
    #                     self.assertEqual("Low", finding.severity)
    #                     self.assertEqual("apt", finding.component_name)
    #                     self.assertEqual("1.8.2.1", finding.component_version)
    #                     self.assertEqual(datetime.datetime(2021, 3, 4, 12, 55, 50, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), finding.date)

    def test_spec1_report(self):
        """Test a report from the spec itself"""
        with open("dojo/unittests/scans/cyclonedx/spec1.xml") as file:
            parser = CycloneDXParser()
            findings = parser.get_findings(file, Test())
            self.assertEqual(1, len(findings))
            for finding in findings:
                self.assertIn(finding.severity, Finding.SEVERITIES)
                if "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.9" == finding.unique_id_from_tool:
                    with self.subTest(i="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.9"):
                        finding = findings[0]
                        self.assertEqual("CVE-2018-7489", finding.cve)
                        self.assertEqual("Critical", finding.severity)
                        self.assertIn(finding.cwe, [184, 502])
                        self.assertEqual("CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", finding.cvssv3)
                        self.assertEqual(9.8, finding.cvssv3_score)
                        self.assertEqual("jackson-databind", finding.component_name)
                        self.assertEqual("2.9.9", finding.component_version)

    def test_cyclonedx_bom_report(self):
        with open("dojo/unittests/scans/cyclonedx/cyclonedx_bom.xml") as file:
            parser = CycloneDXParser()
            findings = parser.get_findings(file, Test())
            self.assertEqual(73, len(findings))
            finding = findings[0]
            self.assertEqual("Info", finding.severity)
            self.assertEqual("asteval", finding.component_name)
            self.assertEqual("0.9.23", finding.component_version)

    def test_cyclonedx_jake_report(self):
        """Test a report generated by Jake"""
        with open("dojo/unittests/scans/cyclonedx/jake.xml") as file:
            parser = CycloneDXParser()
            findings = parser.get_findings(file, Test())
            self.assertEqual(204, len(findings))
            finding = findings[0]
            self.assertEqual("Info", finding.severity)
            self.assertEqual("yaspin", finding.component_name)
            self.assertEqual("0.16.0", finding.component_version)
