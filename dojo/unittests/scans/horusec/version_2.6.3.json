{
  "version": "v2.6.3",
  "id": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
  "repositoryID": "00000000-0000-0000-0000-000000000000",
  "repositoryName": "",
  "workspaceID": "00000000-0000-0000-0000-000000000000",
  "workspaceName": "",
  "status": "error",
  "errors": "{HORUSEC_CLI} Error Yarn returned an error: ERROR_RUNNING_YARN_AUDIT{\"type\":\"warning\",\"data\":\"package.json: No license field\"}\r\n{\"type\":\"warning\",\"data\":\"DefectDojo@2.4.0-dev: No license field\"}\r\n",
  "createdAt": "2021-10-19T17:09:18.054991155Z",
  "finishedAt": "2021-10-19T17:10:06.589153731Z",
  "analysisVulnerabilities": [
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589376368Z",
      "vulnerabilities": {
        "vulnerabilityID": "c5b8c19c-80e7-47c0-a493-edffd00c8337",
        "line": "20",
        "column": "15",
        "confidence": "MEDIUM",
        "file": "docker/entrypoint.sh",
        "code": "DD_ADMIN_PASSWORD=\"admin\"",
        "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "da68b2b043efad431c84d3f3ec3439ad53dd69f58a00d651138fef86aea1f989"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589377185Z",
      "vulnerabilities": {
        "vulnerabilityID": "d829cfdb-e361-42a3-90ce-bb9423ef318d",
        "line": "115",
        "column": "19",
        "confidence": "MEDIUM",
        "file": "Dockerfile.django",
        "code": "DD_CELERY_BROKER_PASSWORD=\"defectdojo\" \\",
        "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2bda97adb2bb87033542ee77fd90bb12b9c65b6b2751cc72c1c1cd4c96379b02"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589377997Z",
      "vulnerabilities": {
        "vulnerabilityID": "c43e1dcd-1393-4c81-b245-6bda091514b6",
        "line": "131",
        "column": "14",
        "confidence": "MEDIUM",
        "file": "Dockerfile.django",
        "code": "DD_DATABASE_PASSWORD=\"defectdojo\" \\",
        "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bf799f10bbc225a77c42966b341f7d4b2b2259ebb4f660fc86fa4e437b38da04"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589378801Z",
      "vulnerabilities": {
        "vulnerabilityID": "176efdbd-7904-4fec-be85-f2efc66c41ce",
        "line": "83",
        "column": "11",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "DD_UWSGI_PASS=\"uwsgi_server\" \\",
        "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fcf2dbc9f8b1a7b76551d92019ccd9fd625663ad41391aa645ce8d1fea1ca5af"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589379605Z",
      "vulnerabilities": {
        "vulnerabilityID": "0942421a-2e66-4f92-bee5-1745f4e48c3f",
        "line": "98",
        "column": "36",
        "confidence": "MEDIUM",
        "file": "README.md",
        "code": "* [Stefan Fleckenstein](https://www.linkedin.com/in/stefan-fleckenstein-6a456a30/)",
        "details": "LinkedIn Client ID\nWhen use LinkedIn Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "005b57376dcc8da50a4252cf3b2e17105595349d8fbe5c4c798b6f17b7d75968"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589380405Z",
      "vulnerabilities": {
        "vulnerabilityID": "72306305-45f8-4b39-af62-991ff4a00ca4",
        "line": "291",
        "column": "45",
        "confidence": "MEDIUM",
        "file": "dojo/settings/settings.dist.py",
        "code": "# Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e20c68a04103419cfca8e8b8e4706d621a23bf7c2c76349c6c70ea29a904bd6e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589381272Z",
      "vulnerabilities": {
        "vulnerabilityID": "983becf5-1f53-484f-958a-7f7541c15b04",
        "line": "31",
        "column": "48",
        "confidence": "MEDIUM",
        "file": "docker-compose.override.integration_tests.yml",
        "code": "DD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/test_defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3429c71ec820508260c2b26288a240b5baeb70258dc80eb692ea41859aab4691"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589382092Z",
      "vulnerabilities": {
        "vulnerabilityID": "357ad8aa-89ce-48ef-a404-69dc60a12a5c",
        "line": "35",
        "column": "48",
        "confidence": "MEDIUM",
        "file": "docker-compose.override.integration_tests.yml",
        "code": "DD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/test_defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bf7b1041800c52e00c36dc73f7be7feeb20feb89f6d3b376ec8f5b0f1b3cc54f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589382925Z",
      "vulnerabilities": {
        "vulnerabilityID": "2f3504ad-8821-412c-8ecd-685cbd4196b8",
        "line": "38",
        "column": "48",
        "confidence": "MEDIUM",
        "file": "docker-compose.override.integration_tests.yml",
        "code": "DD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/test_defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bf822c3145efa44a6a0292843eb751e8662d7ce72db59f052c5f65113d67c845"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589383727Z",
      "vulnerabilities": {
        "vulnerabilityID": "c86c426e-af73-467c-bda5-3459c9969bbf",
        "line": "42",
        "column": "48",
        "confidence": "MEDIUM",
        "file": "docker-compose.override.integration_tests.yml",
        "code": "DD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/test_defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6cfc639afb83e809cbcc2b5ecb285590ce8ee8804140d3b528cded6edf767ffd"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589384532Z",
      "vulnerabilities": {
        "vulnerabilityID": "600a60ca-b6f6-48fc-87f2-b94c59813641",
        "line": "43",
        "column": "43",
        "confidence": "MEDIUM",
        "file": "docker-compose.yml",
        "code": "DD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6a788bdc265ee40c3066478bf44a22ac3e41613535d5fbc2cfbbe0df5fab8b4f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589385338Z",
      "vulnerabilities": {
        "vulnerabilityID": "86f41dcd-92be-4ad0-84a3-a0c2888a7531",
        "line": "60",
        "column": "43",
        "confidence": "MEDIUM",
        "file": "docker-compose.yml",
        "code": "DD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c0dcb405efbecfd90d59531e5050e02b056ddef185723edddfdf9a6e9cffec73"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589386134Z",
      "vulnerabilities": {
        "vulnerabilityID": "95aaff8b-1820-4a66-8433-c330b6b2c589",
        "line": "76",
        "column": "43",
        "confidence": "MEDIUM",
        "file": "docker-compose.yml",
        "code": "DD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c614db803ed2ba4b7f5ee8f97c705077cfb0cfd5a9cca9e0093c88f6db4d2146"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589386946Z",
      "vulnerabilities": {
        "vulnerabilityID": "7eca9e74-97eb-4461-936c-0db16841acef",
        "line": "92",
        "column": "43",
        "confidence": "MEDIUM",
        "file": "docker-compose.yml",
        "code": "DD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "80f9f29373c810e95fd6982db26f35dad2f94c5cd99e4066d0565077e86ca0ed"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589387802Z",
      "vulnerabilities": {
        "vulnerabilityID": "35d38d12-b382-4fce-97fa-eb29108819dd",
        "line": "108",
        "column": "43",
        "confidence": "MEDIUM",
        "file": "docker-compose.yml",
        "code": "DD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://defectdojo:defectdojo@mysql:3306/defectdojo}\"",
        "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "92445eed4f07bb1e45350001b350e2d2cf9da269d269063fb09263e2476029f8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589388611Z",
      "vulnerabilities": {
        "vulnerabilityID": "2f2ed802-bf99-4448-854c-de2a06405582",
        "line": "843",
        "column": "5",
        "confidence": "MEDIUM",
        "file": "docs/content/en/integrations/import.md",
        "code": "\"api_key\": \"you-api-key\",",
        "details": "Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b33fb15e1d7c1c493ed6e5708ad40331a4949cfafc43c7c9da94c1027f9c3a43"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589389413Z",
      "vulnerabilities": {
        "vulnerabilityID": "cf2853fc-3191-4ae0-a224-164e27270a1f",
        "line": "254",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/settings/settings.dist.py",
        "code": "SECRET_KEY = env('DD_SECRET_KEY')",
        "details": "Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0a2c6fb5647a1f1f74df51d3f98d5788584a6c0906f76c1537a06123fdec94ef"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589390234Z",
      "vulnerabilities": {
        "vulnerabilityID": "a6aa8dd1-dea7-4739-9129-efd10046d9ad",
        "line": "602",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "dojo/api_v2/serializers.py",
        "code": "'api_key': {'write_only': True},",
        "details": "Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "19dd20b7f21d5380785af56a1d183139ee74cc8203e2f839c1f2b0a9c679c225"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589160094Z",
      "vulnerabilities": {
        "vulnerabilityID": "bc855c0d-df5b-40ed-91b4-0d8724e97ffe",
        "line": "335",
        "column": "20",
        "confidence": "MEDIUM",
        "file": "dojo/static/dojo/js/index.js",
        "code": "var r = Math.random()*16|0, v = c == 'x' ? r : (r\u00260x3|0x8);",
        "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4594ecef8757a21825c113cfad238b0f94d18d88d5ccba9963d14d157a81d87c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589162525Z",
      "vulnerabilities": {
        "vulnerabilityID": "0057d640-1025-48a8-8008-3694e8d0d3a5",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "root user",
        "details": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile. - Last USER command in Dockerfile should not be 'root' - Add 'USER \u003cnon root user name\u003e' line to the Dockerfile - [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ https://avd.aquasec.com/appshield/ds002]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "",
        "commitEmail": "",
        "commitHash": "",
        "commitMessage": "",
        "commitDate": "",
        "vulnHash": "576c15d923c1d0c25a625c7e2d8ddbf779028cae6c3c723980798dae33fe94da"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589165065Z",
      "vulnerabilities": {
        "vulnerabilityID": "3b833a2b-651a-4167-97da-3c2a7a7c94a5",
        "line": "987",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/reports/views.py",
        "code": "        workbook.save(tmp.name)",
        "details": "Using 'tmp.name' without '.flush()' or '.close()' may cause an error because the file may not exist when 'tmp.name' is used. Use '.flush()' or close the file before using 'tmp.name'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "233f068e247011994155591decae7a95bca186ecf5aeb0266b5fa6195f1b89e8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589165878Z",
      "vulnerabilities": {
        "vulnerabilityID": "207eb938-81a4-48c2-8f5f-c370952c3037",
        "line": "41",
        "column": "17",
        "confidence": "LOW",
        "file": "tests/dedupe_test.py",
        "code": "                if '(DUPE)' and 'Duplicate' in concatRow:\n                    dupe_count += 1",
        "details": "Using strings as booleans in Python has unexpected results. `\"one\" and \"two\"` will return \"two\". `\"one\" or \"two\"` will return \"one\". In Python, strings are truthy, and strings with a non-zero length evaluate to True.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1ec4a3e91096a82e33554ea45d72721c977d6fbb822c12578a9fccf0e684a607"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589167499Z",
      "vulnerabilities": {
        "vulnerabilityID": "319000b9-f597-41ff-a8fd-8526d8288d21",
        "line": "183",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "        elif schema_type is TYPE_BOOLEAN:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8ce55039d86cded35462aa8790187dc6b60fac16ff246b50702dff67aae6ecf6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589168347Z",
      "vulnerabilities": {
        "vulnerabilityID": "3502eebe-d242-4452-ba73-7c966febc62f",
        "line": "185",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "        elif schema_type is TYPE_INTEGER:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "00441d9de221eb3e0a2d49829733eac3f3dace3b3d7a208d47335c8d8a2ece80"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589169162Z",
      "vulnerabilities": {
        "vulnerabilityID": "c3b56bc2-328b-4dfc-a03f-b10097bab5a5",
        "line": "187",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "        elif schema_type is TYPE_NUMBER:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8e03a1be2b10afa4cc02ced1c15e7a1164b0c34ee60ff6add1958e9f13842923"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589170013Z",
      "vulnerabilities": {
        "vulnerabilityID": "b3f257f7-e863-4440-a634-7199ba784b6b",
        "line": "189",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "        elif schema_type is TYPE_ARRAY:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "383e517f7ace2e681695709841c57615adc1ba6c80116dbf0fe8bf5d8d5b9499"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589170838Z",
      "vulnerabilities": {
        "vulnerabilityID": "d3d83a32-014b-4078-a847-61420a8fcef9",
        "line": "191",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "        elif schema_type is TYPE_OBJECT:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1a27bdf8a770c39bc991fa5574eec46e7a038dba9c8c8e07060d5778eccc4df1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589171644Z",
      "vulnerabilities": {
        "vulnerabilityID": "41701711-7b6f-4a0e-8c45-7e0bf6c0647d",
        "line": "193",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "        elif schema_type is TYPE_STRING:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0701df4cc7f2b8f05cc81086739b567d7793a58828903f10d13360fc03e293db"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589172733Z",
      "vulnerabilities": {
        "vulnerabilityID": "1e3f9e5f-7116-45f5-a211-ee25181e84ad",
        "line": "209",
        "column": "37",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY and isinstance(obj, set):",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4d376a4297000cafe7db51193c602da522459b0dc99d728b30b2f79f51c0b548"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589173541Z",
      "vulnerabilities": {
        "vulnerabilityID": "853468b4-96bd-476e-9737-a72ef9e16728",
        "line": "244",
        "column": "37",
        "confidence": "LOW",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY:",
        "details": "Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b1c0d05e89bf1e292b9097fb47608e51e454aabcb655ac84f5eedccc8ebde93c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589193469Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf6a9360-dd9a-43d5-9267-8d99bc6407d7",
        "line": "1",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/appspider/parser.py",
        "code": "from xml.dom import NamespaceErr",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7e09dbf22159b3b234608583d0c4b6d94ff6eef080344596ab5c3e4c6b179629"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589194361Z",
      "vulnerabilities": {
        "vulnerabilityID": "98e53e48-e1d9-475e-89f7-d2143b326a17",
        "line": "2",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/immuniweb/parser.py",
        "code": "from xml.dom import NamespaceErr",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9e237bd5fff4092d96da835640d732edf2aa47206f17b86a5f176a8bf32ca118"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589195319Z",
      "vulnerabilities": {
        "vulnerabilityID": "87f98720-d3d7-4471-a741-706d9b58074c",
        "line": "2",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/sslscan/parser.py",
        "code": "from xml.dom import NamespaceErr",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "66c6acaab3afd0ae4fa4f282406df62ee3b5f97c2889655d094c6718c8a781d8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589196348Z",
      "vulnerabilities": {
        "vulnerabilityID": "f04c1ea7-0ee5-4e8f-b0a4-7afc77726849",
        "line": "2",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/sslyze/parser_xml.py",
        "code": "from xml.dom import NamespaceErr",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c2fa3f56fd68f4ad76211f2fed9a9d74fcc40313c056c902f233885814c3841c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589197371Z",
      "vulnerabilities": {
        "vulnerabilityID": "48a2b051-1978-492c-8d02-48c7014066be",
        "line": "3",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/ibm_app/parser.py",
        "code": "from xml.dom import NamespaceErr",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fca9294980ff4fdd30d1145dca9c11f4db6dd131fc5cf81b981438c424e2ffb0"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58919846Z",
      "vulnerabilities": {
        "vulnerabilityID": "e29b8c3a-54d4-4375-bbe3-abc9aa5de90e",
        "line": "6",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/nessus/parser.py",
        "code": "from xml.dom import NamespaceErr",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0f99d9788f6a59c0beb5136e53fec2d57333e754fe3424b74b53fcd1c1773bc1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589199421Z",
      "vulnerabilities": {
        "vulnerabilityID": "c7346e03-3a5d-4166-988f-257a47849e4b",
        "line": "7",
        "column": "1",
        "confidence": "LOW",
        "file": "dojo/tools/qualys_webapp/parser.py",
        "code": "import xml.etree.ElementTree",
        "details": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3d9d0dd93627985364122c68141cd6a6fd4577537cdd80b7d7ea26bc4f83976f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589200442Z",
      "vulnerabilities": {
        "vulnerabilityID": "5037cc3c-b5a9-4208-9688-09328559af03",
        "line": "33",
        "column": "18",
        "confidence": "LOW",
        "file": "dojo/management/commands/csv_findings_export.py",
        "code": "        writer = csv.writer(open(file_path, 'w'))",
        "details": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "10993687f8c2c53b45cd47fd54a3375a41c251f15bea066dd1bf3889cc33b304"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589201257Z",
      "vulnerabilities": {
        "vulnerabilityID": "e78707aa-dd62-4dae-ac2e-e9c413dd3178",
        "line": "858",
        "column": "14",
        "confidence": "LOW",
        "file": "dojo/reports/views.py",
        "code": "    writer = csv.writer(response)",
        "details": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "996f2014d7337bcbad58bef17d47100f018811f92fe372730da9525125cf8837"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58915387Z",
      "vulnerabilities": {
        "vulnerabilityID": "47ca92f4-490b-4f32-8017-333448111ad8",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "",
        "details": "Exposure of Sensitive Information\nYour Nginx file must include 'server_tokens off;' configuration. There are many different kinds of mistakes that introduce information exposures. The severities of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. For more information checkout the CWE-200 (https://cwe.mitre.org/data/definitions/200.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Nginx",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b5bc7d4047df044b92bc91f2d910a796844efc51dec05ae94ba505edf998f326"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589157394Z",
      "vulnerabilities": {
        "vulnerabilityID": "bfc152fa-a2bd-42c4-858f-12f003e4cc83",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "",
        "details": "Improper Restriction of Rendered UI Layers or Frames\nYour Nginx file must include the X-Frame-Options header. A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to. For more information checkout the CWE-1021 (https://cwe.mitre.org/data/definitions/1021.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Nginx",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4d6af13dee5a6642cf90cd61afa30aca1058784d4647bcfb8e051482185cc302"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589158425Z",
      "vulnerabilities": {
        "vulnerabilityID": "90eac018-23ce-4730-8df5-647607d164fd",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "",
        "details": "Missing X-Content-Type-Options header\nSetting this header will prevent the browser from interpreting files as a different MIME type to what is specified in the Content-Type HTTP header (e.g. treating text/plain as text/css). For more information checkout https://owasp.org/www-project-secure-headers/#x-content-type-options",
        "securityTool": "HorusecEngine",
        "language": "Nginx",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "87edf78f2308a92e464725e776d7a3f8179257b7cafddc3c6ad21df65292650c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589159262Z",
      "vulnerabilities": {
        "vulnerabilityID": "0f7550a6-a9ec-4757-9ebd-16ef6b0386ab",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "",
        "details": "Missing Content-Security-Policy header\nA Content Security Policy (also named CSP) requires careful tuning and precise definition of the policy. If enabled, CSP has significant impact on the way browsers render pages (e.g., inline JavaScript is disabled by default and must be explicitly allowed in the policy). CSP prevents a wide range of attacks, including cross-site scripting and other cross-site injections. For more information checkout https://owasp.org/www-project-secure-headers/#content-security-policy",
        "securityTool": "HorusecEngine",
        "language": "Nginx",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "955b574d81773b7d5a37e069659e5ceee7f341de63547b36e163ebd5eb806c3c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589161719Z",
      "vulnerabilities": {
        "vulnerabilityID": "c73d3079-ec3c-4ffe-91f4-c8cc6b403a56",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "':latest' tag used",
        "details": "When using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated. - Specify a tag in the 'FROM' statement for image 'build' - Add a tag to the image in the 'FROM' statement - [https://avd.aquasec.com/appshield/ds001]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "",
        "commitEmail": "",
        "commitHash": "",
        "commitMessage": "",
        "commitDate": "",
        "vulnHash": "5a5064bad7df3fe3eba5476d8363f756a3d8e79929e24b758b9238c078e97df9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589163406Z",
      "vulnerabilities": {
        "vulnerabilityID": "8e3c219e-d6ac-4d98-b634-e2387ea888fa",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "'RUN cd ...' to change directory",
        "details": "Use WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain. - RUN should not be used to change directory: 'cd components \u0026\u0026   yarn'. Use 'WORKDIR' statement instead. - Use WORKDIR to change directory - [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir https://avd.aquasec.com/appshield/ds013]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "",
        "commitEmail": "",
        "commitHash": "",
        "commitMessage": "",
        "commitDate": "",
        "vulnHash": "7aaf36e39d2bef54a29b63a2d324a71b2a838691d7b702fa513e2d5741fb1fff"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589166681Z",
      "vulnerabilities": {
        "vulnerabilityID": "7d866ecb-d8f4-46c5-bdfd-c1216ec93e7c",
        "line": "78",
        "column": "41",
        "confidence": "LOW",
        "file": "dojo/endpoint/views.py",
        "code": "        request, 'dojo/endpoints.html', {\n            'product_tab': product_tab,\n            \"endpo",
        "details": "key `'product_tab'` is uselessly assigned twice",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5fef72bdab66c383fc17fe474e6e9fec95e84f181dc5cc8c6f5f3058cb1a30f1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589174359Z",
      "vulnerabilities": {
        "vulnerabilityID": "9c76639b-ba5e-4282-ab0a-1120de4a23b2",
        "line": "22",
        "column": "19",
        "confidence": "LOW",
        "file": "dojo/tools/dependency_check/parser.py",
        "code": "            key = hashlib.md5(key_str.encode('utf-8')).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c7d875b10ab279dd0a982c53a5ce01b20c853170257144e084c3188a36975693"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589175185Z",
      "vulnerabilities": {
        "vulnerabilityID": "5842e397-1d5e-4521-8ef8-a01b6f2fc2a6",
        "line": "53",
        "column": "34",
        "confidence": "LOW",
        "file": "dojo/tools/ccvs/parser.py",
        "code": "                    unique_key = hashlib.md5(\n                        str(vuln).encode('utf-8')).hex",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1a79f5dcba2636c123108e5bf2be6de78a944b6b59b7d8a67f3715b6b18ab7bb"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589175995Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbbeab91-7054-4183-a997-53d86acbbd2f",
        "line": "40",
        "column": "38",
        "confidence": "LOW",
        "file": "dojo/tools/retirejs/parser.py",
        "code": "                        unique_key = hashlib.md5((item.title + item.references + encrypted_file).enc",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "576345487dfcbffac19b92129e1453475f83c50ee76ecb715a7de7d4cb376fca"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58917689Z",
      "vulnerabilities": {
        "vulnerabilityID": "d16ad6d1-fc62-4694-bbb3-e1e3ae45d3f5",
        "line": "45",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/blackduck/parser.py",
        "code": "            dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)\n                .encode(\"u",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a7e6d3f31a5a9ba31c1b9ab8f529be0062941d73ea40f9f54eccbba7cbb2469c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589177703Z",
      "vulnerabilities": {
        "vulnerabilityID": "67ebd2c1-3696-42ca-b55a-f577a6dcdab3",
        "line": "55",
        "column": "38",
        "confidence": "LOW",
        "file": "dojo/tools/huskyci/parser.py",
        "code": "                        unique_key = hashlib.md5(\n                            str(vuln).encode('utf-",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cf3445b64e68b66bdafb154c63d1f353f7c377434ae4c6d45704f9d1f44c7aa4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589178536Z",
      "vulnerabilities": {
        "vulnerabilityID": "c1d8a110-4de4-49cf-977e-26402b980538",
        "line": "50",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/trufflehog3/parser.py",
        "code": "            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "517dc9b1c54d3a671003640532f3139a9f074d5d9fcbeefd515cc153e06d90d3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589179361Z",
      "vulnerabilities": {
        "vulnerabilityID": "e47411dc-334a-49d4-aae2-9c32427c2539",
        "line": "55",
        "column": "26",
        "confidence": "LOW",
        "file": "dojo/tools/ort/parser.py",
        "code": "            unique_key = hashlib.md5((item.title + item.references).encode()).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b571bff15d79ae9fd4f38c3abddb509228949075854ab68364298a6325600b5b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589180224Z",
      "vulnerabilities": {
        "vulnerabilityID": "f9ba9636-34e0-4637-b48e-7c2f8910cd84",
        "line": "54",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/trufflehog/parser.py",
        "code": "            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bdc4b461f049b8de1e05c754dda4beeb2de920c559a80bf9a3640a218ead4d2e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589181037Z",
      "vulnerabilities": {
        "vulnerabilityID": "16a0f114-93c1-49c4-a389-47936927f581",
        "line": "59",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/immuniweb/parser.py",
        "code": "            dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8c54ff8a540f92b458b4c38583195847f4601cb237177fd323d800fe3cd65c34"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589181853Z",
      "vulnerabilities": {
        "vulnerabilityID": "5f9aa425-c168-41f9-b20f-b14f1f57ce11",
        "line": "56",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/tools/cobalt/parser.py",
        "code": "                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "374d704c88881900aa4197fd07241f1d691445b50d843cc4120211217d8c0d51"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58918266Z",
      "vulnerabilities": {
        "vulnerabilityID": "59ee77df-7864-4389-8de3-6c0db8475e39",
        "line": "68",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/tools/twistlock/parser.py",
        "code": "                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "aaa4931fa86d8b191de779696bf116a0eb8f319d466a9200d4c03bb0c4edaf84"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589183553Z",
      "vulnerabilities": {
        "vulnerabilityID": "93a96334-8db3-45fa-965c-32dcaf8afd3b",
        "line": "61",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/bundler_audit/parser.py",
        "code": "            dupe_key = hashlib.md5(fingerprint.encode(\"utf-8\")).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "74c5b955cf863bc2264b3a36c4d6a2bcaf7ff32591d3926bd859ffad5a8d3177"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589184362Z",
      "vulnerabilities": {
        "vulnerabilityID": "235be60d-0b6f-4b11-beca-7cd238c14126",
        "line": "84",
        "column": "28",
        "confidence": "LOW",
        "file": "dojo/tools/scantist/parser.py",
        "code": "                hash_key = hashlib.md5(\n                    node.get('Public ID').encode('utf-8') + ",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1f527124d7efdb14686950f514daa364465061380b1bad5c40cecf56dc6e9cd9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589185174Z",
      "vulnerabilities": {
        "vulnerabilityID": "fac08505-f8f8-4f58-8d7a-8fbcb93880aa",
        "line": "70",
        "column": "32",
        "confidence": "LOW",
        "file": "dojo/tools/ibm_app/parser.py",
        "code": "                    dupe_key = hashlib.md5(str(issue_description + name + severity).encode('utf-8'))",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "eef36b3641419dbb05bdc3293851cd8c7cedda250cd8b6d562492055a26ca24e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589186017Z",
      "vulnerabilities": {
        "vulnerabilityID": "313f131e-2901-42f7-b261-a776d2528e1a",
        "line": "77",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/h1/parser.py",
        "code": "            dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "33a7a29ab684178929526a834131e72e82f8c035204260722cdfa1af0c2eeba8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589186829Z",
      "vulnerabilities": {
        "vulnerabilityID": "fcbd251f-6608-4199-b9b0-78f632a89210",
        "line": "111",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/tools/vcg/parser.py",
        "code": "                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a98be6fdd00e1694240fe17cc8b70ec0e456d6edd3be8b6ee78778ba10e7ba2e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589187652Z",
      "vulnerabilities": {
        "vulnerabilityID": "b4764578-98c3-461f-a7ea-af199812a399",
        "line": "72",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/tools/bugcrowd/parser.py",
        "code": "                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8758eb03b425ea879c0b009d62748a41bc7e1c090fa7883aacbd9a7ef7d775c1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589188605Z",
      "vulnerabilities": {
        "vulnerabilityID": "59bf1253-5f8f-457a-bb19-ee0e3d38930e",
        "line": "88",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/tools/kiuwan/parser.py",
        "code": "                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7e10044d6c786e2397faca2099a6676b147b9e92615d65067200289a7962e3b4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589189539Z",
      "vulnerabilities": {
        "vulnerabilityID": "f960e8da-c6fa-4034-a193-0d5c2a886258",
        "line": "104",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/whitesource/parser.py",
        "code": "            dupe_key = hashlib.md5(vuln.get('description').encode('utf-8') + vuln.get('title').encod",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "59b607c12206778db22a5b4cb6af39339f237b47bd84ad5ab9a23eace7b3a66f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589190619Z",
      "vulnerabilities": {
        "vulnerabilityID": "ba7ccb8c-0746-4148-b055-d7120747df6c",
        "line": "171",
        "column": "23",
        "confidence": "LOW",
        "file": "dojo/tools/vcg/parser.py",
        "code": "                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b23dcbbcc824cb3c33784d3168743e9076f396a98e9e7628565b4439258d205f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589191621Z",
      "vulnerabilities": {
        "vulnerabilityID": "0a172704-ce83-4277-9865-f376e50b2ae1",
        "line": "115",
        "column": "32",
        "confidence": "LOW",
        "file": "dojo/tools/sslyze/parser_xml.py",
        "code": "                    dupe_key = hashlib.md5(str(description + title).encode('utf-8')).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "76005fc5539658a3e26b7076bc010de256d3721fd7c4aefcc9b3a5c901034558"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589192605Z",
      "vulnerabilities": {
        "vulnerabilityID": "3db896d1-6104-4c08-b791-fbe55e7f4dd5",
        "line": "190",
        "column": "24",
        "confidence": "LOW",
        "file": "dojo/tools/whitehat_sentinel/parser.py",
        "code": "            dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "96887f60e1e41c189d34c6f81eefeab9920eb5f9a51692a077ceeb5d739f43b4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589205369Z",
      "vulnerabilities": {
        "vulnerabilityID": "f3324bca-d7a4-4e20-85a1-cf673c2e4fb6",
        "line": "155",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/decorators.py",
        "code": "154             print(\"page source:\", self.driver.page_source)\n155             f = open(\"/tmp/seleni",
        "details": "Probable insecure usage of temp file/directory.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f2b7933817304a9898891d50241147aa21a4a2890d460605e6610947838c43a7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589207009Z",
      "vulnerabilities": {
        "vulnerabilityID": "e0496932-8812-41a9-aeed-712a3e1fe38a",
        "line": "1050",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/finding/views.py",
        "code": "1049             messages.SUCCESS,\n1050             mark_safe(\n1051                 'Finding templat",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cbf2742eb5ae5e2291c90b3ea3e8f477ab362d91e36c14e31614a268fdc91f63"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589207814Z",
      "vulnerabilities": {
        "vulnerabilityID": "c0cf9304-c1f4-4dda-8a13-04b4a8c6042e",
        "line": "1050",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/finding/views.py",
        "code": "1049             messages.SUCCESS,\n1050             mark_safe(\n1051                 'Finding templat",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b1de297d545e901ea83a42575e42ef6db21d46aa8e6ee3cbf534007eda72889a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589209574Z",
      "vulnerabilities": {
        "vulnerabilityID": "a9108fff-880d-4042-a0b3-46bd43bc80db",
        "line": "65",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "64 \n65         return mark_safe(popup_plus)\n66 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "45ae7dfa2ab1170c89b60a911fe6bd645643c577cfc861e2683829af9b734aba"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589210619Z",
      "vulnerabilities": {
        "vulnerabilityID": "0b0f3ce0-4f9c-4695-a004-5536eaf4ceb7",
        "line": "65",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "64 \n65         return mark_safe(popup_plus)\n66 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0acf6b99badbaadc97ecf6700289094c62ab2f73d9505b7e90226aaad2c4e368"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589211541Z",
      "vulnerabilities": {
        "vulnerabilityID": "ed86370a-6d75-45d2-aa17-f516d750a8eb",
        "line": "73",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "72 \n73         return mark_safe(popup_plus)\n74 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7c373f6df9de39859f4318323ffb93197d34bbd3ad70790c66108d8240fb13c2"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589212501Z",
      "vulnerabilities": {
        "vulnerabilityID": "0339e45c-f79f-40e0-8821-e4b3f071c1d5",
        "line": "73",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "72 \n73         return mark_safe(popup_plus)\n74 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a43ac5926f7402abba37c55d3583700ef18704e9a8dde07c6edfde2484455088"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589213429Z",
      "vulnerabilities": {
        "vulnerabilityID": "8e65542a-ef0f-4f5d-a7ce-6122d991598c",
        "line": "81",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "80 \n81         return mark_safe(popup_plus)\n82 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a12eb8338aae5e2e9e77f7e689e7a7d417874ed9bf9bdca3c4165a1a0034b6b5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589214503Z",
      "vulnerabilities": {
        "vulnerabilityID": "e437e4f5-85c6-4661-92f1-ee3df6d7d74e",
        "line": "81",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "80 \n81         return mark_safe(popup_plus)\n82 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "eb56c9f32ea07ae89e6a16e351b1ba71abe451597e81bcd709d44f3a395a1f68"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589215594Z",
      "vulnerabilities": {
        "vulnerabilityID": "879ef216-14af-4a59-a6a3-5e3f720ce141",
        "line": "145",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "144 \n145         return mark_safe('\\n'.join(output))\n146 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ffc3c726c49fd82ea668d82fb1af1e93bc69c3725185b9662c0b9f6c71d0090e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58921669Z",
      "vulnerabilities": {
        "vulnerabilityID": "e7d71a70-0dd6-4d6e-baf8-4caa77d7fd7a",
        "line": "145",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "144 \n145         return mark_safe('\\n'.join(output))\n146 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "aac8aeb8362c1c765c1073a2ed93f4e5274cbf7f6d45d9c5e67112cc66085d43"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589217521Z",
      "vulnerabilities": {
        "vulnerabilityID": "f1bc89cb-0024-496c-9619-861675dc3470",
        "line": "3052",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "3051         if value:\n3052             return pickle.loads(value)\n3053         else:\n",
        "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d0ef4ace4701dd0b0f0956b27c0a7c29ec5421acd6c50114c9bb32f422c42239"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589220041Z",
      "vulnerabilities": {
        "vulnerabilityID": "36b51882-f4aa-4ade-9802-f42ec0496584",
        "line": "51",
        "column": "0",
        "confidence": "LOW",
        "file": "dojo/management/commands/migrate_surveys.py",
        "code": "50                 # Take all contents from ddse table and insert into dojo table\n51                ",
        "details": "Possible SQL injection vector through string-based query construction.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "316fc0a7fe552ea44705a7a5240d5f4b99564373d89bb02dbe547d21c44a6e03"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589220847Z",
      "vulnerabilities": {
        "vulnerabilityID": "c92c20cd-b8ef-4829-8c5b-229913394532",
        "line": "51",
        "column": "0",
        "confidence": "LOW",
        "file": "dojo/management/commands/migrate_surveys.py",
        "code": "50                 # Take all contents from ddse table and insert into dojo table\n51                ",
        "details": "Possible SQL injection vector through string-based query construction.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "316fc0a7fe552ea44705a7a5240d5f4b99564373d89bb02dbe547d21c44a6e03"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589221661Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a1d50ab-214b-4ac3-8d35-cb49e8781702",
        "line": "55",
        "column": "0",
        "confidence": "LOW",
        "file": "dojo/management/commands/migrate_surveys.py",
        "code": "54                 if new_table_name == 'dojo_question' or new_table_name == 'dojo_answer':\n55      ",
        "details": "Possible SQL injection vector through string-based query construction.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "63fcba61545dfd58d59524af524e284e66fc640f82608cc850632f42c857b21c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589227649Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b3a8db3-5549-4f5b-a7e0-89ae80b843b2",
        "line": "139",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "138     def get_html(self):\n139         return mark_safe('\u003chr title=\"Page Break\" class=\"report-page-",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "604f06b384b8f4da2301c9efe76f00f5b2f0b74b157bb2d1675e0237c1bf61e9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589228633Z",
      "vulnerabilities": {
        "vulnerabilityID": "4a904781-6681-4dfa-9aca-c0c124ae1a30",
        "line": "142",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "141     def get_asciidoc(self):\n142         return mark_safe('\u003cbr/\u003e\u003c\u003c\u003c\u003cbr/\u003e')\n143 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9deaf3d8f59c6c6660b155dadccef08cda0e2fd3afd5dbb44ac8d55613f77b79"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589229618Z",
      "vulnerabilities": {
        "vulnerabilityID": "6a688bec-748e-4bd3-b39f-9dde8cbcaef2",
        "line": "145",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "144     def get_option_form(self):\n145         return mark_safe(\n146             \"\u003cdiv data-multiple",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b970e59b0a770342320f8c52b208e0ecc50874e27eb1614d2c0438c03818d8c9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589230612Z",
      "vulnerabilities": {
        "vulnerabilityID": "49af1180-abf9-4f49-a3a2-80eaab2c07d8",
        "line": "145",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "144     def get_option_form(self):\n145         return mark_safe(\n146             \"\u003cdiv data-multiple",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "51a97ceec83064514ffafa62ce07253e5e39ea1b3703f3ff356ffab905b43045"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589231657Z",
      "vulnerabilities": {
        "vulnerabilityID": "d0f52469-387d-456d-aff2-e8a35d4a765d",
        "line": "160",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "159     def get_asciidoc(self):\n160         return mark_safe('')\n161 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "de3fdf69a2eadd7525f582f8a88408a615c035e9e4edf0bdbfbf45aba7624771"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589232618Z",
      "vulnerabilities": {
        "vulnerabilityID": "9523eae5-8762-4c83-9525-70f622f5ad17",
        "line": "163",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "162     def get_html(self):\n163         return mark_safe('')\n164 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "647c359852a1022aa13d1ca950c1f8f6fcddce1619813b1f3a072915e477e53d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589233646Z",
      "vulnerabilities": {
        "vulnerabilityID": "0aad6d6f-2377-4c88-9156-d9f4e7e868f5",
        "line": "170",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "169                                                             \"extra_help\": self.extra_help})\n170 ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "87b1802d36ad75e22778444eeb5a3b2135a3d759dd7e1c1d3fad67c5b89124ce"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589234774Z",
      "vulnerabilities": {
        "vulnerabilityID": "3773e19e-527f-4411-bc3a-0e47c534737b",
        "line": "170",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "169                                                             \"extra_help\": self.extra_help})\n170 ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7329cb96211a8212773a830358455307b67c25c4c15071dc4c25632ceb09254e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589235785Z",
      "vulnerabilities": {
        "vulnerabilityID": "894644b4-8547-45ed-a6b7-968d40527802",
        "line": "195",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "194                                                             'extra_help': self.help_text})\n195  ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cdb94240b7b2a98107274386462d7ec3b46047676e184b608b6e0a6bd6a19384"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589236589Z",
      "vulnerabilities": {
        "vulnerabilityID": "02e12860-2d53-4184-b339-25f4d53bb042",
        "line": "195",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "194                                                             'extra_help': self.help_text})\n195  ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7ddf8e4ce9983bc470ef7e67b81be4acb218e72d4bac7231b0672aabff321a78"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589237394Z",
      "vulnerabilities": {
        "vulnerabilityID": "ca22cb29-a85c-4650-83b5-be4d7ebef08d",
        "line": "218",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "217                                                             'extra_help': self.help_text})\n218  ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0947e821beccb62a017542a7a0eb93f7bd707e527824202baf75184383e5241d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589238289Z",
      "vulnerabilities": {
        "vulnerabilityID": "47e94678-1302-46e1-a4f7-481794c1ce15",
        "line": "218",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "217                                                             'extra_help': self.help_text})\n218  ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3ab3813760c5a927313eb8af02e8730813ef5e2b1f432e6b0fe54e7fb8327889"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589239101Z",
      "vulnerabilities": {
        "vulnerabilityID": "1c449207-a4ac-4089-9a13-dbd16aba9ad3",
        "line": "231",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "230                                                                                 \"content\": self.",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d258f719131dcc7b81d6900808706987747b5108586ccafd520e57e21f29dc9d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589239906Z",
      "vulnerabilities": {
        "vulnerabilityID": "79134a6a-31b4-441e-aca4-1bbd47ff8525",
        "line": "231",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "230                                                                                 \"content\": self.",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2db2dbcada2a5ec62890594d3012771ecf4cf264d4d6ffcd839339c313f9c729"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58924074Z",
      "vulnerabilities": {
        "vulnerabilityID": "f28a9f93-897d-4f5d-a4cf-602dca86d2d9",
        "line": "236",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "235                                                                                          \"conten",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3820629d3ba6e0498e69d46b90db18a27e717ab7b909924541a6a24f195cd400"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589241592Z",
      "vulnerabilities": {
        "vulnerabilityID": "b066da32-8be2-4b12-98da-a9e418a342c8",
        "line": "236",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "235                                                                                          \"conten",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c362111a92763bb11e7e9785707b1b99adbe38cead38ed7aede046d3270412ca"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589242403Z",
      "vulnerabilities": {
        "vulnerabilityID": "9fbad535-b1e6-4236-8ba9-a76ae16c3b6e",
        "line": "242",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "241                                                             \"title\": self.title})\n242         re",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "711b7217a7c7de0d9547b749424e42af73e3796738d4cc81a84e0f4ab1c20b5f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589243217Z",
      "vulnerabilities": {
        "vulnerabilityID": "8e391337-4175-4d86-9cbd-7d895b5f636f",
        "line": "242",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "241                                                             \"title\": self.title})\n242         re",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b6c306c708090caef1b0708e21d50cd7ba62c591598cb32c5345fa726a1b7363"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589244028Z",
      "vulnerabilities": {
        "vulnerabilityID": "b25abd87-272c-4a98-b9e1-b5fd3daa8cab",
        "line": "295",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "294                                      \"user_id\": self.user_id})\n295         return mark_safe(asci",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4be7d8cb98577e7429acfb853b7b992b40f0e2511e1e16aeb5dd639e4e0879b7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589244837Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a0ae39e-b312-4d71-8e90-ded97a19ab50",
        "line": "295",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "294                                      \"user_id\": self.user_id})\n295         return mark_safe(asci",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "44100f95077b11e2b1fb6d3273eb2d35679ec78709d146c6fef7d3d20192eb95"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589245648Z",
      "vulnerabilities": {
        "vulnerabilityID": "27e5ddfd-b8f4-4fe9-b540-f40c1a995f63",
        "line": "305",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "304                                  \"user_id\": self.user_id})\n305         return mark_safe(html)\n30",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1dd93b5e64bfdc8cea42fd859f0b797a447d3c0ee257cc0d13a568652af799b5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589246459Z",
      "vulnerabilities": {
        "vulnerabilityID": "66f60613-f3a7-4110-850c-367eaa886647",
        "line": "305",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "304                                  \"user_id\": self.user_id})\n305         return mark_safe(html)\n30",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5f3312e6ed1d565a5e865d0baa238b37b40910c7f7f2240f7963fe733637f1bb"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589247276Z",
      "vulnerabilities": {
        "vulnerabilityID": "d6dab76f-fc0f-4291-98e7-205539a6b03d",
        "line": "317",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "316                                  })\n317         return mark_safe(html)\n318 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f679248de1844809893f75c4f32399b2c707bacca63e75c28a48cc2138425601"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589248178Z",
      "vulnerabilities": {
        "vulnerabilityID": "d9d02a59-3134-4eaa-94c1-132b588d98fa",
        "line": "317",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "316                                  })\n317         return mark_safe(html)\n318 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "778cbd4006b5dd8ddc7dd13093700bae902575a5a139b31c686bf34b6e351542"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589248998Z",
      "vulnerabilities": {
        "vulnerabilityID": "613a14d2-98d2-4525-8512-e19523c81198",
        "line": "366",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "365                                  \"user_id\": self.user_id})\n366         return mark_safe(html)\n36",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e88c890448f29c74b5d86a38d7c192b11393a87d64a7306388ad1b4e9e8cfa4f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589249819Z",
      "vulnerabilities": {
        "vulnerabilityID": "80902830-c68f-44b4-81f8-a5b876f55f70",
        "line": "366",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "365                                  \"user_id\": self.user_id})\n366         return mark_safe(html)\n36",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a8df1e4d15b4cf723ec9de48fe52c20bb6aa80012461f9dc34d08ee713f6dcef"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589250634Z",
      "vulnerabilities": {
        "vulnerabilityID": "8e7940f8-7e93-4215-80e6-1cb913663e10",
        "line": "375",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "374                                      \"user_id\": self.user_id})\n375         return mark_safe(asci",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2889c1a17604a5e3e0867c1cd402d9805019dbddbbbeb6bd203160ae5873a3b6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589251452Z",
      "vulnerabilities": {
        "vulnerabilityID": "84a5e142-0cc4-4253-9e4e-a5f0d0ba7715",
        "line": "375",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "374                                      \"user_id\": self.user_id})\n375         return mark_safe(asci",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9a0d4de3d18177ab26330fc547cb0dd70de2af52b2d03f5c646f4f49567f4326"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589252367Z",
      "vulnerabilities": {
        "vulnerabilityID": "a94da4d9-7150-4171-927e-b45a0c2bd943",
        "line": "385",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "384                                  })\n385         return mark_safe(html)\n386 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "68c0ce160d476dc16050b4a31b2a9fb49387c6d7193dfe761d0b929e9daa2e49"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589253347Z",
      "vulnerabilities": {
        "vulnerabilityID": "40fb27e3-b989-40c2-9b17-0f0cbb347f59",
        "line": "385",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/reports/widgets.py",
        "code": "384                                  })\n385         return mark_safe(html)\n386 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "98546bddc3fceaa907a6a41fd7ffa297bb52c17af6ba8bb7267cd21146225c22"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589255319Z",
      "vulnerabilities": {
        "vulnerabilityID": "41eced7f-b361-4745-8980-573e5da0b549",
        "line": "457",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/survey/views.py",
        "code": "456 \n457                     choices_to_process = pickle.loads(choiceQuestionFrom.cleaned_data['answ",
        "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3281cdb47d454c877a50cda2328af12ce52953d3512fa4afce693abafd8b51ea"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589256207Z",
      "vulnerabilities": {
        "vulnerabilityID": "160591c0-d3ed-4d83-a073-7fd41d652291",
        "line": "80",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "79                                                       'markdown.extensions.tables'])\n80         r",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "091bf836a3e321c6a84b24dd08a921b9e93407cf20ec10ea071dc2b90437f003"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589257138Z",
      "vulnerabilities": {
        "vulnerabilityID": "8d713038-fb92-43c6-a65a-b05e42ff564e",
        "line": "80",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "79                                                       'markdown.extensions.tables'])\n80         r",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9f433794bc147847578fd417936df86ba43f2df3ddc358c7acfac1549dce684c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589258072Z",
      "vulnerabilities": {
        "vulnerabilityID": "ec0dc759-d4de-499f-8d21-e709a6ccbf04",
        "line": "114",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "113 \n114     return mark_safe(value.replace('\\n', '\u0026nbsp;+\u003cbr /\u003e'))\n115 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "538ee58338efe04f7e4988a8332a97e2ba635d75027e94bdb522cc277fa2209d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589259011Z",
      "vulnerabilities": {
        "vulnerabilityID": "8a889cee-bd10-485c-be89-65e454370ad8",
        "line": "114",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "113 \n114     return mark_safe(value.replace('\\n', '\u0026nbsp;+\u003cbr /\u003e'))\n115 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bbcfa70e819ddfc80581a5f7392b5ac8d8a8ddf4a86a7be8682600ea7e4d515b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589260032Z",
      "vulnerabilities": {
        "vulnerabilityID": "06107526-eb98-4b16-914d-84ca8b4519a6",
        "line": "144",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "143     from dojo import __docs__\n144     return mark_safe(__docs__)\n145 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8c8d72348e7bb55d7841304c8817bea52eb7a89ed87ae72ef9cd78cbde6ecdad"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589260998Z",
      "vulnerabilities": {
        "vulnerabilityID": "eb2958b4-e8aa-417a-9cd6-3ba6ff1acd2e",
        "line": "144",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "143     from dojo import __docs__\n144     return mark_safe(__docs__)\n145 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "adc07278e2174b20538b480899f7513fdeea7755fce4beadd58cef2b63337456"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589262008Z",
      "vulnerabilities": {
        "vulnerabilityID": "044b396c-2db0-4457-9b6b-7309c52a64eb",
        "line": "274",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "273 \n274     return mark_safe(title)\n275 \n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "95023f29ff00470882dc1aa4d2933f1da81c32a0e1a31da92dc47169c148a8f4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589262878Z",
      "vulnerabilities": {
        "vulnerabilityID": "8b80e6ea-2fcc-42f7-b1ab-80698e8cd7d4",
        "line": "274",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "273 \n274     return mark_safe(title)\n275 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "58c5bf085493ad30177ea325b7eddc658a14357854e61f8b8f844e457b53b66b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589263688Z",
      "vulnerabilities": {
        "vulnerabilityID": "60e57939-6a38-4cd7-9e56-67073894c888",
        "line": "358",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "357     else:\n358         return mark_safe(\"\u003cem class=\\\"text-muted\\\"\u003eNot Specified\u003c/em\u003e\")\n359 \n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "627cdd300bcd572bbf96c508ebb0fd8f435a5f7e705e05222bb07a2dd246ef53"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58926449Z",
      "vulnerabilities": {
        "vulnerabilityID": "159f7357-c4e1-4426-b961-165d43e4f705",
        "line": "476",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "475     if value == Product.VERY_HIGH_CRITICALITY:\n476         return mark_safe(stars(5, 5, 'Very Hi",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3de7d4763b86b0ef39b956153668d8d4a5f707fe41b6da89ebad00d609014451"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58926535Z",
      "vulnerabilities": {
        "vulnerabilityID": "c57dca1a-7847-4a59-a79d-f9c4aab2c4a3",
        "line": "476",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "475     if value == Product.VERY_HIGH_CRITICALITY:\n476         return mark_safe(stars(5, 5, 'Very Hi",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a98a58096df8309125230b4ce8fe3f54dd46ae0966240c800313291396041c03"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589266269Z",
      "vulnerabilities": {
        "vulnerabilityID": "b71fee01-eb53-4345-bf12-5224252d6836",
        "line": "478",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "477     if value == Product.HIGH_CRITICALITY:\n478         return mark_safe(stars(4, 5, 'High'))\n479 ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "dda3cf05160849077e335da182f0eb16b3cddca7f6b4423f26461a43c05b5be4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589267296Z",
      "vulnerabilities": {
        "vulnerabilityID": "938a879e-13a9-407b-9b8f-24e8ed0bd220",
        "line": "478",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "477     if value == Product.HIGH_CRITICALITY:\n478         return mark_safe(stars(4, 5, 'High'))\n479 ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b713fefb073c69b491a9f124fc864e28bb5d72b85b70b08292ccd74851d91251"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589268382Z",
      "vulnerabilities": {
        "vulnerabilityID": "65763667-80f5-4f23-841c-adf01478a3eb",
        "line": "480",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "479     if value == Product.MEDIUM_CRITICALITY:\n480         return mark_safe(stars(3, 5, 'Medium'))\n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f743fd7ff718c4859364b3cda51fdf17c679be4a757c3fb5bdfd810fc173beb9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58926939Z",
      "vulnerabilities": {
        "vulnerabilityID": "f0ba0256-ebae-404f-b2db-da916d875e06",
        "line": "480",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "479     if value == Product.MEDIUM_CRITICALITY:\n480         return mark_safe(stars(3, 5, 'Medium'))\n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6819e019bb109f9003616a7fae9fb1483909d13b5491da977fbd3e9abea6a343"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589270519Z",
      "vulnerabilities": {
        "vulnerabilityID": "9af9eb33-2c77-49ca-a42d-c20abcbe9f60",
        "line": "482",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "481     if value == Product.LOW_CRITICALITY:\n482         return mark_safe(stars(2, 5, 'Low'))\n483   ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fa4314ba151cbb452921f34a1e1d75bb53ae7134c9af5cdf3b8de84e55c38648"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589271585Z",
      "vulnerabilities": {
        "vulnerabilityID": "9e8c1645-746c-4cb0-bd49-8dc1ea6e5f74",
        "line": "482",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "481     if value == Product.LOW_CRITICALITY:\n482         return mark_safe(stars(2, 5, 'Low'))\n483   ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a2ea66d17d40edd1fc66218e2a75c589a3bf9a91aa9199ebdbcd925c069b3ec1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589272578Z",
      "vulnerabilities": {
        "vulnerabilityID": "461f25f5-48bb-4eba-ae19-2289399dde0d",
        "line": "484",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "483     if value == Product.VERY_LOW_CRITICALITY:\n484         return mark_safe(stars(1, 5, 'Very Low",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5a570f339fd2ffee8ae4633be08292b590c080bf320f0b1be4d46c81df46b4dc"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58927359Z",
      "vulnerabilities": {
        "vulnerabilityID": "a4a746cf-58eb-4a39-aac6-51d0e68f633e",
        "line": "484",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "483     if value == Product.VERY_LOW_CRITICALITY:\n484         return mark_safe(stars(1, 5, 'Very Low",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ae673adb7b9b3e7faa0ef7e3d59f37d3e6c2b67156deaa0c94346d32542d40cb"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589274621Z",
      "vulnerabilities": {
        "vulnerabilityID": "d97188da-5799-4330-a1e6-1a79ff2158dd",
        "line": "486",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "485     if value == Product.NONE_CRITICALITY:\n486         return mark_safe(stars(0, 5, 'None'))\n487 ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5a35d537bfd493f8a279d17b3529ef0fd64a0ae40a4627f4057882dce43d0113"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589275625Z",
      "vulnerabilities": {
        "vulnerabilityID": "58d9349e-6bd4-4c48-866c-864aaca4acad",
        "line": "486",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "485     if value == Product.NONE_CRITICALITY:\n486         return mark_safe(stars(0, 5, 'None'))\n487 ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "de7d9f4e3f6aa2ecd02f1ba35f0290b58201766de2fc75eac65ce4d1bcecdd2e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589276684Z",
      "vulnerabilities": {
        "vulnerabilityID": "fde1a318-484d-472d-a8b6-b21007bc6327",
        "line": "502",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "501     if value == Product.WEB_PLATFORM:\n502         return mark_safe(icon('list-alt', 'Web'))\n503 ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f6a5e69cdfbe2cdf094dcdefd1a37ca35a1af8017524c6eb2356192be3e73ec4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589277737Z",
      "vulnerabilities": {
        "vulnerabilityID": "b0cbc5ab-0136-4bc7-98ec-6591c2905420",
        "line": "502",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "501     if value == Product.WEB_PLATFORM:\n502         return mark_safe(icon('list-alt', 'Web'))\n503 ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "76eecbf71daa2176201496cfae2679524defd37ec53144cc2bc707c5f6e875aa"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589278835Z",
      "vulnerabilities": {
        "vulnerabilityID": "4064d756-3854-441a-aeb8-b68765c0457c",
        "line": "504",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "503     elif value == Product.DESKTOP_PLATFORM:\n504         return mark_safe(icon('desktop', 'Deskto",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9914dad2ffe9fc2197761002854cebcc1e029246187e8e6cd0b5e84ceed3340a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58927975Z",
      "vulnerabilities": {
        "vulnerabilityID": "68628abb-47e6-4f2e-a7c8-5cf6bbc72a9f",
        "line": "504",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "503     elif value == Product.DESKTOP_PLATFORM:\n504         return mark_safe(icon('desktop', 'Deskto",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9de42323d6cc7910f09ab195eb507f4059f5dd5943685c3a20241f54e5af6efc"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58928083Z",
      "vulnerabilities": {
        "vulnerabilityID": "6924d014-144a-47e3-8384-40fc340ba42a",
        "line": "506",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "505     elif value == Product.MOBILE_PLATFORM:\n506         return mark_safe(icon('mobile', 'Mobile')",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "aff56b3c93254763dec8c3d2e01d16e82cdd668caac9c8e0aedb624baf1dbc85"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589281873Z",
      "vulnerabilities": {
        "vulnerabilityID": "8f76e890-0478-46c0-879d-d34fc1897d0a",
        "line": "506",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "505     elif value == Product.MOBILE_PLATFORM:\n506         return mark_safe(icon('mobile', 'Mobile')",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "06fba38ef76800a66576a271d6f6b53c08784324e8aa7a060de4843c55ae0390"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589282903Z",
      "vulnerabilities": {
        "vulnerabilityID": "7298abd3-aebf-4007-8f59-c315f18a10b8",
        "line": "508",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "507     elif value == Product.WEB_SERVICE_PLATFORM:\n508         return mark_safe(icon('plug', 'Web S",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5f6f174aaa666a2512d7d45c8a4b84efdf5038f882a991a84aa77d11811667c8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589283957Z",
      "vulnerabilities": {
        "vulnerabilityID": "280e54d9-7d2c-42c5-9e43-22dc545d7ed1",
        "line": "508",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "507     elif value == Product.WEB_SERVICE_PLATFORM:\n508         return mark_safe(icon('plug', 'Web S",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "144a9b13f51da8450d10ab350c934df544714451508c154edd1487949b92480e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589284778Z",
      "vulnerabilities": {
        "vulnerabilityID": "372a8537-95cb-4758-99cc-e219b658be04",
        "line": "510",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "509     elif value == Product.IOT:\n510         return mark_safe(icon('random', 'Internet of Things')",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7911a2661b30714a6e34f35f155ff4ae66b7a95919648dc869b82791522d51e5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589285584Z",
      "vulnerabilities": {
        "vulnerabilityID": "b1fec8be-ad7a-4a08-bce0-52dc0aab9b39",
        "line": "510",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "509     elif value == Product.IOT:\n510         return mark_safe(icon('random', 'Internet of Things')",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c53e0dd1240bbcc01570e6cc7442d39697dbf68a1dda7d808b6c8cbfcc9b0a7f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589286447Z",
      "vulnerabilities": {
        "vulnerabilityID": "61bdb974-2c6d-4b2a-8734-482647a16a58",
        "line": "518",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "517     if value == Product.CONSTRUCTION:\n518         return mark_safe(icon('compass', 'Explore'))\n5",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "53a347ab4ec7ff2f11d9a90593a896e18db31fea69066b4b92ba179a9af7d2db"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589287263Z",
      "vulnerabilities": {
        "vulnerabilityID": "8a35d153-2fd5-42c4-bd93-126815a3f2aa",
        "line": "518",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "517     if value == Product.CONSTRUCTION:\n518         return mark_safe(icon('compass', 'Explore'))\n5",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "824f695954ee3b25ad1c9876e0220fd907c495f6e3e79808bf564915bd42df67"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589288076Z",
      "vulnerabilities": {
        "vulnerabilityID": "8d1976ae-c193-4d79-9420-b91488972024",
        "line": "520",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "519     if value == Product.PRODUCTION:\n520         return mark_safe(icon('ship', 'Sustain'))\n521   ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "aa2b4030b5ca9a12a895942eae69b0585116f0a4ff9d43c0dc78c2b973a4d664"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589288916Z",
      "vulnerabilities": {
        "vulnerabilityID": "76e3c641-17ec-4ad0-aa62-4b41f04dbd43",
        "line": "520",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "519     if value == Product.PRODUCTION:\n520         return mark_safe(icon('ship', 'Sustain'))\n521   ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1b29b5ce8abee07bf33ded06991fb0211fa59246f3b7d9c10b39b8c113ab072a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589289728Z",
      "vulnerabilities": {
        "vulnerabilityID": "d8537fe3-9e67-4c1d-97c2-5ffeb84dce2a",
        "line": "522",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "521     if value == Product.RETIREMENT:\n522         return mark_safe(icon('moon-o', 'Retire'))\n523  ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8c7ddae2efaccc9d9724577038c66e7fb21a5a151c912b4791e005726e43e7e0"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589290558Z",
      "vulnerabilities": {
        "vulnerabilityID": "6fe159dd-83e6-413a-a9e6-28dda31b46fb",
        "line": "522",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "521     if value == Product.RETIREMENT:\n522         return mark_safe(icon('moon-o', 'Retire'))\n523  ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7d9c64d660559c8058d9ff193dc656769e88daa5a288edf1b38f7c9422aee30e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589291378Z",
      "vulnerabilities": {
        "vulnerabilityID": "b97609d9-9c85-4fca-9b56-8121df891499",
        "line": "530",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:\n530         return mark_safe(icon('book', 'T",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "48092c45956ec537cf3eb4805d52bec0023be1ae331fe0de281014ce36a944fc"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589292195Z",
      "vulnerabilities": {
        "vulnerabilityID": "c0849176-c483-4a29-8446-34327bb89dc8",
        "line": "530",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:\n530         return mark_safe(icon('book', 'T",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3971cd891bec38985b264ca09d84f0c2b9edadbce8282642ed4a7cc04ad49f5c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589293055Z",
      "vulnerabilities": {
        "vulnerabilityID": "45e616f5-ccde-4581-8e94-810ec1e091c5",
        "line": "532",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "531     if value == Product.PURCHASED_ORIGIN:\n532         return mark_safe(icon('money', 'Purchased'",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1e37789fcf55d5b24e01aa01b761699feff2166f60041d589ab3bd2f4ad030a1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589293868Z",
      "vulnerabilities": {
        "vulnerabilityID": "dc330812-5520-4120-b3d1-0cd0c1c48e60",
        "line": "532",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "531     if value == Product.PURCHASED_ORIGIN:\n532         return mark_safe(icon('money', 'Purchased'",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e54a913a5eff3bb63a501cae994feedd76763e0c7bd02d298f6a37f6769e96ed"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589294675Z",
      "vulnerabilities": {
        "vulnerabilityID": "cf81391b-5dbb-47bb-b0ed-0e07e090db7a",
        "line": "534",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "533     if value == Product.CONTRACTOR_ORIGIN:\n534         return mark_safe(icon('suitcase', 'Contra",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "80740eec0afaeb2aed38fa8e92512b984274d9da356994e4c927de94cabb0cff"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58929548Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a91fe17-16ec-4538-8253-a26355c14ee8",
        "line": "534",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "533     if value == Product.CONTRACTOR_ORIGIN:\n534         return mark_safe(icon('suitcase', 'Contra",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9f266d2943753aba25d81d6bd1cd6bdce0ec27e82a98b57731e763b94916d634"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589296287Z",
      "vulnerabilities": {
        "vulnerabilityID": "8160d680-9e5f-40cb-a154-f377e14b9f03",
        "line": "536",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:\n536         return mark_safe(icon('home', '",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "86872ecaff5e4a6d05adfe1433696a79e70a898b59dfd302090f1bed6d83411e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589297115Z",
      "vulnerabilities": {
        "vulnerabilityID": "aa0b3f6f-79bf-4133-9473-ff5e1c9bf85a",
        "line": "536",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:\n536         return mark_safe(icon('home', '",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "25e154bf4d4f4ca5879e642f13e4198fde1738ef054c19c5ec7b654cef7ca5c7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589298257Z",
      "vulnerabilities": {
        "vulnerabilityID": "c37b936b-011c-4bb8-ae93-07b839ef574d",
        "line": "538",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "537     if value == Product.OPEN_SOURCE_ORIGIN:\n538         return mark_safe(icon('code', 'Open Sour",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "506e46a688cbb0e9b1b8e159b384feee9942ca2b3c24cda9e5ab8d8ff76f5330"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589299064Z",
      "vulnerabilities": {
        "vulnerabilityID": "9c4933c2-6e10-4cda-a0dc-b1c009ece159",
        "line": "538",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "537     if value == Product.OPEN_SOURCE_ORIGIN:\n538         return mark_safe(icon('code', 'Open Sour",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "867731b8657cce0ea61b3aff188ea995007d80a39e4f1b521228dd38d42b1ff3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589299937Z",
      "vulnerabilities": {
        "vulnerabilityID": "9b9e4186-4d9a-4b9e-90af-4fac38dfcb76",
        "line": "540",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "539     if value == Product.OUTSOURCED_ORIGIN:\n540         return mark_safe(icon('globe', 'Outsource",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "36513e513d8a0658b318a333212ac3676b6730c1e5801f8ceefb4ed30067c2c6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58930076Z",
      "vulnerabilities": {
        "vulnerabilityID": "5b3499ed-60b0-4a1f-ae1e-1101c5eae6e4",
        "line": "540",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "539     if value == Product.OUTSOURCED_ORIGIN:\n540         return mark_safe(icon('globe', 'Outsource",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fd3b283b738132e6ce20caf589a7a9d5ca19df68703a78e74c602c85599fd33f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589301575Z",
      "vulnerabilities": {
        "vulnerabilityID": "48a2b5c8-6d06-4e2a-81e7-cc4dfe5dc80b",
        "line": "548",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "547     if value:\n548         return mark_safe(icon('users', 'External Audience'))\n549     else:\n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "192981ef6172d1fd5fbd7a8b23559dd7a03260acf3f303a8409e69e2c883c613"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589302388Z",
      "vulnerabilities": {
        "vulnerabilityID": "cc3a015d-7062-490f-bdfb-2acb39f64f17",
        "line": "548",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "547     if value:\n548         return mark_safe(icon('users', 'External Audience'))\n549     else:\n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8ad7362d964ad76240867dc2e222bb3a61dce10fa14f5446608eefe345044a9b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589303201Z",
      "vulnerabilities": {
        "vulnerabilityID": "cfe8fa15-2a17-4097-ac66-02ae7249ee3c",
        "line": "556",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "555     if value:\n556         return mark_safe(icon('cloud', 'Internet Accessible'))\n557     else:\n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "67207c8b8a9ab43df3eeef040fa8c515b3d5c673024ef842b0f72c4ad4912771"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589304028Z",
      "vulnerabilities": {
        "vulnerabilityID": "2af87e5a-5e9f-4cb7-a560-d8f775ac3b29",
        "line": "556",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "555     if value:\n556         return mark_safe(icon('cloud', 'Internet Accessible'))\n557     else:\n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "071be96fad12b8a3c78559e507c4728abc935ce20d99bcee7ab3e9f1279b2136"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589304831Z",
      "vulnerabilities": {
        "vulnerabilityID": "4f38db6e-113a-43a9-b501-5d37df48dd8a",
        "line": "903",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "902 \n903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b257e5527b1f041f460aa270dccc4c0ac98b3114f4f998a6bd83d6f461598876"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589305683Z",
      "vulnerabilities": {
        "vulnerabilityID": "c0475470-58ff-4167-a1f3-47eee8b06a21",
        "line": "903",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "902 \n903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1b0c7f2d6cb8608b03018e9c256de94f49fbc89c1f049ab04027224b20c25608"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58930655Z",
      "vulnerabilities": {
        "vulnerabilityID": "c2493981-64bb-4f45-81f2-248f909c43fb",
        "line": "949",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "948 \n949     return mark_safe(html % (icon, color, icon,\n950                                 esc(tes",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "043e03c0555bdca01a2567181c460adc68c05d412f1de49134a555ac02949850"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589307391Z",
      "vulnerabilities": {
        "vulnerabilityID": "91c5cef5-9538-4139-8cf0-cb0996f71042",
        "line": "949",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "948 \n949     return mark_safe(html % (icon, color, icon,\n950                                 esc(tes",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2caf7c7c4e54fcacfd47bd2bc9f7976e048802601d4765285062a79c84dc1c0b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589308204Z",
      "vulnerabilities": {
        "vulnerabilityID": "be8823e4-0ad4-4c52-8c6e-86f3ae7ad320",
        "line": "988",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "987 \n988     return mark_safe(html % (list_of_status_changes))\n",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c8b57d1e4cb1cd43e77cff3d62cb3debb2ce5653c866889efa17ee0c0fca8723"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589309008Z",
      "vulnerabilities": {
        "vulnerabilityID": "ca4daf74-f931-4688-990c-b4206d799a85",
        "line": "988",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/display_tags.py",
        "code": "987 \n988     return mark_safe(html % (list_of_status_changes))\n",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7a7656753f87f0e2e842c5a737f17524ec2b0d8574393216106632978c41aea4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589309833Z",
      "vulnerabilities": {
        "vulnerabilityID": "64f29276-e061-4d89-8815-1a47c7d57b00",
        "line": "21",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/get_banner.py",
        "code": "20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']\n21       ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d92ee04ce1d2079e53b9590abdf3e3c4fc7ef8263318205d797e57b9e79d6510"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589310657Z",
      "vulnerabilities": {
        "vulnerabilityID": "adac1718-9fc0-4203-b9a5-0f695757417a",
        "line": "21",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/get_banner.py",
        "code": "20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']\n21       ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7374fdc94d3142fa57529a6848a432dbeb7765604ac8f68cb2fdf1031592c395"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589311472Z",
      "vulnerabilities": {
        "vulnerabilityID": "a9bc1b7a-ded3-4d25-971d-96260c65cbb7",
        "line": "23",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/navigation_tags.py",
        "code": "22                 inputs += \"\u003cinput type='hidden' name='\" + escape(parts[0]) + \"' value=''/\u003e\"\n23   ",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e5e3e3ee2771c8b202891779bff5bdc145602b704cb9f6eee3fda7bf7baaca7b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589312285Z",
      "vulnerabilities": {
        "vulnerabilityID": "68d0be28-f8ec-4739-8f72-f242c09f8541",
        "line": "23",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/navigation_tags.py",
        "code": "22                 inputs += \"\u003cinput type='hidden' name='\" + escape(parts[0]) + \"' value=''/\u003e\"\n23   ",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f1a63c18408d86376855d99e0883034cb3c723430b3b9040985bda1a4d9a442f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589313142Z",
      "vulnerabilities": {
        "vulnerabilityID": "30a15f8e-90b8-4c2c-8394-407b3ad31e73",
        "line": "65",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/navigation_tags.py",
        "code": "64     link = '\u003ca title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\"\u003e' + display + '\u0026nbs",
        "details": "Potential XSS on mark_safe function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6419d69d0fe0a29ba73698c0d1c74068cda0ed8978429441afe228bfb2c301c8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58931396Z",
      "vulnerabilities": {
        "vulnerabilityID": "349d14b4-f464-447d-90e9-45ad41756b1e",
        "line": "65",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/navigation_tags.py",
        "code": "64     link = '\u003ca title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\"\u003e' + display + '\u0026nbs",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3c9386e645ed50451c9128c1125833394f218defa566cfdcf64c61a07d6d4876"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589314777Z",
      "vulnerabilities": {
        "vulnerabilityID": "11d864d5-497a-4790-abcd-5e285edf25ad",
        "line": "122",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/navigation_tags.py",
        "code": "121         pages.insert(0, PaginationNav(page.previous_page_number(),\n122                      safe",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "66fe8dbee7f862b4665374bf481f6b1ad71ec715c55399c46e8e515445eae731"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58931559Z",
      "vulnerabilities": {
        "vulnerabilityID": "099a13e1-fa25-41e4-b52e-c2c8b1d6e729",
        "line": "127",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/templatetags/navigation_tags.py",
        "code": "126         pages.append(PaginationNav(page.next_page_number(),\n127                      safe('Next'",
        "details": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3f45643a36dcd8410a41c5025654bf91f102fa4cbf9bdd33aaff7fbd18eb893f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58931641Z",
      "vulnerabilities": {
        "vulnerabilityID": "f377de39-2532-469c-8b93-eac09667bb24",
        "line": "45",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/blackduck/parser.py",
        "code": "44 \n45             dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)\n46                 ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ce2e83efe644a62194453f450704e278ae28e973ddcf86fa28d67526333970a9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589317223Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b5339bc-b5db-40a2-88e0-34dba86f80b9",
        "line": "72",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/bugcrowd/parser.py",
        "code": "71 \n72                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "61413a597fbed8863f57e80fa7e33f14c732f823039a779b16c8fec1f13d9d33"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589318034Z",
      "vulnerabilities": {
        "vulnerabilityID": "f8068700-5921-4fc4-aba3-f68c46c7c420",
        "line": "61",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/bundler_audit/parser.py",
        "code": "60             fingerprint = \"bundler-audit\" + gem_name + gem_version + advisory_cve + sev\n61       ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4c52532712a6337c910b676123a4637833b68e373dc9b03ac4a0c24436991176"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589319727Z",
      "vulnerabilities": {
        "vulnerabilityID": "15187882-fcba-451d-abbe-29567601b767",
        "line": "24",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/burp_enterprise/parser.py",
        "code": "23         parser = etree.HTMLParser()\n24         tree = etree.parse(filename, parser)\n25         if",
        "details": "Using lxml.etree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.parse with its defusedxml equivalent function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fab9916358d967a420cc0d141858f52dba7be3ce9ab4fc5e2a15ab8ed6b6f21b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589320529Z",
      "vulnerabilities": {
        "vulnerabilityID": "a4977dce-cd09-49fc-90b1-01b21552da80",
        "line": "53",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/ccvs/parser.py",
        "code": "52                     vuln['image_id'] = tree['vendors'][vendor]['image_id']\n53                    ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5817e1dba9021bda4f2cd4fad7048b18600fc6ffd2e251c03c845a2506308da7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589321401Z",
      "vulnerabilities": {
        "vulnerabilityID": "754c7db2-d38a-4e32-80e1-3e39d47231af",
        "line": "56",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/cobalt/parser.py",
        "code": "55 \n56                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d65475f0393beb4ec3b19db5c3369e1c60c17e021f7d61eb9c34c6df54c5815a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589322212Z",
      "vulnerabilities": {
        "vulnerabilityID": "422e7c46-42cb-4b83-be52-7c8570ae8595",
        "line": "57",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/tools/contrast/parser.py",
        "code": "56                 endpoint = Endpoint(\n57                     host=\"0.0.0.0\",\n58                   ",
        "details": "Possible binding to all interfaces.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "259ba96bbfc16ec416b2f1ae848101b9a837f4148ccf3c7702d04beed69d8067"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589323024Z",
      "vulnerabilities": {
        "vulnerabilityID": "bed25712-5516-4d82-adf0-5cdbd16b721a",
        "line": "22",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/dependency_check/parser.py",
        "code": "21                                             finding.file_path.lower())\n22             key = hashl",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "84b2692a2dc75efc2dea3664e4da50a58e2c3eff516578fdce18ecb34862158f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589324666Z",
      "vulnerabilities": {
        "vulnerabilityID": "1efe217f-5755-48cd-8640-eccf4e2c5a1a",
        "line": "77",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/h1/parser.py",
        "code": "76 \n77             dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()\n78   ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e485aa174938ced0c26fb03f7cf2576926078427f80a399d07b670c17a2c2c94"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58932716Z",
      "vulnerabilities": {
        "vulnerabilityID": "de5be09c-597a-4063-8b14-e3a866144703",
        "line": "55",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/huskyci/parser.py",
        "code": "54                             continue\n55                         unique_key = hashlib.md5(\n56     ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ca48c1621d0ded98e1d09892617d97a6cb326cfbb2ad215563d069d8951afc5a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589328074Z",
      "vulnerabilities": {
        "vulnerabilityID": "6c5b68ce-4ded-4b78-9957-b96de5f72489",
        "line": "70",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/ibm_app/parser.py",
        "code": "69                     # Now time to start assigning issues to findings and endpoints\n70            ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "693cd6e5a573ffbacb8911a0f1430e4f161d97b9f3c9a937ddb6e27f2f0a2f5c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58932936Z",
      "vulnerabilities": {
        "vulnerabilityID": "4fbc88c0-47c8-4cd9-8cde-19adb6e65356",
        "line": "59",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/immuniweb/parser.py",
        "code": "58 \n59             dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdi",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "257f79475bed357a686c8de635c0fcf66982f313c2f1d9347e61f4736868fd1f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58933153Z",
      "vulnerabilities": {
        "vulnerabilityID": "7aaa7293-5cc2-444a-82b2-0b367eb21832",
        "line": "88",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/kiuwan/parser.py",
        "code": "87 \n88                 key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.des",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "581f403ce2440dcdf4a887eca387cb3df83d371293183f54e404fff06c93f53e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589332556Z",
      "vulnerabilities": {
        "vulnerabilityID": "571a3608-a053-40b5-8e7b-4cb70bdd2b1e",
        "line": "55",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/ort/parser.py",
        "code": "54             item = get_item(model, test)\n55             unique_key = hashlib.md5((item.title + it",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4341131c169a3c806d3cf2f77450883472965e3f626b8e9f27bd17e3e383fe1e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589334712Z",
      "vulnerabilities": {
        "vulnerabilityID": "e1a5f707-cd4d-45c9-bd9f-bcc2b1a29b8b",
        "line": "351",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/qualys_webapp/parser.py",
        "code": "350     # supposed to be safe against XEE: https://docs.python.org/3/library/xml.html#xml-vulnerabil",
        "details": "Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cc5e6cb0b1bc767fbe5ef9042dc181fe5c4f3bca48a1e0ea71141182c2fd7ca6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589335709Z",
      "vulnerabilities": {
        "vulnerabilityID": "76b4a8a7-0d1a-447d-815c-7f85f6759df7",
        "line": "40",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/retirejs/parser.py",
        "code": "39                         encrypted_file = node['file']\n40                         unique_key = has",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8d24a42ae25dcab5d7bfb71ea62b20a018920ff093b8efeb4e2eea2492b77fb8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589336625Z",
      "vulnerabilities": {
        "vulnerabilityID": "1f56b0f7-ff3b-4eba-abf2-604854bcedb3",
        "line": "27",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/safety/parser.py",
        "code": "26             try:\n27                 response = urllib.request.urlopen(url)\n28                 ret",
        "details": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6c496c0e9e71795a9317d34aa7e6cbecff8b06a8ec3ded3ad9cdc187ff2740b0"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589337601Z",
      "vulnerabilities": {
        "vulnerabilityID": "3976d7a0-8a48-4518-816b-195ea2153593",
        "line": "84",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/scantist/parser.py",
        "code": "83             if item:\n84                 hash_key = hashlib.md5(\n85                     node.get('",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "894c06d2e1b043801eaf784c53f5cc8efcb02722871500e690af407be1625a6a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589339233Z",
      "vulnerabilities": {
        "vulnerabilityID": "333c8c2c-bef9-46c5-b50d-379e31adaebf",
        "line": "33",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/sonarqube/parser.py",
        "code": "32         parser = etree.HTMLParser()\n33         tree = etree.parse(filename, parser)\n34         if",
        "details": "Using lxml.etree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.parse with its defusedxml equivalent function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6947c2de3fd647cd387bd00617148bcd9b91397138398d9805f378324a0673e2"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589340883Z",
      "vulnerabilities": {
        "vulnerabilityID": "54a68a2c-9989-4b07-9036-21498083c8cf",
        "line": "272",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/sonarqube_api/importer.py",
        "code": "271         parser = etree.HTMLParser()\n272         details = etree.fromstring(vuln_details, parser)",
        "details": "Using lxml.etree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.fromstring with its defusedxml equivalent function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "300964ee37278b5149c1267ac1b3260b10bf8ace1e02bf176f196e81fcde753b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589341767Z",
      "vulnerabilities": {
        "vulnerabilityID": "a02c4d36-5e0f-4327-83c9-7793de921a8d",
        "line": "115",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/sslyze/parser_xml.py",
        "code": "114                 if title and description is not None:\n115                     dupe_key = hashlib",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "dee0a74430ddb75e21a9d8bffa38a0843996a6712a69d1536733b28cb3be4019"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58934257Z",
      "vulnerabilities": {
        "vulnerabilityID": "744d48c5-7546-4842-97aa-158e3e10ea1b",
        "line": "54",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/trufflehog/parser.py",
        "code": "53 \n54             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n55           ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "38bef6c1189393b6c95b5675449e7c965f42f405769f0ca5d4f16bec18c90994"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58934338Z",
      "vulnerabilities": {
        "vulnerabilityID": "6c8e03af-be02-41f4-99bb-1dc9b36ea2a4",
        "line": "50",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/trufflehog3/parser.py",
        "code": "49 \n50             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n51           ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e365c775040619c2072cb5b97ad9e6129e448c9f1e9f12c8f53ac0e5177ab0fe"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589344187Z",
      "vulnerabilities": {
        "vulnerabilityID": "ad7ad72d-5146-48d1-b70e-45b5ed0241bd",
        "line": "68",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/twistlock/parser.py",
        "code": "67             if finding is not None:\n68                 key = hashlib.md5((finding.severity + '|' ",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4141f5d9877668fa0f96801e0bea982a7d46f02a55860b68aa04479db6f7a860"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589344991Z",
      "vulnerabilities": {
        "vulnerabilityID": "38e74fb8-35f6-40fa-b3ad-99812c6a42fa",
        "line": "111",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/vcg/parser.py",
        "code": "110             if finding is not None:\n111                 key = hashlib.md5((finding.severity + '|",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0c42c16d619825dbe18beba29635117e8c51f3b64b2c2695585a50cd3003a812"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589345801Z",
      "vulnerabilities": {
        "vulnerabilityID": "3b7b1a96-72b5-429b-a407-fbabc501ce89",
        "line": "171",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/vcg/parser.py",
        "code": "170             if finding is not None:\n171                 key = hashlib.md5((finding.severity + '|",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4a3f9c5147c1f2259b33eb5fd5fc85a161f93101b6cabaf83147f63ce9242e4c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589346621Z",
      "vulnerabilities": {
        "vulnerabilityID": "ddfc86b5-e8ed-4f27-8e86-6186273341e3",
        "line": "190",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/whitehat_sentinel/parser.py",
        "code": "189 \n190             dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()\n191 \n",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7566485f61580512f566716c98efc9c890c0bc6ad31b99d3130753b920cd349b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589347428Z",
      "vulnerabilities": {
        "vulnerabilityID": "ef186a05-44fc-4e5b-b72d-aa2880c986bd",
        "line": "104",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/whitesource/parser.py",
        "code": "103         def _dedup_and_create_finding(dupes, vuln):\n104             dupe_key = hashlib.md5(vuln.",
        "details": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "79ed548eae019de1535843df553d0ab6ab2b7bcd65b25be806d214a349a89d03"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589364881Z",
      "vulnerabilities": {
        "vulnerabilityID": "b092b305-afe6-449b-84aa-f3f0cb214f32",
        "line": "34",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/unittests/tools/test_contrast_parser.py",
        "code": "33             self.assertEqual('http', endpoint.protocol)\n34             self.assertEqual('0.0.0.0'",
        "details": "Possible binding to all interfaces.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "617d708d52663fa03404ce52a51416ff9c715c8271bb1e2bbadc9db6e3b00ed4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589365724Z",
      "vulnerabilities": {
        "vulnerabilityID": "4bc2b53a-c5ea-4ca6-979b-b16094a63701",
        "line": "49",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/unittests/tools/test_contrast_parser.py",
        "code": "48             self.assertEqual('http', endpoint.protocol)\n49             self.assertEqual('0.0.0.0'",
        "details": "Possible binding to all interfaces.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "79a5fcb53ae823ad1c8a3c6f80c0790419b8e880ecc560bfbe390080650672c4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589366532Z",
      "vulnerabilities": {
        "vulnerabilityID": "122656a3-7e12-41a6-a784-8cb078ba18b6",
        "line": "53",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/unittests/tools/test_contrast_parser.py",
        "code": "52             self.assertEqual('http', endpoint.protocol)\n53             self.assertEqual('0.0.0.0'",
        "details": "Possible binding to all interfaces.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "95f3c2a94698d2d2367300c0b9a330645c31acf0d3334e7badb14ad57830fa1a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589367347Z",
      "vulnerabilities": {
        "vulnerabilityID": "ee695c5d-b0bb-43e9-a175-250fd8c0eeda",
        "line": "206",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/unittests/tools/test_jfrog_xray_unified_parser.py",
        "code": "205         self.assertEquals(\"XRAY-86054 - Docker before 1.5 allows\", item.title[:37])\n206         ",
        "details": "Probable insecure usage of temp file/directory.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "40a8d7a981434775449b264cf604a5e2d96108ed30e36f732d32fd0df625da18"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589368214Z",
      "vulnerabilities": {
        "vulnerabilityID": "0c707c0b-7b17-470d-905b-d7c6d51427c9",
        "line": "209",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/unittests/tools/test_jfrog_xray_unified_parser.py",
        "code": "208         self.assertEquals(\"Docker before 1.5 allows\", item.description[:24])\n209         self.as",
        "details": "Probable insecure usage of temp file/directory.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2730e2aa7ecedb815a503255113612a380e871422a887962a174d7eaf466fa10"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589369032Z",
      "vulnerabilities": {
        "vulnerabilityID": "4d368459-aaf3-4ec9-90d6-4b1a2856ecd5",
        "line": "91",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/unittests/tools/test_tfsec_parser.py",
        "code": "90         self.assertEqual(\"All ports exposed for egressing data\", finding.impact)\n91         self.",
        "details": "Probable insecure usage of temp file/directory.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1a3d0033bf35bf3bacbc136ba9b56c031a3655b08ac4ac8d994695f52edb353c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58936984Z",
      "vulnerabilities": {
        "vulnerabilityID": "0072091f-505b-42d2-a7e5-b587507e3c58",
        "line": "49",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/wsgi.py",
        "code": "48                         })\n49         debugpy.listen((\"0.0.0.0\", debugpy_port))\n50         if os.",
        "details": "Possible binding to all interfaces.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "4a96f15570189dfb38d39f04fd2cf0af27ab097d7a91cf23f75eabfb9667d45c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589164214Z",
      "vulnerabilities": {
        "vulnerabilityID": "5bfc7905-cb2e-4765-a2e4-65fe79d71873",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "Dockerfile.nginx",
        "code": "RUN using 'wget' and 'curl'",
        "details": "Avoid using both 'wget' and 'curl' since these tools have the same effect. - Shouldn't use both curl and wget - Pick one util, either 'wget' or 'curl' - [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run https://avd.aquasec.com/appshield/ds014]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "",
        "commitEmail": "",
        "commitHash": "",
        "commitMessage": "",
        "commitDate": "",
        "vulnHash": "553cdb786d6c9de0ba2087b758e01d8d96d1014458992493dbfb0b66a1c6c36c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58920206Z",
      "vulnerabilities": {
        "vulnerabilityID": "210e7b21-e5c7-4f3d-bbc6-8f818aa6affd",
        "line": "27",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/benchmark/views.py",
        "code": "26         Benchmark_Product.objects.bulk_create(requirements)\n27     except:\n28         pass\n29 \n",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d13571e636ecbc8fa3c1d389affa60f29ae7841aac93bf29b0651da0871679ee"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589202878Z",
      "vulnerabilities": {
        "vulnerabilityID": "56eba96c-7691-4017-b8b6-ab0ffb89cc95",
        "line": "602",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/cred/views.py",
        "code": "601         cred = Cred_Mapping.objects.get(pk=ttid)\n602     except:\n603         pass\n604     if req",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d785aa0adeb883e27fd80b4125dad3c4a619636be2c7fd056268076d4a85567b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58920369Z",
      "vulnerabilities": {
        "vulnerabilityID": "2bb02986-1d0c-43cd-a53f-ce5a302ad20e",
        "line": "16",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/db_migrations/0047_jira_minimum_severity_default.py",
        "code": "15                 ss.save()\n16         except Exception as e:\n17             # probably a test run ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d2e4d4407392ee0fc0c57f18f40825046a022473bda28473f783672006f5dcd3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.5892045Z",
      "vulnerabilities": {
        "vulnerabilityID": "ab565765-54b2-4eb6-a9b7-105e57a32b34",
        "line": "21",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/db_migrations/0061_jira_webhook_secret.py",
        "code": "20                 ss.save()\n21         except Exception as e:\n22             # probably a test run ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "22a95d9a648d1134dcb3c80e5d33d621bfccd883e909c83b07fb16ff1badd080"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589206171Z",
      "vulnerabilities": {
        "vulnerabilityID": "70b2452c-770d-4b84-a5f2-89e4eb69e9d4",
        "line": "152",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/finding/helper.py",
        "code": "151         finding_group.save()\n152     except:\n153         pass\n154 \n",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "08dc03466e28b1e7f3a19f4833335950bb8f355e0a1c542a082585cf412ddbd5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58920863Z",
      "vulnerabilities": {
        "vulnerabilityID": "283a7359-206b-4d31-974e-305771323c62",
        "line": "4",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/forms.py",
        "code": "3 from datetime import datetime, date\n4 import pickle\n5 from crispy_forms.bootstrap import InlineRad",
        "details": "Consider possible security implications associated with pickle module.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "77d31a7d3e400487871d3fffcc03179511c960cf45f5bbd41a89c8c4be9f14c1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589218344Z",
      "vulnerabilities": {
        "vulnerabilityID": "016ff845-ba50-436f-a56f-61e64a7ec949",
        "line": "326",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/google_sheet/views.py",
        "code": "325             sheet_names.append(date)\n326         except:\n327             pass\n328     try:\n",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9e9a912010df7e19af4246ae6414197a14abf094aaf2cb1c89db9396a6e0a879"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589219173Z",
      "vulnerabilities": {
        "vulnerabilityID": "fb967263-4a46-4c96-801d-79ddf2e685e8",
        "line": "422",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/google_sheet/views.py",
        "code": "421                                                     note_type = Note_Type.objects.get(name=note_",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7a0e19dfc713a505a3ed5c252b0318479d8df191121c47db56aabcc78f32e171"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589222489Z",
      "vulnerabilities": {
        "vulnerabilityID": "87e42d85-042d-4f44-b5af-8a21d8a15684",
        "line": "33",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/middleware.py",
        "code": "32     def __call__(self, request):\n33         assert hasattr(request, 'user'), \"The Login Required ",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "493b174f886a3a28258d3726bd2e2187aaceba94128decad53cbb20fbd3c5b38"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589223303Z",
      "vulnerabilities": {
        "vulnerabilityID": "5721d4cc-e196-47f4-89b9-b48437bc8efa",
        "line": "2647",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/models.py",
        "code": "2646     def get_status(pass_fail):\n2647         if pass_fail == 'Pass':\n2648             return 'su",
        "details": "Possible hardcoded password: 'Pass'",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c656b5fbe8d2466dff2320eab1a06a1c17a2102467a1fd6e7395285bc143b7ea"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58922411Z",
      "vulnerabilities": {
        "vulnerabilityID": "e28fb955-25f6-4c33-a3dc-c8649f24ea10",
        "line": "2649",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/models.py",
        "code": "2648             return 'success'\n2649         elif pass_fail == 'Fail':\n2650             return 'da",
        "details": "Possible hardcoded password: 'Fail'",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5bde52f67d580382d049f08780e500b01dac4497ea74e9d74b857704e63c34de"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589224964Z",
      "vulnerabilities": {
        "vulnerabilityID": "2149d0bd-ede6-4f9b-bc3b-99b7669a378e",
        "line": "36",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/okta.py",
        "code": "35     REDIRECT_STATE = False\n36     ACCESS_TOKEN_METHOD = 'POST'\n37     SCOPE_SEPARATOR = ' '\n",
        "details": "Possible hardcoded password: 'POST'",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1bf9a990890b913b6c4e93287fa1bddb1fabb151347653702609501549a826cf"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589225869Z",
      "vulnerabilities": {
        "vulnerabilityID": "4c0a637e-121e-46b5-8527-d8db90e6d2eb",
        "line": "69",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "dojo/okta.py",
        "code": "68     REDIRECT_STATE = False\n69     ACCESS_TOKEN_METHOD = 'POST'\n70     RESPONSE_TYPE = 'code'\n",
        "details": "Possible hardcoded password: 'POST'",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6c8f68e12ded53a974bf6fd5a8313f5cd4b94562ebaaae8d2f569c105ec60d86"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589226731Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b7de93e-d4ec-4a29-a383-8ad8d71c47ca",
        "line": "840",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/product/views.py",
        "code": "839                     gform.save()\n840                 except:\n841                     pass\n842   ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "202a1f672a9eec4514ac539d96c24e8c67b9b8e5cc497fc705e273f106016819"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589254323Z",
      "vulnerabilities": {
        "vulnerabilityID": "a2f53af3-617f-4429-87f6-ade32caebf9d",
        "line": "1",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/survey/views.py",
        "code": "1 import pickle\n2 from datetime import date\n3 \n",
        "details": "Consider possible security implications associated with pickle module.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2cb5b2ae6fa8b27bbb5bc724d0beabb9c13a08f88ed8c5bd65a6b9e7a0f83afc"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589318868Z",
      "vulnerabilities": {
        "vulnerabilityID": "6cb123e3-0f1e-4f44-9716-44c984ed863a",
        "line": "4",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/burp_enterprise/parser.py",
        "code": "3 \n4 from lxml import etree\n5 \n6 from dojo.models import Endpoint, Finding\n",
        "details": "Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "765f43772196a0eba756a1757f5949b8822563ce76989a7887446da0735f1e84"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589323854Z",
      "vulnerabilities": {
        "vulnerabilityID": "e57ccc38-f020-4f15-9f6c-c0d9386d31ea",
        "line": "34",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/gitlab_api_fuzzing/parser.py",
        "code": "33                 description += \"\\n\" + location[\"crash_state\"]\n34             except:\n35          ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "13310c12094e0da48b8086126529a72174bc3b6c65be5d21459ff32420f32fa1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589325487Z",
      "vulnerabilities": {
        "vulnerabilityID": "4001b7a5-a22b-459d-acb3-922c46fada0d",
        "line": "124",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/h1/parser.py",
        "code": "123             description += \"CVSS: {}\\n\".format(cvss)\n124         except:\n125             pass\n12",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cb2b8e5b7153dd668b45796b2bf309bd780885788c0dee43ebfa3eb332ab2660"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589326353Z",
      "vulnerabilities": {
        "vulnerabilityID": "2bf21fcb-64eb-4f99-ade4-38597aa3a2d6",
        "line": "135",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/h1/parser.py",
        "code": "134             description += \"\\n##Weakness: {}\\n{}\".format(weakness_title, weakness_desc)\n135     ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a8f72c6573c4abb3c7a01c80544e887bd46faea0cdf89fb43a7f109e8e4bdc7f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589330467Z",
      "vulnerabilities": {
        "vulnerabilityID": "247e67c0-81f4-4fbb-9565-fd2bca0abd6b",
        "line": "79",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/kiuwan/parser.py",
        "code": "78                 finding.cwe = int(row['CWE'])\n79             except:\n80                 pass\n81 \n",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3e96d14ca54335c1b5c9167debe74058b1565fc1e16b69d6dd59c531f274a8c8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589333583Z",
      "vulnerabilities": {
        "vulnerabilityID": "3524a62a-3ccd-47ce-bcc3-2cb7bfd36191",
        "line": "7",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/qualys_webapp/parser.py",
        "code": "6 import re\n7 import xml.etree.ElementTree\n8 from datetime import datetime\n",
        "details": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1bc326bb09e609b24340804035c5b47581012ad892ef9bb89be57a71aebf4480"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589338425Z",
      "vulnerabilities": {
        "vulnerabilityID": "40e60120-68dc-477d-8be0-2c613a42d1f7",
        "line": "5",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/sonarqube/parser.py",
        "code": "4 from django.utils.html import strip_tags\n5 from lxml import etree\n6 \n7 from dojo.models import Fin",
        "details": "Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "184147263552120e6349c05e130bb067f4983763d8d9dfb9a5f86567d3a190bf"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589340066Z",
      "vulnerabilities": {
        "vulnerabilityID": "3aeeec1b-5aa2-4894-bd29-84fc3caa82fd",
        "line": "5",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/tools/sonarqube_api/importer.py",
        "code": "4 import html2text\n5 from lxml import etree\n6 import textwrap\n",
        "details": "Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ac7ca2c920dde3ebdcf8a2ebcabd48295d3b17604d40564d1304f44feeb656a9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589348301Z",
      "vulnerabilities": {
        "vulnerabilityID": "70a9a1ce-5b18-4e2f-9ac2-9ca8d4630931",
        "line": "93",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "92 \n93     assert response.status_code == expected_code, \\\n94         f\"Response invalid, returned w",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "47ac6d1bab468dc938cfc03915228732f97e0098ed3d3b0b8237315a7af2cb1a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58934914Z",
      "vulnerabilities": {
        "vulnerabilityID": "724cfd27-1319-4cc5-869b-8fe0ec722b67",
        "line": "253",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "252         _check(schema, obj)\n253         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "12597054b92dd5e6b8e7794f143e1f23d1703f39a166b9268ef2ea9b3d969797"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589349989Z",
      "vulnerabilities": {
        "vulnerabilityID": "4662d565-30e2-43ef-9092-0ef857c9e120",
        "line": "285",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "284             methods = paths.get(path, None)\n285             assert methods is not None, f\"{path}",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f4cd64547ceb5e7b186ec9033a4cb4487b2a05a9b86991c217ef23c56c6dc8f4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589350801Z",
      "vulnerabilities": {
        "vulnerabilityID": "342d401a-f45e-46d1-81e5-0b6f99adcdf5",
        "line": "288",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "287             endpoint = methods.get(method, None)\n288             assert endpoint is not None, f\"",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "10ed5e07d8cebd4640d7bf267ed70c53e9ec28f87fcd45274aa1d5d062115a4d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589351614Z",
      "vulnerabilities": {
        "vulnerabilityID": "b1a07795-7fe7-45fa-9156-a22e9a12cfb9",
        "line": "826",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "825         result_json = result.json()\n826         assert result_json[\"duplicate\"]\n827         asse",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3ea691275d1cc61d261059f879270226df324768b63f225db31ac0ed7d23d334"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589352576Z",
      "vulnerabilities": {
        "vulnerabilityID": "048adb0d-56f5-42d6-a1a2-500ad122b7d8",
        "line": "827",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "826         assert result_json[\"duplicate\"]\n827         assert result_json[\"duplicate_finding\"] == 3",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8067b456cc7f6645316495a87ffc140c7682d2d8c51c52e5c83d445af2754aa0"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589353386Z",
      "vulnerabilities": {
        "vulnerabilityID": "c2ff2aef-868a-498c-82e4-3b1c98a6f9f7",
        "line": "831",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "830         result = self.client.get(self.url + \"3/duplicate/\")\n831         assert result.status_cod",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b12d1cf3b78d1c9cc8645d92fac2c5593e7e608a7f193ebb391c0cde5026c061"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589354196Z",
      "vulnerabilities": {
        "vulnerabilityID": "6ab591f1-8e29-4cb0-be58-5f913c712854",
        "line": "834",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "833         # Should return all duplicates for id=3\n834         assert set(x[\"id\"] for x in result_j",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ca12c962f304202889f233962312010b7b5816184c4599045495e756cdfe4273"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589355062Z",
      "vulnerabilities": {
        "vulnerabilityID": "6851247d-d8d2-4ad3-bdbb-9a68ecd6947d",
        "line": "842",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "841         result_json = new_result.json()\n842         assert not result_json[\"duplicate\"]\n843     ",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "50f26657a373d1af71fc29d7161f3d69f9cbb7497fc566df5c85c92a8894af17"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589355874Z",
      "vulnerabilities": {
        "vulnerabilityID": "139c2847-9bf6-4e7c-a299-b5ada853e112",
        "line": "843",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "842         assert not result_json[\"duplicate\"]\n843         assert result_json[\"duplicate_finding\"] ",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "747e3b9b3c7e9f39e762df063aeb1c501b879d9c6b512d571293139329418747"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589356687Z",
      "vulnerabilities": {
        "vulnerabilityID": "dcc338b4-af1f-480e-a2ea-94f5df93e4f8",
        "line": "882",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "881 \n882         assert False, \"Metadata was not created correctly\"\n883 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "0d24259ad5086e3f6df52d952631732f53cb66e8a45012a1b25f60c8089fa21f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589357502Z",
      "vulnerabilities": {
        "vulnerabilityID": "2b3088d4-ea43-4944-a08c-9a3953fdb110",
        "line": "886",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "885         result = self.client.post(self.base_url, data={\"name\": \"test_meta\", \"value\": \"40\"})\n886 ",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6be97c1e45fda6e4a121ae1e7ef92ad17f9cd462966bcd032d1e0eef683ccfa2"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589358303Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7eba7ef-e2de-42f0-8987-d319864ce10b",
        "line": "894",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "893 \n894         assert False, \"Metadata was not created correctly\"\n895 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b2bf652f8bc2f355e98f8dbd8c6128a6868767171a927093fa0b216aacac0b71"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589359134Z",
      "vulnerabilities": {
        "vulnerabilityID": "a5369d36-b5ff-4eb7-b41b-48c28352d738",
        "line": "899",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "898         result = self.client.get(self.base_url).data[0]\n899         assert result[\"name\"] == \"te",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3f3613d0dcd6548e3f707f385336592ef0d782f67b651012c19cab1669f8add2"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589359949Z",
      "vulnerabilities": {
        "vulnerabilityID": "6b447cc9-ea10-47af-bd06-542b98597d5d",
        "line": "904",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_rest_framework.py",
        "code": "903         result = self.client.get(self.base_url).data\n904         assert len(result) == 0, \"Metad",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "77641374625d731deaf2d51867c614509b26b9bb248cab3248f534f0e8290149"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589360765Z",
      "vulnerabilities": {
        "vulnerabilityID": "73a16246-2aa1-40d4-a73d-0bd3191deb65",
        "line": "67",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_swagger_schema.py",
        "code": "66 \n67     assert response.status_code == expected_code, \\\n68         f\"Response invalid, returned w",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ce63f152eb6f2a9fac8e06e267d2cf8b6d9f19d61e93bf2d256743e0f58d5450"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589361635Z",
      "vulnerabilities": {
        "vulnerabilityID": "533c8abd-3b1a-4ff8-8021-7ab743c71983",
        "line": "185",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_swagger_schema.py",
        "code": "184         _check(schema, obj)\n185         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d8e392b582612c5702f30ccb6df72329f4fb192348d8bf447040e721ed77882b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589362451Z",
      "vulnerabilities": {
        "vulnerabilityID": "d88c5fe6-f761-4c08-a197-82ed8681f9f7",
        "line": "229",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_swagger_schema.py",
        "code": "228             methods = paths.get(path, None)\n229             assert methods is not None, f\"{path}",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "07f16fc9626343b22e14f7d81080def4fa82e4b85eae3ed533eefb77a82baae9"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589363263Z",
      "vulnerabilities": {
        "vulnerabilityID": "eb032a72-ea9b-4849-ae97-df6adf3cff95",
        "line": "232",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_swagger_schema.py",
        "code": "231             endpoint = methods.get(method, None)\n232             assert endpoint is not None, f\"",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ca44ce6943f0c71ba81056b992856aa0f7b798db3db57924f290c7fd9d4b6e94"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589364076Z",
      "vulnerabilities": {
        "vulnerabilityID": "a64a81b9-a3b8-43e0-a290-6eb15e55d962",
        "line": "24",
        "column": "0",
        "confidence": "HIGH",
        "file": "dojo/unittests/test_tags.py",
        "code": "23 \n24         finding_details['title'] = 'tags test ' + str(random.randint(1, 9999))\n25         fin",
        "details": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c181a084bf7250ee7b932c68468f9319116bcf80133908cafa089e33e1ac3ac5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589370643Z",
      "vulnerabilities": {
        "vulnerabilityID": "de3327e1-d94f-48c8-8aed-0efd8e719e29",
        "line": "50",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/Import_scanner_test.py",
        "code": "49             print()\n50         assert len(missing_tests) == 0\n51 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "617f6f9b03a3951a45afe466c0bca791fa652a6122b8bb1fffdd21c54b6f0cf4"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589371442Z",
      "vulnerabilities": {
        "vulnerabilityID": "05e95db1-b107-4087-8f37-33ed77419eee",
        "line": "79",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/Import_scanner_test.py",
        "code": "78             print()\n79         assert len(missing_docs) == 0\n80 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "04e5513d36d852d35f3db7b625b01140e43e29cf089caf73b0c8808cb603d166"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589372254Z",
      "vulnerabilities": {
        "vulnerabilityID": "7700f6b2-dc42-4ca2-bd93-3fc7d1bfb92e",
        "line": "117",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/Import_scanner_test.py",
        "code": "116             print()\n117         assert len(missing_forms) == 0\n118 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "64871f999ef9c36c424cfc4d07d17b5f3c0e6b855748831b409f436ff2428bd7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589373062Z",
      "vulnerabilities": {
        "vulnerabilityID": "7ca27d86-d510-4742-9758-583e0d6a288f",
        "line": "158",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/Import_scanner_test.py",
        "code": "157             print()\n158         assert len(missing_templates) == 0\n159 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8cefe3929dec3e6a08fe7759b9f74e2902b8026a0540d4e82b2e45440acf05f6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.58937389Z",
      "vulnerabilities": {
        "vulnerabilityID": "fefa4fea-095d-4d48-8494-1a5245caf820",
        "line": "201",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/Import_scanner_test.py",
        "code": "200                     scan_map[test] = options_text[list(found_matches.keys())[index]]\n201        ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fe62185187009e80f150a58ad0adad8c48c3696071151568a7522e22a5c4af95"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589374755Z",
      "vulnerabilities": {
        "vulnerabilityID": "8678dcd9-7acc-4de2-a905-70c4931e9a44",
        "line": "244",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/Import_scanner_test.py",
        "code": "243             print()\n244         assert len(failed_tests) == 0\n245 \n",
        "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "5101d63ad7cd222062417576587d33290b7051d78fe90e8b80796c2470ddb709"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "5a8c201f-34f9-42f0-8bf2-08c9446f0d32",
      "createdAt": "2021-10-19T17:10:06.589375556Z",
      "vulnerabilities": {
        "vulnerabilityID": "279f4bf9-227a-4d4d-aecc-5a769a0bd7a9",
        "line": "191",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/base_test_class.py",
        "code": "190             no_content = self.driver.find_element_by_id(no_content_id)\n191         except:\n192  ",
        "details": "Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1da5c78eb879e97b82962cb9de9d14440b5c72e36ea92227bd9a0dc02aae9162"
      }
    }
  ]
}